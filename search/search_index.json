{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome to My Blogs!","text":""},{"location":"about/About.html","title":"About","text":"<p>Note</p> <p>\u6211\u7684\u4e2a\u4eba\u4e3b\u9875\uff1a My Homepage</p>"},{"location":"blogs/index.html","title":"Blogs here","text":"<p>Note</p> <p>\u4e00\u4e9b blog</p>"},{"location":"blogs/intern/paper-reading-20240403/reading.html","title":"paper-reading-20240403","text":""},{"location":"blogs/intern/paper-reading-20240403/reading.html#nerf-gaussian-splatting-and-eg3d","title":"NeRF, Gaussian Splatting and EG3D","text":"<p>2024 / 04 / 03</p>"},{"location":"blogs/intern/paper-reading-20240403/reading.html#_1","title":"\u6982\u5ff5\u7406\u89e3","text":""},{"location":"blogs/intern/paper-reading-20240403/reading.html#nerf","title":"NeRF","text":"<p>paper: NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis</p> <p>website: NeRF</p> <p>code: NeRF-pytorch</p> <p>Neural Radiance Fields\uff0c\u795e\u7ecf\u8f90\u5c04\u573a\uff0c\u4ec5\u7528 2D \u7684 posed images \u4f5c\u4e3a\u76d1\u7763\uff0c\u5373\u53ef\u8868\u793a\u590d\u6742\u7684\u4e09\u7ef4\u573a\u666f\uff0c\u7528\u4e8e\u65b0\u89c6\u89d2\u5408\u6210\u3002</p> <p>Radiance Field \u6307\u7684 \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u5c06\u4e00\u4e2a\u70b9\u548c\u4e00\u4e2a\u65b9\u5411\u6620\u5c04\u5230\u5149\u7ebf\u989c\u8272\u4e0a\uff0c\u53ef\u4ee5\u9884\u6d4b\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u4f4d\u7f6e\u3002\u6362\u8a00\u4e4b\uff0c\u5982\u679c\u4f60\u7ad9\u5728\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u5e76\u4e14\u770b\u5411\u67d0\u4e2a\u7279\u5b9a\u65b9\u5411\uff0c\u90a3\u4e48 Radiance Field \u5c31\u51b3\u5b9a\u4e86\u4f60\u770b\u5230\u7684\u666f\u8c61\u3002\u8bba\u6587\u4e2d\u6784\u5efa\u4e86\u4e00\u4e2a\u5305\u542b 3 \u7ef4\u7684\u4f4d\u7f6e\u4fe1\u606f\u4ee5\u53ca 2 \u7ef4\u89c6\u89d2\u4fe1\u606f\u7684\u8f90\u5c04\u573a\uff0c\u5e76\u4e14\u4f7f\u7528\u4e86\u57fa\u672c\u7684 MLP \u7f51\u7edc\u8fdb\u884c\u8868\u5f81\u3002</p> <p>NeRF \u5de5\u4f5c\u7684\u57fa\u672c\u6d41\u7a0b\u53ef\u4ee5\u603b\u7ed3\u5982\u4e0b\uff1a</p> <ul> <li>\u4f7f\u7528\u4e00\u7cfb\u52172D\u56fe\u7247\u4f5c\u4e3a\u8f93\u5165\u6570\u636e\u96c6\uff0c\u8fd9\u4e9b\u56fe\u7247\u663e\u793a\u4e86\u540c\u4e00\u573a\u666f\u4ece\u4e0d\u540c\u89d2\u5ea6\u548c\u4f4d\u7f6e\u62cd\u6444\u5f97\u5230\u7684\u7ed3\u679c</li> <li>\u9996\u5148\u4f1a\u4f30\u8ba1\u51fa\u6bcf\u5f20\u56fe\u7247\u5bf9\u5e94\u76f8\u673a\u53c2\u6570(\u5982\u4f4d\u7f6e\u3001\u7126\u8ddd\u7b49)</li> <li>\u7136\u540e\u5229\u7528\u8fd9\u4e9b\u53c2\u6570\u4ee5\u53ca\u6df1\u5ea6\u4fe1\u606f\u5c062D\u50cf\u7d20\u8f6c\u6362\u4e3a3D\u7a7a\u95f4\u5750\u6807\u548c\u89c6\u7ebf\u65b9\u5411,\u5e76\u901a\u8fc7\u795e\u7ecf\u7f51\u7edc\u5bf9Radiance Field\u8fdb\u884c\u5b66\u4e60</li> </ul> <p></p> <p>\u8bad\u7ec3\u65f6\uff0cNeRF \u4f1a\u5c1d\u8bd5\u63cf\u8ff0\u4e00\u4e2a 3D \u573a\u666f\uff0c\u5e76\u5c1d\u8bd5\u6e32\u67d3\u56fe\u50cf\u8fdb\u884c\u8bad\u7ec3\u3002</p> <p>\u751f\u6210\u65b0\u7684\u56fe\u7247\u65f6\uff0c\u9996\u5148\u9700\u8981\u786e\u5b9a\u89c6\u7ebf\u7684\u65b9\u5411\uff0c\u56fe\u50cf\u4e0a\u7684\u6bcf\u4e00\u4e2a\u50cf\u7d20\u5bf9\u5e94\u4e00\u6761 ray\uff0cray \u5728\u7a7f\u8fc7 Radiance Field \u65f6\uff0c\u4f1a\u7ecf\u8fc7\u591a\u4e2a\u91c7\u6837\u70b9\uff0c\u6bcf\u4e2a\u91c7\u6837\u70b9\u5305\u542b\u5176\u989c\u8272\u4fe1\u606f\u4ee5\u53ca\u900f\u660e\u5ea6\u4fe1\u606f (\u662f\u5426\u88ab\u906e\u6321)\u3002</p> <p>\u4e3a\u4f18\u5316 MLP \u7f51\u7edc\uff0c\u8bba\u6587\u4e2d\u8fd8\u63d0\u51fa\u4e86\u4e24\u79cd\u4f18\u5316\u65b9\u6cd5\uff1a Positional encoding \u548c Hierarchical volume sampling\u3002</p> <p>Positional encoding \u662f\u901a\u8fc7\u5c06\u7a7a\u95f4\u70b9\u7684 3D \u5750\u6807\u6620\u5c04\u5230\u4e00\u4e2a\u56fa\u5b9a\u7ef4\u5ea6\u7684\u5411\u91cf\u7a7a\u95f4\u6765\u5b9e\u73b0\u7684\u3002\u8fd9\u4e2a\u5411\u91cf\u53ef\u4ee5\u662f\u4efb\u4f55\u5f62\u5f0f\uff0c\u4f46\u901a\u5e38\u662f\u4e00\u7ec4\u53ef\u5b66\u4e60\u7684\u53c2\u6570\uff0c\u8fd9\u4e9b\u53c2\u6570\u901a\u8fc7\u7f51\u7edc\u7684\u8bad\u7ec3\u8fc7\u7a0b\u6765\u5b66\u4e60\u3002\u901a\u8fc7\u5c06\u7a7a\u95f4\u70b9\u7684\u5750\u6807\u8f6c\u6362\u4e3a\u8fd9\u79cd\u5411\u91cf\u8868\u793a\uff0c\u7f51\u7edc\u80fd\u591f\u66f4\u597d\u5730\u7406\u89e3\u573a\u666f\u4e2d\u7684\u7a7a\u95f4\u7ed3\u6784\uff0c\u5e76\u751f\u6210\u66f4\u51c6\u786e\u7684\u4e09\u7ef4\u91cd\u5efa\u7ed3\u679c\u3002</p> <p></p> <p>Hierarchical Volume Sampling  \u5219\u662f\u4e00\u79cd\u63d0\u9ad8\u6e32\u67d3\u6548\u7387\uff0c\u964d\u4f4e\u6e32\u67d3\u6210\u672c\u7684\u65b9\u6cd5\u3002\u5176\u5177\u4f53\u7684\u601d\u8def\u662f\u540c\u65f6\u4f7f\u7528\u4e24\u4e2a\u7f51\u7edc\uff0c\u4e00\u8005\u201c\u7c97\u7cd9\u201d\u4e00\u8005\u201c\u7cbe\u7ec6\u201d\u3002\u5c06\u4f53\u79ef\u91c7\u6837\u5206\u4e3a\u591a\u4e2a\u5c42\u7ea7\uff0c\u9996\u5148\u5148\u5728\u5404\u4e2a\u5c42\u7ea7\u4e0a\u8fdb\u884c\u62bd\u6837\u91c7\u6837\u3002\u518d\u6839\u636e\u8bc4\u4f30\u7ed3\u679c\u4ee5\u53ca\u9700\u6c42\u8fdb\u884c\u81ea\u9002\u5e94\u7ec6\u5316\u3002</p>"},{"location":"blogs/intern/paper-reading-20240403/reading.html#gaussian-splatting","title":"Gaussian Splatting","text":"<p>paper: 3D Gaussian Splatting for Real-Time Radiance Field Rendering</p> <p>website: 3D Gaussian Splatting</p> <p>code: 3D Gaussian Splatting</p> <p>Gaussian splatting \u4e3b\u8981\u5728 NeRF \u7684\u57fa\u7840\u4e0a\u63d0\u5347\u4e86\u89c6\u89c9\u8d28\u91cf\uff0c\u5e76\u5b9e\u73b0\u4e86\u5b9e\u65f6\u7684\u6e32\u67d3\u3002</p> <p>\u4f20\u7edf\u7684 3D \u8868\u793a\u65b9\u5f0f\u4e3b\u8981\u6709\u70b9\u548c mesh \u7f51\u683c\u3002\u4f46\u662f\u76f4\u63a5\u91c7\u6837\u7684\u8ba1\u7b97\u6210\u672c\u6602\u8d35\uff0c\u800c\u5206\u5c42\u62bd\u6837\u6e32\u67d3\u6709\u53ef\u80fd\u5f15\u5165\u566a\u58f0\u3002</p> <p></p> <p><code>SfM</code>: \u8fd0\u52a8\u7ed3\u6784\uff0c\u662f\u6307\u5728\u4e00\u7cfb\u5217\u7684\u56fe\u7247\u4e2d\u5bfb\u627e\u7a7a\u95f4\u5750\u6807\u4e00\u81f4\u7684\u53c2\u8003\u70b9\uff0c\u7528\u4ee5\u8ba1\u7b97\u62cd\u6444\u540c\u4e00\u5bf9\u8c61\u4e0d\u540c\u89d2\u5ea6\u56fe\u7247\u65f6\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u5750\u6807\u3002</p> <p>\u5728 Guassian splatting \u4e2d\uff0c\u5e76\u4e0d\u662f\u4ec5\u4ec5\u4f7f\u7528\u79bb\u6563\u7684\u70b9\u7a7a\u95f4\u5750\u6807\u8868\u793a\u573a\u666f\u4fe1\u606f\uff0c\u800c\u662f\u4f7f\u7528\u9ad8\u65af\u5206\u5e03\u63cf\u8ff0\u4e00\u4e2a\u70b9\u4ee5\u53ca\u5176\u53ef\u80fd\u7684\u8fde\u7eed\u7684\u7a7a\u95f4\u6982\u7387\u5206\u5e03\u3002</p> <p>\u4e00\u4e2a 3D \u9ad8\u65af\u5206\u5e03\u7531\u4f4d\u7f6e (\u5747\u503c)\u3001\u5404\u5411\u534f\u65b9\u5dee\u77e9\u9635\u4ee5\u53ca\u4e0d\u900f\u660e\u5ea6\u5b9a\u4e49\u3002</p> <p>3D \u9ad8\u65af\u5206\u5e03\u53ef\u5fae\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u8fdb\u884c\u4e8c\u7ef4 splatting\uff0c\u6df7\u5408\u4e0a\u4e0d\u900f\u660e\u5ea6\u53c2\u6570\u540e\uff0c\u7b49\u6548\u56fe\u50cf\u53ef\u4ee5\u4f7f\u7528 NeRF \u65b9\u6cd5\u8fdb\u884c\u6e32\u67d3\u3002</p> <p>\u63a5\u7740\u8bba\u6587\u5bf9\u4e09\u7ef4\u9ad8\u65af\u5206\u5e03\u8868\u793a\u8fdb\u884c\u4e86\u8bad\u7ec3\u4f18\u5316\u3002\u9700\u8981\u4f18\u5316\u7684\u53c2\u6570\u6709\u6bcf\u4e2a\u9ad8\u65af\u5206\u5e03\u7684\u4f4d\u7f6e\u3001\u4e0d\u900f\u660e\u5ea6\u3001\u5404\u5411\u534f\u65b9\u5dee\u77e9\u9635\u4ee5\u53ca\u7528\u4e8e\u8868\u5f81\u5149\u7167\u7684 SH (\u7403\u8c10\u7cfb\u6570)\u3002</p> <p>\u8bad\u7ec3\u7684\u8fc7\u7a0b\u5c31\u662f\u4e0d\u65ad\u5730\u628a\u8bad\u7ec3\u751f\u6210\u5f97\u5230\u7684\u89c6\u56fe\u4e0e\u771f\u5b9e\u7684\u89c6\u56fe\u8fdb\u884c\u6bd4\u8f83\u3002\u7531\u4e8e\u9ad8\u65af\u6982\u7387\u5206\u5e03\u8986\u76d6\u7684\u8303\u56f4\u6709\u53ef\u80fd\u8fc7\u5927\u4e5f\u6709\u53ef\u80fd\u8fc7\u5c0f\uff0c\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u9700\u8981\u9002\u5f53\u201c\u5206\u88c2\u201d\u6216\u201c\u514b\u9686\u201d\u9ad8\u65af\u5206\u5e03\u4ee5\u66f4\u597d\u5730\u4ece\u7a00\u758f\u5730\u9ad8\u65af\u5206\u5e03\u4e2d\u8868\u5f81\u573a\u666f\u4fe1\u606f\u3002</p> <p></p> <p>\u8bba\u6587\u4e2d\u8fd8\u8bbe\u8ba1\u4e86\u4e00\u79cd tile-based \u5149\u6805\u5668\u7684\u9ad8\u65af Splatting\uff0c\u4ee5\u5b9e\u73b0\u66f4\u4e3a\u5feb\u901f\u7684\u6574\u4f53\u6e32\u67d3\u548c\u6392\u5e8f\u3002</p>"},{"location":"blogs/intern/paper-reading-20240403/reading.html#_2","title":"\u8bba\u6587\u9605\u8bfb","text":""},{"location":"blogs/intern/paper-reading-20240403/reading.html#mip-nerf","title":"Mip-NeRF","text":"<p>paper: Mip-NeRF: A Multiscale Representation for Anti-Aliasing Neural Radiance Fields</p> <p>code: Mip-NeRF</p> <p></p>"},{"location":"blogs/intern/paper-reading-20240403/reading.html#motivation","title":"Motivation","text":"<p>NeRF \u53ef\u4ee5\u6e32\u67d3 3D \u573a\u666f\uff0c\u4f46\u662f\u82e5\u8981\u5bf9\u6bcf\u4e00\u4e2a\u50cf\u7d20\u90fd\u751f\u6210\u4e00\u6761 ray \u8fdb\u884c\u6e32\u67d3\u5219\u5f00\u9500\u6781\u5927\u3002\u8fdb\u884c\u5206\u5c42\u62bd\u6837\u6e32\u67d3\u5219\u4f1a\u5bfc\u81f4\u6a21\u7cca\u548c\u91cd\u5f71\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u6839\u636e\u5750\u6807\u91c7\u6837\u7684\u7279\u70b9\uff0cNeRF \u5728\u5e94\u5bf9\u591a\u79cd\u5c3a\u5bf8\u7684\u5206\u8fa8\u7387\u7684\u56fe\u50cf\u65f6\uff0c\u4f1a\u51fa\u73b0\u6df7\u53e0\u4f2a\u5f71\u3002</p>"},{"location":"blogs/intern/paper-reading-20240403/reading.html#contribution","title":"Contribution","text":"<p>\u8bba\u6587\u53d7\u5230\u4e86\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d MipMap \u6280\u672f\u7684\u542f\u53d1\uff0c\u4f7f\u7528\u6297\u952f\u9f7f\u5706\u9525\u4f53\u4ee3\u66ff\u4e86\u7b80\u5355\u7684\u5c04\u7ebf\uff0c\u6765\u89e3\u51b3\u6df7\u53e0\u4f2a\u5f71\u7684\u95ee\u9898\u3002</p> <p>NeRF \u4e2d\u4f7f\u7528\u4e86\u6b63\u5f26\u6ce2\u7f16\u7801\u6765\u589e\u52a0\u5750\u6807\u7684\u7eac\u5ea6\uff0c\u4f46\u4f1a\u6536\u5230\u5206\u8fa8\u7387\u5c3a\u5bf8\u7684\u5236\u7ea6\u3002\u6b64\u6587\u4e2d\u63d0\u51fa\u4e86\u79ef\u5206\u4f4d\u7f6e\u7f16\u7801 (IPE)\u3002\u5141\u8bb8\u7f51\u7edc\u4ee5\u591a\u5c3a\u5ea6\u7684\u65b9\u5f0f\u6765\u8868\u5f81\u7a7a\u95f4\u4fe1\u606f\u3002</p> <p>\u9525\u4f53\u5c04\u7ebf\u7684\u6784\u9020\u53ef\u4ee5\u4f7f\u5c3a\u5bf8\u4fe1\u606f\u663e\u5f0f\u5730\u8f93\u5165\u5230 MLP \u4e2d\uff0c\u8fdb\u4e00\u6b65\u9002\u5e94\u591a\u5c3a\u5bf8\u5730\u5b66\u4e60\u4e0e\u6e32\u67d3\u3002\u56e0\u6b64 Mip-NeRF \u4e5f\u8fdb\u4e00\u6b65\u7b80\u5316\u4e86 NeRF \u4e2d\u539f\u6709\u7684\u201c\u7c97\u201d\u201c\u7ec6\u201d\u53cc MLP \u7684\u5f62\u5f0f\uff0c\u53ea\u4fdd\u7559\u4e86\u4e00\u4e2a MLP \u7f51\u7edc\u3002</p>"},{"location":"blogs/intern/paper-reading-20240403/reading.html#dreamguassian","title":"DreamGuassian","text":"<p>paper: DreamGaussian: Generative Gaussian Splatting for Efficient 3D Content Creation</p> <p>code: DreamGaussian</p>"},{"location":"blogs/intern/paper-reading-20240403/reading.html#motivation_1","title":"Motivation","text":"<p>\u89e3\u51b3\u5f53\u524d\u57fa\u4e8e\u4f18\u5316\u65b9\u6cd5\u7684\u4e09\u7ef4\u5185\u5bb9\u521b\u5efa\u6280\u672f\u4e2d\u5b58\u5728\u7684\u6837\u672c\u4f18\u5316\u901f\u5ea6\u6162\u7684\u95ee\u9898\u3002\u8fd9\u9650\u5236\u4e86 3D \u751f\u6210\u6280\u672f\u7684\u5b9e\u9645\u5e94\u7528\u3002</p>"},{"location":"blogs/intern/paper-reading-20240403/reading.html#contribution_1","title":"Contribution","text":"<p>\u8be5\u8bba\u6587\u4e3b\u8981\u662f\u5c06 Guassian Splatting \u5e94\u7528\u5230\u4e86 3D \u5185\u5bb9\u751f\u6210\u9886\u57df\u3002</p> <p>\u6b64\u5916\uff0c\u6587\u4e2d\u8fd8\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u7f51\u683c\u63d0\u53d6\u7b97\u6cd5\u3002\u8bba\u6587\u5229\u7528\u4e86 Guassian Splatting \u4e2d\u201c\u514b\u9686\u201d\u201c\u5206\u88c2\u201d\u7684\u7279\u6027\uff0c\u5c06\u9700\u8981\u6e32\u67d3\u7684\u573a\u666f\u5212\u5206\u4e3a\u591a\u4e2a\u5c0f\u7684\u533a\u57df\uff0c\u518d\u5e94\u7528 Marching Cubes \u7b97\u6cd5\u83b7\u53d6\u4e09\u7ef4\u7f51\u683c\u3002</p> <p>\u6700\u7ec8\u5c06\u9700\u8981\u6e32\u67d3\u7684\u5bf9\u8c61\u5c55\u5f00\u4e3a UV-Map \u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u4f18\u5316\u3002</p>"},{"location":"blogs/intern/paper-reading-20240403/reading.html#eg3d","title":"EG3D","text":"<p>paper: Efficient Geometry-aware 3D Generative Adversarial Networks</p> <p>code: EG3D</p>"},{"location":"blogs/intern/paper-reading-20240403/reading.html#motivation_2","title":"Motivation","text":"<p>\u4ee5\u5f80 GAN \u53ea\u5e94\u7528\u4e8e 2D \u56fe\u50cf\uff0c\u800c\u73b0\u6709\u7684\u8ba1\u7b97\u5bc6\u96c6\u578b 3D GAN \u9650\u5236\u4e86\u751f\u6210\u56fe\u50cf\u7684\u8d28\u91cf\u548c\u5206\u8fa8\u7387\uff0c\u4f46\u82e5\u91c7\u7528\u7684\u8fd1\u4f3c\u65b9\u6cd5\u53c8\u4e0d\u5229\u4e8e\u5b9e\u73b0\u591a\u89c6\u56fe\u4e00\u81f4\u6027\u53ca\u63d0\u5347 3D \u5f62\u72b6\u8d28\u91cf\u3002</p> <p>\u4f20\u7edf\u5355\u4e00\u7684\u663e\u5f0f\u4f53\u7d20\u8868\u793a\u3001\u9690\u5f0f\u795e\u7ecf\u7f51\u7edc\u8868\u793a\uff0c\u4f46\u4e24\u79cd\u65b9\u6cd5\u7684\u5185\u5b58\u5360\u7528\u9ad8\uff0c\u8ba1\u7b97\u6548\u7387\u4f4e\uff0c\u5747\u4e0d\u9002\u5408\u8fdb\u884c\u9ad8\u5206\u8fa8\u7387\u7684\u8bad\u7ec3\u3002\u5982\u679c\u4f7f\u7528 CNN \u7f51\u7edc\u5219\u4f1a\u727a\u7272\u4e09\u7ef4\u51e0\u4f55\u8868\u793a\u7684\u8d28\u91cf\u548c\u89c6\u89c9\u4e00\u81f4\u6027\u3002</p>"},{"location":"blogs/intern/paper-reading-20240403/reading.html#contribution_2","title":"Contribution","text":"<p>\u8bba\u6587\u4e2d\u63d0\u51fa\u4e86\u4e00\u79cd\u9690\u5f0f\u8868\u793a\u3001\u663e\u5f0f\u8868\u793a\u7684\u6df7\u5408\u67b6\u6784\uff0c\u76f8\u6bd4\u5b8c\u5168\u4f7f\u7528\u9690\u5f0f\u6216\u663e\u5f0f\u65b9\u5f0f\u8fd9\u79cd\u6df7\u5408\u65b9\u6cd5\u5177\u6709\u9ad8\u8ba1\u7b97\u6548\u7387\u3001\u9ad8\u8bb0\u5fc6\u6548\u7387\u7684\u4f18\u52bf\uff0c\u907f\u514d\u4e86\u8fc7\u91cf\u7684\u786c\u4ef6\u8981\u6c42\u4ee5\u53ca\u5bf9\u5377\u79ef\u7684\u4f9d\u8d56\u3002\u663e\u5f0f\u7684\u8868\u8fbe\u964d\u4f4e\u4e86 MLP \u7f51\u7edc\u7684\u89c4\u6a21\uff0c\u63d0\u5347\u4e86\u8ba1\u7b97\u7684\u6548\u7387\u3002</p> <p></p> <p>\u8bba\u6587\u4e2d\u7ee7\u627f\u4e86 StyleGAN2 \u7684\u7279\u6027\uff0c\u5e76\u5728\u7279\u5f81\u7a7a\u95f4\u4e0a\u8fdb\u884c\u4e86\u6539\u8fdb\u3002\u5c06\u539f\u5148\u7684\u4f53\u7d20\u4fe1\u606f\u5206\u89e3\u4e3a\u4e09\u5e73\u9762\u7684\u4fe1\u606f\uff0c\u518d\u901a\u8fc7\u795e\u7ecf\u7f51\u7edc\u7684\u6e32\u67d3\uff0c\u518d\u7ecf\u8fc7\u8d85\u5206\u8fa8\u7387\u540e\u8fdb\u5165\u5224\u522b\u5668\u8fdb\u884c\u6bd4\u5bf9\u3002\u6700\u7ec8\u5c31\u53ef\u4ee5\u8bad\u7ec3\u5f97\u5230\u4e00\u4e2a\u53ef\u4ee5\u751f\u6210 3 \u5e73\u9762\u4fe1\u606f\u7684 GAN\uff0c\u7528\u4e8e 3D \u4fe1\u606f\u7684\u8868\u5f81\u3002</p> <p>\u76f8\u673a\u89c6\u89d2\u7684\u53d8\u5316\u8bb8\u591a\u60c5\u51b5\u4e0b\u4f1a\u4e0e\u56fe\u7247\u4e2d\u5bf9\u8c61\u7684\u59ff\u6001\u76f8\u5173\u8054\uff0c\u5982\u679c\u4e0d\u8fdb\u884c\u5904\u7406\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4\u89c6\u89d2\u4e0d\u4e00\u81f4\u3002\u8bba\u6587\u4e2d\u5355\u72ec\u5c06\u59ff\u6001\u8fdb\u884c\u89e3\u8026\uff0c\u5c06\u751f\u6210\u5668\u7684\u76f8\u673a\u89c6\u89d2\u56fa\u5b9a\u8fdb\u884c\u8bad\u7ec3\u3002</p>"},{"location":"blogs/intern/paper-reading-20240403/reading.html#datasets","title":"Datasets","text":"<p>real-world human face dataset: FFHQ</p> <p>small, real-world cat face dataset: AFHQv2 Cats</p>"},{"location":"blogs/intern/paper-reading-20240403/reading.html#limitations","title":"Limitations","text":"<p>\u751f\u6210\u7684 3D \u6a21\u578b\u4f9d\u7136\u6709\u4f2a\u5f71\uff0c\u4e14\u7ec6\u8282\u8f83\u4e3a\u7f3a\u4e4f\u3002\u8bad\u7ec3\u65f6\u4ecd\u9700\u8981\u83b7\u53d6\u76f8\u673a\u7684\u59ff\u6001\uff0c\u672a\u6765\u53ef\u80fd\u53ef\u4ee5\u52a0\u5165\u5bf9\u76f8\u673a\u59ff\u6001\u7684\u52a8\u6001\u5b66\u4e60\u5e76\u540c\u65f6\u52a0\u5f3a\u89e3\u8026\u3002\u6587\u4e2d\u7684\u751f\u6210\u6a21\u578b\u662f StyleGAN2\uff0c\u5176\u4f59\u7684 2D \u751f\u6210\u6a21\u578b\u53ef\u80fd\u53ef\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u6548\u679c\u3002</p>"},{"location":"blogs/srtp/10.25/10.25%E6%95%B4%E7%90%86.html","title":"10.25 result5","text":""},{"location":"blogs/srtp/10.25/10.25%E6%95%B4%E7%90%86.html#2023-10-25","title":"2023 / 10 / 25 \u603b\u7ed3","text":""},{"location":"blogs/srtp/10.25/10.25%E6%95%B4%E7%90%86.html#baseline","title":"\u4e0e baseline \u7684\u6bd4\u5bf9","text":"<p>\u6b64\u90e8\u5206\u6210\u56fe\u7247\u7684 <code>content</code> \u5747\u4e3a\uff1a</p> <p> </p> <p><code>concept</code> \u56fe\u7247\u5982\u4e0b\uff1a</p> 1 2 3 4 1 2 3 4 baseline cfg cfg modified <p><code>baseline</code> \u4f7f\u7528 50 \u6b65 train_step\uff0c\u4e0d\u4f7f\u7528 CFG \u8bad\u7ec3 target_embedding</p> <p><code>cfg</code> \u4f7f\u7528 50 \u6b65 train_step\uff0c\u8bad\u7ec3\u4e2d\u6709 0.5 \u7684\u6982\u7387\u52a0\u4e0a cfg_loss</p> <ul> <li>target \u7684\u8ba1\u7b97\u516c\u5f0f\u4e3a \\(l2\\_target = target + \\frac{cfg\\_ratio}{cfg\\_ratio+1}(src\\_pred-target)\\)\uff0ccfg_ratio = 2.0</li> </ul> <p>\u53ef\u4ee5\u89c2\u5bdf\u5230\u56fe\u7247 1 \u7684\u7ed3\u679c\u5728\u8272\u8c03\u4e0a\u66f4\u52a0\u63a5\u8fd1 concept\u3002\u56fe\u7247 2 \u5728\u751f\u6210\u7684\u7cbe\u7ec6\u7a0b\u5ea6\u4e0a\u66f4\u9ad8\u3002\u56fe\u7247 3 \u548c\u56fe\u7247 4 \u7684\u751f\u6210\u6548\u679c\u5dee\u5f02\u4e0d\u5927\uff0c\u76f8\u5bf9\u6765\u8bf4\u56fe\u7247 4 \u7565\u5fae\u66f4\u63a5\u8fd1 concept\u3002</p> <p><code>cfg modified</code> \u4f7f\u7528 50 \u6b65 train_step\uff0c\u8bad\u7ec3\u4e2d\u6709 0.5 \u7684\u6982\u7387\u52a0\u4e0a cfg_loss</p> <ul> <li>target \u7684\u8ba1\u7b97\u516c\u5f0f\u4e3a \\(l2\\_target = target + \\frac{1}{cfg\\_ratio+1}(src\\_pred-target)\\)\uff0ccfg_ratio = 2.0</li> </ul> <p>\u53ef\u4ee5\u89c2\u5bdf\u5230\u56fe\u50cf 1 \u7684\u751f\u6210\u8d28\u91cf\u5f97\u5230\u4e86\u660e\u663e\u7684\u63d0\u9ad8\uff0c\u6574\u4f53\u7684\u6241\u5e73\u5316\u98ce\u683c\u66f4\u52a0\u660e\u663e\u3002\u56fe\u7247 2 \u7684\u751f\u6210\u8d28\u91cf\u63d0\u5347\u8f83\u591a\u3002\u51fa\u73b0\u4e86\u8f83\u4e3a\u660e\u663e\u7684\u6bdb\u53d1\u6d82\u62b9\u6548\u679c\uff0c\u5305\u62ec\u773c\u775b\u90e8\u5206\uff0c\u66f4\u4e3a\u63a5\u8fd1 concept \u7684\u98ce\u683c\u3002\u56fe\u7247 3 \u56fe\u7247 4 \u4e0e baseline \u7684\u5dee\u5f02\u4e0d\u5927\uff0c\u653e\u5927\u770b\u4e4b\u540e\u53ef\u4ee5\u53d1\u73b0\u56fe\u7247\u7684\u9510\u5316\u5f97\u5230\u4e86\u4e00\u5b9a\u7684\u6539\u5584\u3002</p>"},{"location":"blogs/srtp/10.25/10.25%E6%95%B4%E7%90%86.html#cfg","title":"\u4e0d\u540c CFG \u7cfb\u6570\u7684\u6837\u4f8b\u751f\u6210","text":"<p>\u4ee5\u4e0b\u7684 train_step \u5747\u4e3a 1000\u3002</p>"},{"location":"blogs/srtp/10.25/10.25%E6%95%B4%E7%90%86.html#_1","title":"\u7b2c\u4e00\u7ec4","text":"concept content -1.0 0.0 1.0 2.0 3.0 7.5"},{"location":"blogs/srtp/10.25/10.25%E6%95%B4%E7%90%86.html#_2","title":"\u7b2c\u4e8c\u7ec4","text":"concept content 0.0 2.0 3.0 7.5"},{"location":"blogs/srtp/10.25/10.25%E6%95%B4%E7%90%86.html#_3","title":"\u7b2c\u4e09\u7ec4","text":"concept content 0.0 1.0 7.5"},{"location":"blogs/srtp/10.25/10.25%E6%95%B4%E7%90%86.html#_4","title":"\u7b2c\u56db\u7ec4","text":"concept content -2.0 0.0 2.0 7.5"},{"location":"blogs/srtp/10.25/10.25%E6%95%B4%E7%90%86.html#_5","title":"\u7b2c\u4e94\u7ec4","text":"concept content -1.0 0.0"},{"location":"notes/note.html","title":"Here are my notes","text":"<p>updating...</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html","title":"\u64cd\u4f5c\u7cfb\u7edf","text":""},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#overview","title":"Overview","text":"<p>2023 / 09 / 19</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#definition","title":"Definition","text":"<p>\u8ba1\u7b97\u673a\u7528\u6237\u548c\u8ba1\u7b97\u673a\u786c\u4ef6\u4e4b\u95f4\u7684\u4e2d\u4ecb\u7a0b\u5e8f\u3002</p> <p>A resource allocator, a control program.</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#startup","title":"Startup","text":"<p>\u6b64\u65f6\u9700\u8981 bootstrap program \u521d\u59cb\u5316\u64cd\u4f5c\u7cfb\u7edf\u5e76\u52a0\u8f7d\u3002\u901a\u5e38\u88ab\u5b58\u50a8\u5728 ROM \u6216 EPROM \u4e2d\uff0c\u4e5f\u53eb\u505a firmware\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#trap","title":"Trap","text":"<p>\u8f6f\u4e2d\u65ad\u3002\u7531\u7a0b\u5e8f\u9519\u8bef (error\uff0c\u4f8b\u5982\uff0c\u9664\u96f6) \u6216\u8005\u7528\u6237\u8bf7\u6c42\u5f15\u53d1 (system call)\u3002</p> <p>\u4e2d\u65ad\u5206\u4e3a\u4e24\u79cd\uff0c\u786c\u4e2d\u65ad (H/W)\uff0c\u8f6f\u4e2d\u65ad\u3002</p> <p>\u4e3a\u4f55\u4f7f\u7528\u8f6f\u4e2d\u65ad\uff1a</p> <ul> <li>\u5c01\u88c5\u5185\u5b58\u4ee3\u7801\uff0c\u65b9\u4fbf\u8c03\u7528\u3002</li> <li>\u53ef\u4ee5\u5bf9\u591a\u4e2a users \u7684\u4e0d\u540c\u64cd\u4f5c\u8fdb\u884c\u7ba1\u7406\u4e0e\u534f\u8c03\u3002</li> </ul> <p>\u5728 RISC-V \u4e2d\uff0c\u6240\u6709\u7684\u4e2d\u65ad\u90fd\u79f0\u4e3a traps\uff0c\u5206\u4e3a\u4e24\u7c7b interrupts (\u786c\u4e2d\u65ad)\uff0cexceptions (\u5f02\u5e38) &amp; ecalls (\u73af\u5883\u8c03\u7528) (\u5373\u8f6f\u4e2d\u65ad)\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#i-o","title":"I / O","text":"<p>\u540c\u6b65 (blocked\uff0c\u963b\u585e)\uff1aI / O \u8bbe\u5907\u53d1\u8d77\u540e\uff0c\u7528\u6237\u7684\u8fdb\u7a0b\u5c06\u4e0d\u518d\u8fdb\u884c\u3002</p> <p>\u5f02\u6b65 (non-block\uff0c\u975e\u963b\u585e)\uff1a\u5c1d\u8bd5\u8bfb\u53d6 I / O \u8bbe\u5907\u72b6\u6001\uff0c\u4f46\u7528\u6237\u7a0b\u5e8f\u4e0d\u4f1a\u5b8c\u5168\u4e2d\u65ad\u3002</p> <p></p> <p>Device-Status Table</p> <p></p> <p>\u51b3\u5b9a\u4ee5\u4f55\u79cd\u987a\u5e8f\u5904\u7406\u591a\u4e2a\u8bf7\u6c42\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#multiprocessor-multicore-system","title":"Multiprocessor / Multicore System","text":"<p>\u591a\u5904\u7406\u5668\uff1a\u5171\u4eab\u4e3b\u5b58\u3002</p> <p>\u591a\u6838\u5904\u7406\u5668\uff1a\u5171\u4eab L2 \u7f13\u5b58\u3002</p> <p>NUMA</p> <p>The CPUs are connected by a shared system interconnect.</p> <p></p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_2","title":"\u64cd\u4f5c\u7cfb\u7edf\u7ed3\u6784","text":"<p>multiprogramming\uff1a\u53ef\u4ee5\u5c06\u591a\u4e2a\u7a0b\u5e8f\u5b58\u5165\u4e3b\u5b58\u8fdb\u884c\u8fd0\u884c\uff0c\u63d0\u9ad8 CPU \u7684\u5229\u7528\u7387\u3002\u591a\u9053\u7a0b\u5e8f\u8bbe\u8ba1\u3002</p> <p>timesharing (multitasking)\uff1a\u591a\u7528\u6237\u540c\u65f6\u5206\u4eab CPU \u8d44\u6e90\uff0c\u5e76\u53ef\u4ee5\u5f97\u5230\u76f8\u5bf9\u5e94\u7684\u76f8\u5e94\u3002\u5206\u65f6\u7cfb\u7edf\u3002</p> <ul> <li>\u4f7f\u7528 CPU scheduling \u89c4\u5212\u591a\u7a0b\u5e8f\u540c\u65f6\u8fd0\u884c\u3002</li> <li>\u4f7f\u7528 Swapping \u4f7f\u5f97\u5927\u89c4\u6a21\u7684\u7a0b\u5e8f (\u5927\u4e8e\u5185\u5b58\u7a7a\u95f4)\uff0c\u53ef\u4ee5\u8fd0\u884c\u3002</li> <li>\u4f7f\u7528 virtual memory \u53ef\u4ee5\u7a0b\u5e8f\u4e0d\u5b8c\u5168\u5728\u5185\u5b58\u4e2d\u8fd0\u884c\u3002</li> </ul> <p>\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u6709\u4e24\u4e2a mode\u3002\u5982 User mode \u548c kernel mode\uff0c\u7528\u786c\u4ef6\u4e0a\u7684\u4e00\u4e9b bits \u8fdb\u884c\u8868\u5f81\u3002</p> <ul> <li>\u4e00\u4e9b\u7279\u6743\u6307\u4ee4\u53ea\u80fd\u5728 kernel mode \u4e0b\u8fd0\u884c\u3002</li> <li>\u4e24\u79cd mode \u8fdb\u884c\u4e86\u9694\u79bb\uff0c\u4e0d\u80fd\u540c\u65f6\u5904\u5728\u4e24\u79cd\u72b6\u6001\u3002</li> </ul> <p>\u4ee5\u4e0b\u4e3a\u4e24\u79cd\u6a21\u5f0f\u4e4b\u95f4\u7684\u5207\u6362\u6b65\u9aa4\uff1a</p> <p></p> <p>call system call \u662f\u4e00\u79cd\u8f6f\u4e2d\u65ad\uff0c\u4e5f\u79f0 trap\u3002\u5b9e\u9645\u4e0a\u4e3a\u7a0b\u5e8f\u4e3a\u7528\u6237\u6001\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684 API\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_3","title":"\u8fdb\u7a0b\u7ba1\u7406","text":"<p>\u8fdb\u7a0b\u662f\u6307\u4e00\u4e2a\u7a0b\u5e8f\u7684\u6267\u884c\u3002\u7a0b\u5e8f\u662f\u4e00\u4e2a\u88ab\u52a8\u7684\u5b9e\u4f53\uff0c\u8fdb\u7a0b\u662f\u4e00\u4e2a\u79ef\u6781\u7684\u5b9e\u4f53\u3002</p> <p>\u8fdb\u7a0b\u662f\u8d44\u6e90\u7684\u96c6\u5408\uff1aCPU\u3001\u5185\u5b58\u3001I/O\u3001\u6587\u4ef6\u3001\u7a0b\u5e8f\u7684\u72b6\u6001\u6570\u636e\u3002</p> <p>\u8fdb\u7a0b\u53c8\u53ef\u4ee5\u5206\u4e3a\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u4f1a\u6709\u4e00\u4e2a Program Counter\u3002</p> <p>CPU \u7684\u590d\u7528\uff0c\u6307\u7684\u5c31\u662f\u591a\u4e2a\u7a0b\u5e8f\u5e76\u53d1\u5730\u8fd0\u884c\u3002\u53ef\u4ee5\u5206\u4e3a\u65f6\u5206\u590d\u7528\u548c\u7a7a\u5206\u590d\u7528\u3002</p> <p>\u8fdb\u7a0b\u79cd\u9700\u8981\u89e3\u51b3\u8bb8\u591a\u95ee\u9898\uff0c\u5982\uff1a\u8fdb\u7a0b\u7684\u540c\u6b65\u3001\u4ea4\u6d41\u3001\u521b\u5efa\u3001\u5220\u9664\u3001\u9632\u6b62\u6b7b\u9501\u7b49\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_4","title":"\u5185\u5b58\u7ba1\u7406","text":"<p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5728\u8fd0\u884c\u7a0b\u5e8f\u65f6\uff0c\u6570\u636e\u548c\u6307\u4ee4\u90fd\u9700\u8981\u5728\u5185\u5b58\u4e4b\u4e2d\u3002</p> <p>\u8fdb\u7a0b\u7ba1\u7406\u7684\u5185\u5bb9\uff1a\u8bb0\u5f55\u5185\u5b58\u7684\u4f7f\u7528\u72b6\u6001\u3001\u5185\u5b58\u5206\u914d\u4e0e\u56de\u6536\u3001\u51b3\u5b9a\u5404\u4e2a\u8fdb\u7a0b\u7684\u5185\u5b58\u4f7f\u7528\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_5","title":"\u50a8\u5b58\u7ba1\u7406","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u4e86\u7edf\u4e00\u3001\u903b\u8f91\u7684\u4fe1\u606f\u5b58\u50a8\u89c6\u56fe\u3002</p> <p>\u50a8\u5b58\u7684\u5355\u5143\u4e3a\u6587\u4ef6\uff0c\u6bcf\u79cd\u5b58\u50a8\u4ecb\u8d28\u5747\u88ab\u8bbe\u5907\u7ba1\u7406\u3002</p> <p>\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff1a</p> <ul> <li>\u53ef\u4ee5\u4f7f\u7528\u76ee\u5f55\u7ed3\u6784\u8fdb\u884c\u7ba1\u7406\u3002</li> <li>\u8fdb\u884c\u6587\u4ef6\u8bbf\u95ee\u7684\u7ba1\u7406\u4e0e\u63a7\u5236\u3002</li> </ul> <p>\u5927\u6587\u4ef6\u7ba1\u7406\u4e2d\uff1a</p> <ul> <li>\u901a\u5e38\u4f7f\u7528\u786c\u76d8\u8fdb\u884c\u5b58\u50a8\u3002</li> <li>\u7531\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u7ba1\u7406\uff0c\u8fdb\u884c\u5b58\u50a8\u5206\u914d\u548c\u78c1\u76d8\u8c03\u5ea6\u3002\u64cd\u4f5c\u7cfb\u7edf\u7684\u8fd0\u884c\u901f\u5ea6\u9ad8\u5ea6\u4f9d\u8d56\u4e8e\u78c1\u76d8\u8c03\u5ea6\u7b97\u6cd5\u3002</li> </ul> <p>\u64cd\u4f5c\u7cfb\u7edf\u7684\u76ee\u7684\uff1a\u62bd\u8c61 (\u7cfb\u7edf\u8c03\u7528)\u3001\u590d\u7528\u3001\u9694\u79bb\u3001\u5171\u4eab (\u591a\u8fdb\u7a0b\u3001\u591a\u7528\u6237)\u3001\u5b89\u5168\u3001\u6027\u80fd\u3001\u529f\u80fd</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#os","title":"OS \u7ed3\u6784","text":"<p>2023 / 09 / 26</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#os-services","title":"OS Services","text":"<ul> <li>User interface (UI)\uff1a\u5206\u4e3a GUI \u548c CLI\u3002</li> <li>Program execution\uff1a\u5305\u62ec\u7528\u6237\u7a0b\u5e8f\u548c\u7cfb\u7edf\u7a0b\u5e8f\uff0c\u80fd\u591f\u5904\u7406\u62a5\u9519\u3002</li> <li>I / O\u3001File system\u3001\u9519\u8bef\u5904\u7406\u3001\u8d44\u6e90\u5206\u914d\u2026\u2026</li> </ul>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#system-calls","title":"System Calls","text":"<p>\u7528\u6237\u6a21\u5f0f\u8fdb\u5165\u7cfb\u7edf\u6a21\u5f0f\u7684\u552f\u4e00\u65b9\u5f0f\uff0ctrap\u3002</p> <p>\u76f8\u8f83 API (Application Program Interface)\uff0csystem call \u66f4\u52a0\u5e95\u5c42\u3002</p> <p>POSIX API\uff1aUnix\u3001Linux\u3001MacOS \u7684\u901a\u7528\u6807\u51c6\uff0c\u63d0\u4f9b\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u3002</p> <p>\u6bcf\u79cd system call \u4f1a\u88ab\u7f16\u53f7\u3002\u88ab\u8bb0\u5f55\u5728\u4e00\u5f20\u8868\u4e2d\uff0c\u653e\u5728 system-call interface\u3002</p> <p>User \u4e2d\u8c03\u7528\uff1a</p> <p></p> <p>\u9ad8\u7ea7\u8bed\u8a00\u4e2d\u8c03\u7528\uff1a</p> <p></p> <p>\u90fd\u662f\u901a\u8fc7\u67d0\u4e2a interface \u5b9e\u73b0\u72b6\u6001\u8f6c\u6362\u3002</p> <p>\u5185\u6838\u4e2d system call \u7684\u5177\u4f53\u5b9e\u73b0\u5411\u4e0a\u5c42\u5c01\u88c5\uff0c\u53ef\u4ee5\u589e\u52a0\u5176\u53ef\u79fb\u690d\u6027\u3002</p> <p>\u53c2\u6570\u4f20\u9012</p> <ul> <li> <p>\u5bc4\u5b58\u5668\u4f20\u9012\uff0c\u6700\u4e3a\u7b80\u5355\u7684\u65b9\u5f0f\u3002</p> </li> <li> <p>\u53c2\u6570\u8f83\u591a\u65f6\uff0c\u53ef\u4ee5\u5b58\u5728\u4e00\u4e2a\u5185\u5b58\u4e2d\u7684 Block \u6216\u8005 table \u4e2d\uff0c\u5c06 Block \u6216 table \u7684\u5730\u5740\u901a\u8fc7\u5bc4\u5b58\u5668\u4f20\u9012\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u53ef\u80fd\u4f20\u9012\u7684\u5730\u5740\u4e3a\u865a\u5730\u5740 (\u4e24\u79cd\u6001\u4e4b\u95f4\u7684\u4f20\u9012)\uff0c\u9700\u8981\u7ecf\u8fc7\u8f6c\u6362\u3002</p> </li> </ul> <p></p> <ul> <li>\u901a\u8fc7\u6808\u8fdb\u884c\u4f20\u9012\u3002\u4f46\u662f\u6808\u5728\u4e24\u79cd\u6001\u4e0b\u4e0d\u4e00\u5b9a\u80fd\u591f\u5171\u4eab\uff0c\u8be5\u65b9\u6cd5\u4e0d\u9002\u7528\u4e8e\u6240\u6709\u7684\u7cfb\u7edf\u3002</li> </ul> <p>\u5206\u7c7b\uff1a\u8fdb\u7a0b\u7ba1\u7406 (\u521b\u5efa child pid-\u7b49\u5f85-\u9000\u51fa)\u3001\u6587\u4ef6\u7ba1\u7406\u3001\u8bbe\u5907\u7ba1\u7406\u3001\u4fe1\u606f\u7ef4\u62a4 (\u5982\u83b7\u53d6 pid)\u3001\u4ea4\u6d41\u3001\u6743\u9650\u4fdd\u62a4\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_6","title":"\u64cd\u4f5c\u7cfb\u7edf\u7684\u8bbe\u8ba1\u548c\u5b9e\u73b0","text":"<p>\u8bbe\u8ba1\u7684\u539f\u5219\uff1aWhat will be done? \u7b56\u7565 Policy\u3002How to do it? \u673a\u5236 Mechanism\u3002\u9700\u8981\u5c06 Policy \u548c Mechanism \u5206\u79bb\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_7","title":"\u5206\u5c42\u7ed3\u6784","text":"<p>\u4f46\u8fd9\u53ea\u662f\u6982\u5ff5\u6a21\u578b\uff0c\u5b9e\u9645\u4e0a\u4e0d\u540c\u5c42\u7ea7\u4e4b\u95f4\u4ecd\u5b58\u5728\u5d4c\u5957\u3002</p> <p>\u4ee5\u4e0b\u4e3a UNIX \u7684\u7cfb\u7edf\u5206\u5c42\u6982\u5ff5\u56fe\u3002</p> <p></p> <p>UNIX \u4e3a\u5b8f\u5185\u6838\u7ed3\u6784\u3002\u5bf9\u5e94\u7684\u5fae\u5185\u6838 (\u4ec5\u5b9e\u73b0\u57fa\u672c\u7684\u529f\u80fd)\uff0c\u793a\u610f\u5982\u4e0b\uff1a</p> <p></p> <p>\u76f8\u6bd4\u5b8f\u5185\u6838\uff0c\u8bb8\u591a\u7a0b\u5e8f\u9700\u8981\u5728 User Mode \u4e2d\u5b9e\u73b0\u3002\u5fae\u5185\u6838\u6709\u65f6\u9700\u8981\u901a\u8fc7\u8fdb\u7a0b\u901a\u8baf\u5b9e\u73b0\u64cd\u4f5c\uff0c\u6548\u7387\u76f8\u6bd4\u5b8f\u5185\u6838\u53ef\u80fd\u964d\u4f4e\u3002\u4f46\u5fae\u5185\u6838\u8f83\u4e3a\u7a33\u5b9a\u3001\u5bb9\u6613\u79fb\u690d\u7b49\u3002</p> <p>\u73b0\u4ee3\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u4f1a\u4f7f\u7528\u5185\u6838\u6a21\u5757 (LKM) \u8fd9\u79cd\u673a\u5236 (Linux \u4e3a\u5b8f\u5185\u6838\uff0c\u4f46\u91c7\u7528\u4e86\u6a21\u5757\u5316 + \u52a8\u6001\u52a0\u8f7d\u7684\u673a\u5236)\u3002</p> <p></p> <p>\u53ef\u4ee5\u5728\u9700\u8981\u4f7f\u7528\u65f6\u52a0\u8f7d\u5bf9\u5e94\u7684\u6a21\u5757\u5230 kernel\u3002</p> <p>Exokernel\uff1a\u5916\u6838\uff0c\u5185\u6838\u9ad8\u5ea6\u7b80\u5316\uff0c\u53ea\u8d1f\u8d23\u8d44\u6e90\u5206\u914d\u548c\u4f4e\u7ea7\u7684\u786c\u4ef6\u64cd\u4f5c\uff0c\u5fc5\u987b\u4f7f\u7528\u5b9a\u5236\u7684\u5e93\u4f9b\u4e0a\u5c42\u5e94\u7528\u4f7f\u7528\u3002</p> <p></p> <p>\u4e0e\u5fae\u5185\u6838\u7684\u533a\u522b\u5728\u4e8e\uff0c\u901a\u8fc7\u5e93\u800c\u4e0d\u662f\u6d88\u606f\u4f20\u9012\u8fdb\u884c\u7a0b\u5e8f\u8c03\u7528\u3002\u5b58\u5728\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u5bf9\u4e8e\u5b9a\u5236\u5e93\u6587\u4ef6\u4e0d\u7edf\u4e00\uff0c\u7ef4\u62a4\u96be\u5ea6\u8f83\u9ad8\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_8","title":"\u865a\u62df\u673a","text":"<p>virtual-machine implementation\uff0c\u4e5f\u79f0 hypervisor\u3002</p> <p>\u4e24\u79cd\u865a\u62df\u673a\u7684\u65b9\u6848\uff1aType 1 (bare-metal\uff0c\u865a\u62df\u673a\u76f4\u63a5\u548c\u786c\u4ef6\u4ea4\u4e92)\uff0ctype 2 (host\uff0c\u865a\u62df\u673a\u4f9d\u8d56\u4e8e\u5bbf\u4e3b\u7cfb\u7edf)</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_9","title":"\u8fdb\u7a0b","text":"<p>2023 / 10 / 07</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_10","title":"\u6982\u5ff5","text":"<p>\u8fdb\u7a0b\uff1a\u4e00\u4e2a\u6b63\u5728\u6267\u884c\u7684\u7a0b\u5e8f\uff0c\u4e14\u9700\u8981\u662f\u88ab\u987a\u5e8f\u6267\u884c\u3002</p> <p>\u4e00\u4e2a\u8fdb\u7a0b\u7531\u4ee5\u4e0b\u51e0\u4e2a sections \u7ec4\u6210\uff1a</p> <ul> <li>text section (\u7a0b\u5e8f\u6bb5\u3001\u4ee3\u7801\u6bb5)</li> <li>data section (\u5168\u5c40\u53d8\u91cf)</li> <li>program counter</li> <li>\u6808 stack (\u51fd\u6570\u53c2\u6570\u3001\u5c40\u90e8\u53d8\u91cf\u3001\u8fd4\u56de\u5730\u5740) (\u5730\u5740\u4ece\u9ad8\u5230\u4f4e)</li> <li>\u5806 heap (\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58) (\u5730\u5740\u4ece\u4f4e\u5230\u9ad8)</li> </ul> <p></p> <p>\u6b64\u5904\u7684\u5730\u5740\u4e3a\u865a\u62df\u5730\u5740\u800c\u975e\u7269\u7406\u5730\u5740\u3002\u5b9e\u9645\u4e0a\u8fdb\u7a0b\u6240\u4f7f\u7528\u7684\u7a7a\u95f4\uff0c\u53ea\u6709 max \u7aef\u4ee5\u53ca 0 \u6bb5\u4e00\u5c0f\u90e8\u5206\u7684\u7a7a\u95f4\uff0c\u4e2d\u95f4\u5927\u90e8\u5206\u4e0d\u7528\u7684\u7a7a\u95f4\u79f0\u4e3a hole\u3002</p> <p>user code \u548c kernel \u4e0d\u4f7f\u7528\u540c\u4e00\u4e2a stack\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u5bf9\u5e94\u7684 stacks\uff0c\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u9694\u79bb\u6027</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_11","title":"\u72b6\u6001","text":"<p>\u4e00\u4e2a\u8fdb\u7a0b\u6709\u4ee5\u4e0b\u51e0\u79cd\u72b6\u6001\uff1a</p> <ul> <li>new\uff1a\u6b63\u5728\u88ab\u521b\u5efa</li> <li>running\uff1a\u6307\u4ee4\u6b63\u5728\u88ab\u6267\u884c</li> <li>waiting\uff1a\u8fdb\u7a0b\u5728\u7b49\u5f85 (\u6216 blocked) \u4e00\u4e9b\u4e8b\u4ef6 / \u54cd\u5e94 (\u4f8b\u5982\u7b49\u5f85\u952e\u76d8\u54cd\u5e94\u3001\u78c1\u76d8\u64cd\u4f5c\u5b8c\u6210)</li> <li>ready\uff1a\u8fdb\u7a0b\u7b49\u5f85\u5904\u7406\u5668\u8fdb\u884c\u5904\u7406 (\u53ef\u80fd CPU \u5904\u4e8e\u975e\u7a7a\u95f2\u72b6\u6001)</li> <li>terminate\uff1a\u4efb\u52a1\u5b8c\u6210</li> </ul> <p></p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#process-control-block-pcb","title":"Process control block (PCB)","text":"<p>\u9700\u8981\u8bb0\u5f55\u8fdb\u7a0b\u7684\u72b6\u6001\u3001\u8c03\u5ea6\u4ee5\u53ca\u5176\u4ed6\u91cd\u8981\u4fe1\u606f (\u73b0\u573a)\u3002</p> <p>PCB \u9700\u8981\u521b\u5efa\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5176\u4e2d\u5177\u4f53\u9700\u8981\u8bb0\u5f55\u7684\u90e8\u5206\u4fe1\u606f\u6709\uff1aProcess state\u3001Program counter\u3001Contents of CPU registers\u3001CPU scheduling information\u3001Memory-management information\u3001Accounting information\u3001I/O status information</p> <p></p> <p>\u8fdb\u7a0b\u8c03\u5ea6\u65f6\u9700\u8981\u4fdd\u5b58\u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\uff0c\u4f7f\u7b49\u5f85\u7ed3\u675f\u540e\u7684\u8fdb\u7a0b\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u3002</p> <p></p> <p>PCB \u5b58\u50a8\u5728 kernel stack \u4e2d\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#process-scheduling-queues","title":"\u8c03\u5ea6\u961f\u5217 Process Scheduling Queues","text":"<ul> <li> <p>\u4efb\u52a1\u961f\u5217 Job queue \u2013 set of all processes in the system</p> </li> <li> <p>\u5c31\u7eea\u961f\u5217 Ready queue \u2013 set of all processes residing in main memory, ready and waiting to execute</p> </li> <li> <p>\u8bbe\u5907\u961f\u5217 Device queues \u2013 set of processes waiting for an I/O device\uff0c\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\uff0c\u6bcf\u4e2a\u8bbe\u5907\u5bf9\u5e94\u4e00\u4e2a\u961f\u5217</p> </li> </ul> <p></p> <p>ready queue \u5b9e\u9645\u4e0a\u4e5f\u662f CPU queue\u3002</p> <p>\u4e00\u4e2a PCB \u4e00\u6b21\u53ea\u80fd\u51fa\u73b0\u5728\u4e00\u4e2a\u961f\u5217\u4e0a\u3002\u7a0b\u5e8f\u88ab\u987a\u5e8f\u6267\u884c\uff0c\u800c\u7a0b\u5e8f\u8981\u4f7f\u7528 device \u53ea\u80fd\u4f7f\u7528 system call\u3002</p> <p>\u4e00\u4e2a\u8fdb\u7a0b\u88ab timer interrupt \u6253\u65ad\uff0c\u4f1a\u88ab\u91cd\u65b0\u653e\u5165 ready queue\u3002</p> <p>Job queue \u4f1a\u94fe\u63a5\u6240\u6709\u7684\u8fdb\u7a0b\uff0c\u4e0a\u56fe\u4e2d\u672a\u7ed8\u51fa\u3002</p> <p>\u8fdb\u7a0b\u4f1a\u5728 queue \u4e4b\u95f4\u8fc1\u79fb migrate\u3002</p> <p></p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#schedulers","title":"Schedulers","text":"<ul> <li>Long-term scheduler (or job scheduler) \u2013 selects which processes should be brought into memory (the ready queue)</li> <li>Short-term scheduler (or CPU scheduler) \u2013 selects which process should be executed next and allocates CPU</li> </ul> <p>\u5f53\u4e0b\uff0c\u7528\u6237\u53d6\u4ee3\u4e86 long-term scheduler \u7684\u89d2\u8272\u3002</p> <p></p> <p>\u4e00\u822c\u8003\u8651 short-term\u3002</p> <p>\u8fdb\u7a0b schedule \u7684\u901f\u5ea6\u9700\u8981\u5c3d\u91cf\u5feb\u4ee5\u51cf\u5c11\u8fdb\u7a0b\u8c03\u7528\u7684 overhead \u65f6\u95f4\u3002</p> <p>\u6b64\u5916\u8fd8\u6709 medium-term scheduling\uff0c\u4e5f\u79f0 swap-in, swap-out\u3002\u5f53\u5185\u5b58\u4e2d\u7684\u8fdb\u7a0b\u5360\u7528\u7684\u7a7a\u95f4\u8fc7\u591a\u65f6\uff0c\u9700\u8981\u5bf9\u5185\u5b58\u8fdb\u884c\u7ba1\u7406\u3002</p> <p></p> <p>short-term scheduler \u8c03\u7528\u975e\u5e38\u9891\u7e41\u3002\u7ea6 10 ms \u5c31\u9700\u8981 timer interrupt \u8fdb\u884c\u8c03\u5ea6\uff0c\u662f\u4e3a\u4e86\u4fdd\u8bc1\u826f\u597d\u7684\u4ea4\u4e92\u6027\u3002</p> <ul> <li> <p>I/O \u7ed1\u5b9a\uff0cI/O-bound process \u2013 spends more time doing I/O than computations, many short CPU bursts</p> </li> <li> <p>CPU \u7ed1\u5b9a\uff0cCPU-bound process \u2013 spends more time doing computations; few very long CPU bursts</p> </li> </ul>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#context-switch","title":"Context Switch","text":"<p>\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5207\u6362\u4e0d\u540c\u7684\u8fdb\u7a0b\u3002</p> <p>\u4e0a\u4e0b\u6587\u5207\u6362\u65f6\u4f1a overhead\uff0c\u6b64\u65f6\u7cfb\u7edf\u4e0d\u53ef\u7528\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_12","title":"\u8fdb\u7a0b\u521b\u5efa","text":"<p>\u7236\u8fdb\u7a0b\u53ef\u4ee5\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u5b50\u8fdb\u7a0b\u8fd8\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684\u5b50\u8fdb\u7a0b\uff0c\u4f1a\u5f62\u6210\u4e00\u9897\u8fdb\u7a0b\u6811\u3002</p> <ul> <li> <p>\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u4e4b\u95f4\u53ef\u4ee5\u9009\u62e9\u5171\u4eab\u8d44\u6e90\u7684\u8303\u56f4 (\u4ece\u5171\u4eab\u5168\u90e8\u8d44\u6e90\u5230\u4e0d\u5171\u4eab)\u3002</p> </li> <li> <p>\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u53ef\u80fd\u5e76\u53d1\u8fdb\u884c\u4e5f\u53ef\u80fd\u7236\u8fdb\u7a0b\u7b49\u5f85\u5b50\u8fdb\u7a0b\u5b8c\u6210\u3002</p> </li> <li>\u5b50\u8fdb\u7a0b\u548c\u7236\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u53ef\u80fd\u662f\u590d\u5236\u5173\u7cfb (Linux)\uff0c\u4e5f\u53ef\u4ee5\u7531\u7a0b\u5e8f\u52a0\u8f7d\u3002</li> </ul> <p>\u5728 UNIX \u4e2d\uff1a</p> <ul> <li> <p>fork system call creates new process</p> </li> <li> <p>exec system call used after a fork to replace the process\u2019 memory space with a new program</p> </li> </ul> <p></p> <p>\u7236\u8fdb\u7a0b\u7684 pid \u4e3a 1 \u7684\u8fdb\u7a0b\u79f0\u4e3a orphan \u8fdb\u7a0b\u3002</p> <p>\u4e00\u4e2a fork \u7684\u4f8b\u5b50\u5982\u4e0b\uff1a</p> C++<pre><code>int main()\n{\n    pid_t  pid;\n    /* fork another process */\n    pid = fork();\n    if (pid &lt; 0) { /* error occurred */\n        fprintf(stderr, \"Fork Failed\");\n        exit(-1);\n    }\n    else if (pid == 0) { /* child process */\n        execlp(\"/bin/ls\", \"ls\", NULL);\n    }\n    else { /* parent process */\n        /* parent will wait for the child   to complete */\n        wait (NULL);\n        printf (\"Child Complete\");\n        exit(0);\n    }\n}\n</code></pre> <p>\u4e00\u4e2a\u8fdb\u7a0b\u6811\u7684\u793a\u610f\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_13","title":"\u8fdb\u7a0b\u7ec8\u6b62","text":"<p>\u5206\u4e3a exit \u548c abort\uff0c\u6839\u636e\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\uff0c\u7236\u8fdb\u7a0b\u53ef\u80fd\u4f1a\u5f71\u54cd\u5b50\u8fdb\u7a0b\u7684\u8fd0\u884c\u3002(linux \u4e0d\u5f71\u54cd)</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_14","title":"\u8fdb\u7a0b\u7684\u5408\u4f5c\u4e0e\u901a\u4fe1","text":"<p>\u8fdb\u7a0b\u901a\u4fe1\u53ef\u4ee5\u5b9e\u73b0\u4fe1\u606f\u5171\u4eab\u3001\u8ba1\u7b97\u52a0\u901f\u3001\u6a21\u5757\u5316\u8bbe\u8ba1\u3002</p> <p>Producer-Consumer Problem</p> <p>producer process \u751f\u4ea7\u4fe1\u606f\uff0c\u7531 consumer process \u4f7f\u7528\uff0c\u9700\u8981\u901a\u8fc7 buffer \u5b9e\u73b0\u4fe1\u606f\u7684\u4f20\u9012\u3002</p> <ul> <li>unbounded-buffer\uff1a\u4f20\u9012\u4fe1\u606f\u8fdc\u5c0f\u4e8e buffer \u7a7a\u95f4\u3002</li> <li>bounded-buffer\uff1abuffer \u7684\u7a7a\u95f4\u53ef\u80fd\u4f1a\u88ab\u5b8c\u5168\u4f7f\u7528\u3002</li> </ul> C++<pre><code>// shared data\n#define BUFFER_SIZE 10\ntypedef struct {\n    . . .\n} item;\n\nitem buffer[BUFFER_SIZE];\nint in = 0;\nint out = 0;\n\n\n// producer / insert\nwhile (true) {   \n    Produce an item;\n    while (((in + 1) % BUFFER_SIZE == out){}\n    /* do nothing -- no free buffers */\n    buffer[in] = item;\n    in = (in + 1) % BUFFER_SIZE;\n}\n\n// consumer / remove\nwhile (true) {\n    while (in == out){} //do nothing, nothing to consume\n    Remove an item from the buffer;\n    item = buffer[out];\n    out = (out + 1) % BUFFER_SIZE;\n    return item;\n}\n</code></pre> <p>Interprocess Communication IPC</p> <p>\u6709\u4e24\u79cd\u65b9\u5f0f\uff1ashared memory \u548c message passing\u3002</p> <p></p> <p>\u5bf9\u4e8e message passing \u8fd9\u4e00\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5206\u4e3a Direct Communication\uff0cIndirect Communication\u3002</p> <p>\u76f4\u63a5\u901a\u8baf\u4f1a\u81ea\u52a8\u5efa\u7acb\u4e24\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u8baf\u3002</p> <p>Indirect Communication \u5219\u4f1a\u4ece\u7279\u5b9a\u7684 mailbox (\u4e5f\u79f0\u4e3a\u7aef\u53e3) \u4e2d\u4f20\u8f93\u4fe1\u606f\u3002</p> <p>\u4fe1\u606f\u4f20\u9012\u4e5f\u53ef\u4ee5\u5206\u4e3a\u540c\u6b65\u548c\u5f02\u6b65\u7684\u3002\u5176\u4e2d\u540c\u6b65\u610f\u5473\u7740\u9700\u8981\u8fdb\u884c blocking \u7684\u64cd\u4f5c\u3002</p> <p>\u6536\u53d1\u6d88\u606f\u65f6\u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u6d88\u606f\u961f\u5217 (buffer)\uff0c\u5f53 buffer \u7684\u5bb9\u91cf\u4e3a 0  \u65f6\uff0c\u53d1\u9001\u8005\u5fc5\u987b\u7b49\u5f85\u63a5\u6536\u8005\u3002\u5982\u679c\u5bb9\u91cf\u662f bounded \u7684\uff0c\u5982\u679c buffer \u6ee1\u4e86\uff0csender \u4e5f\u9700\u8981\u7b49\u5f85\u3002\u5982\u679c\u662f unbounded \u5219\u65e0\u9700\u7b49\u5f85\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_15","title":"\u7ebf\u7a0b","text":"<p>2023 / 10 / 17</p> <p></p> <p>\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u4ee3\u8868\u8fd9\u4e00\u4e2a\u8fd0\u884c\u4e2d\u7684 context\uff0c\u6709\u72ec\u7acb\u7684\u5bc4\u5b58\u5668\u548c\u6808\u3002\u4e0d\u540c\u7684\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u4ee3\u7801\u6bb5\u3001\u6570\u636e\u3001\u6587\u4ef6\u3002</p> <p>\u591a\u7ebf\u7a0b\u53ef\u4ee5\u63d0\u5347\u8f6f\u4ef6\u7684\u54cd\u5e94\u6027\u4e0e\u4ea4\u4e92\u6027\uff0c\u53ef\u4ee5\u8282\u7ea6\u3001\u5171\u4eab\u8d44\u6e90\u3001\u63d0\u5347\u5e76\u53d1\u6027\uff0c\u66f4\u597d\u5730\u9002\u914d\u591a\u6838\u7684\u67b6\u6784\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#user-thread-kernel-thread","title":"User Thread &amp; Kernel Thread","text":"<p>\u7ebf\u7a0b\u7684\u5b9e\u73b0\u53ef\u4ee5\u53ea\u5728\u7528\u6237\u6001\u4e2d\u5b9e\u73b0 (\u6240\u6709 progress\uff0ckernel \u5747\u89c6\u4e3a\u5355\u7ebf\u7a0b)\u3002\u6216\u4e5f\u53ef\u4ee5\u5728\u5185\u6838\u6001\u4e0b\u5b9e\u73b0\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#multithreading-model","title":"multithreading model","text":"<p>\u5982\u4f55\u5b9e\u73b0\u591a\u7ebf\u7a0b\u3002</p> <ul> <li>many-to-one\uff1a\u591a\u4e2a\u7528\u6237\u5c42\u9762\u7684\u7ebf\u7a0b\u6700\u7ec8\u88ab\u6620\u5c04\u5230\u4e86\u5355\u4e2a\u5185\u6838\u5c42\u9762\u7684\u7ebf\u7a0b\u3002\u5355\u4e2a\u7ebf\u7a0b\u7684 blocking \u4f1a\u9020\u6210\u6240\u6709\u7ebf\u7a0b\u7684 blocking\u3002</li> </ul> <p></p> <ul> <li>one-to-one\uff1a\u7528\u6237\u6001\u4e2d\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5bf9\u5e94\u5730\uff0c\u5185\u6838\u6001\u4e2d\u4e5f\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u3002\u4f46\u82e5\u4e00\u4e2a\u8fdb\u7a0b\u521b\u5efa\u4e86\u8fc7\u591a\u7684\u7ebf\u7a0b\uff0c\u4f1a\u5f71\u54cd\u5230\u7cfb\u7edf\u7684\u8fd0\u884c\u6548\u7387\u3002</li> </ul> <p></p> <ul> <li>many-to-many\uff1a\u5185\u6838\u6001\u4e2d\u6709\u591a\u4e2a\u7ebf\u7a0b\uff0c\u4f46\u662f\u4e0d\u4f1a\u65e0\u9650\u591a\u3002</li> </ul> <p></p> <ul> <li>Two-level model\uff1a\u4e0d\u540c\u7684\u7ebf\u7a0b\u91cd\u8981\u5ea6\u4e0d\u540c\uff0c\u5bf9\u91cd\u8981\u7684\u7ebf\u7a0b\u4f7f\u7528 one-to-one\uff0c\u975e\u91cd\u8981\u7ebf\u7a0b\u4f7f\u7528 many-to-many\u3002</li> </ul> <p></p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#signal-handling","title":"signal handling","text":"<p>signal \u4e0e interrupt \u7684\u4e0d\u540c\u5728\u4e8e\uff1ainterrupt \u7531 CPU \u5904\u7406\uff0csignal \u662f\u4e00\u79cd IPC \u7684\u65b9\u5f0f\uff0c\u7528\u4e8e\u534f\u8c03 signal \u7684\u662f kernel\uff0c\u5904\u7406 signal \u7684\u6bcf\u4e2a\u8fdb\u7a0b\u7684 signal handler\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#thread-pools","title":"Thread Pools","text":"<p>\u7ebf\u7a0b\u6c60\u3002\u5e0c\u671b\u5bf9\u4e8e process request \u7684\u54cd\u5e94\u80fd\u591f\u5c3d\u91cf\u5feb\u3002\u975e\u7ebf\u7a0b\u6c60\u60c5\u51b5\u4e0b\uff0c\u54cd\u5e94 request \u7684\u6d41\u7a0b\u4e3a\u6536\u5230 request - create thread - \u5904\u7406 - cancel thread\u3002\u7ebf\u7a0b\u6c60\u4f1a\u76f4\u63a5\u521b\u5efa\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6536\u5230 request \u76f4\u63a5\u67e5\u627e\u7a7a\u95f2\u7ebf\u7a0b\u8fdb\u884c\u8c03\u7528\u3002</p> <p>\u7ebf\u7a0b\u6c60\u7684\u5927\u5c0f\u53d6\u51b3\u4e8e\u7a0b\u5e8f\u63d0\u4f9b\u7684 service \u7684\u5bb9\u91cf\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#scheduler-activations","title":"Scheduler Activations","text":"<p>\u8c03\u5ea6\u6fc0\u6d3b\u3002\u4fdd\u8bc1 APP \u59cb\u7ec8\u53ef\u4ee5\u8fd0\u884c\u6307\u5b9a\u6570\u76ee\u7684 thread\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#cpu","title":"CPU \u8c03\u5ea6","text":"<p>2023 / 10 / 19</p> <p></p> <p>\u5b9e\u9645\u4e0a CPU burst \u7684\u65f6\u95f4\u5f88\u77ed\uff0c\u800c I/O \u7684\u65f6\u95f4\u5f88\u957f\u3002\u4e3a\u63d0\u9ad8 CPU \u7684\u5229\u7528\u7387\uff0c\u9700\u8981\u8fdb\u884c multi-programming\u3002</p> <p>CPU Scheduler \u5728\u4ee5\u4e0b\u7684\u573a\u666f\u4e2d\u4f1a\u8d77\u4f5c\u7528\uff1a</p> <ul> <li>\u4e00\u4e2a\u8fdb\u7a0b\u4ece running \u8fdb\u5165\u5230 waiting \u72b6\u6001 (I/O \u8bf7\u6c42\u6216 wait())\u3002</li> <li>\u4e00\u4e2a\u8fdb\u7a0b\u4ece running \u8fdb\u5165\u5230 ready \u72b6\u6001 (\u4e2d\u65ad)\u3002</li> <li>\u4e00\u4e2a\u8fdb\u7a0b\u4ece waiting \u8fdb\u5165\u5230 ready \u72b6\u6001 (I/O \u5b8c\u6210)\u3002</li> <li>\u4e00\u4e2a\u8fdb\u7a0b\u8fd0\u884c\u7ed3\u675f\u3002</li> </ul> <p>Note</p> <p>\u4ee5\u4e0a\u7684\u60c5\u51b5\u4e2d\uff0c1\u30014 \u4e24\u79cd\u60c5\u51b5\u662f preemptive\uff0c2\u30013 \u4e3a nonpreemptive\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#dispather","title":"Dispather","text":"<p>\u5c06 CPU \u7684\u8fd0\u884c\u65f6\u95f4\u5206\u6d3e\u7ed9\u5404\u4e2a\u8fdb\u7a0b\u3002</p> <p></p> <ul> <li> <p>Dispatcher module gives control of the CPU to the process selected by the short-term scheduler; this involves:</p> </li> <li> <p>switching context</p> </li> <li> <p>switching to user mode</p> </li> <li> <p>jumping to the proper location in the user program to restart that program</p> </li> <li> <p>Dispatch latency \u2013 time it takes for the dispatcher to stop one process and start another running\u3002</p> </li> </ul> <p>Note</p> <p>Dispatch latency \u5bf9\u4e8e program \u6765\u8bf4\u662f overhead\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#criteria","title":"\u8c03\u5ea6 / \u4f18\u5316 Criteria","text":"<p>\u8c03\u5ea6\u6548\u7387\u76f8\u5173\u7684\u6307\u6807\u6709\uff1a</p> <ul> <li> <p>CPU utilization (CPU\u5229\u7528\u7387) \u2013 keep the CPU as busy as possible</p> </li> <li> <p>Throughput (\u541e\u5410\u7387) \u2013 # of processes that complete their execution per time unit</p> </li> <li> <p>Turnaround time (\u5468\u8f6c\u65f6\u95f4) \u2013 amount of time to execute a particular process (\u4ece\u63d0\u4ea4\u5230\u7ed3\u675f\u8fd0\u884c\u7684\u5168\u90e8\u65f6\u95f4)</p> </li> <li> <p>Waiting time (\u7b49\u5f85\u65f6\u95f4) \u2013 amount of time a process has been waiting in the ready queue</p> </li> <li> <p>Response time (\u54cd\u5e94\u65f6\u95f4) \u2013 amount of time it takes from when a request was submitted until the first response is produced, not output (for time-sharing environment)</p> </li> </ul> <p>\u4f18\u5316\u65f6\u9700\u8981\u8fbe\u5230\uff1a</p> <ul> <li> <p>Max CPU utilization</p> </li> <li> <p>Max throughput</p> </li> <li> <p>Min turnaround time </p> </li> <li> <p>Min waiting time </p> </li> <li> <p>Min response time</p> </li> </ul>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_16","title":"\u8c03\u5ea6\u7b97\u6cd5","text":""},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#gantt-chart","title":"Gantt Chart","text":"<p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u4e3a Gantt Chart \u7684\u4e00\u79cd\u3002\u6a2a\u5750\u6807\u4e3a\u65f6\u95f4\u8f74\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#first-come-first-served-fcfs","title":"First-come, First-served FCFS","text":"<p>\u6700\u4e3a\u57fa\u7840\u7684\u7b97\u6cd5\uff0c\u5148\u6765\u7684\u8fdb\u7a0b\u5148\u5904\u7406\u3002</p> \u5e73\u5747\u7b49\u5f85\u65f6\u95f4\uff1aP1 = 0  P2 = 24  P3 = 27P<sub>avg</sub> = 17P3 \u7684\u5468\u8f6c\u65f6\u95f4\u662f 30 \u5e73\u5747\u7b49\u5f85\u65f6\u95f4\uff1aP1 = 6  P2 = 0  P3 = 3P<sub>avg</sub> = 3"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#shortest-job-first-sjf","title":"Shortest-Job-First SJF","text":"<p>\u5bf9\u4e8e\u6bcf\u4e2a\u8fdb\u7a0b\uff0c\u8bb0\u5f55\u4e0b\u4e00\u6b21 CPU burst time\uff0c\u4f18\u5148\u8fd0\u884c\u65f6\u95f4\u6700\u77ed\u7684\u7a0b\u5e8f\u3002</p> <p>\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\u62a2\u5360\u5f0f\u4e0e\u975e\u62a2\u5360\u5f0f\u3002</p> <p>\u5bf9\u4e8e\u975e\u62a2\u5360\u5f0f\u7684\u8c03\u5ea6\uff0c\u8c03\u5ea6\u7684\u65f6\u673a\u662f\u5728\u67d0\u4e00\u8fdb\u7a0b\u7ed3\u675f\u8fd0\u884c\u65f6\uff0c\u4ece\u5f53\u524d\u7684 ready queue \u4e2d\u627e\u51fa\u65f6\u95f4\u6700\u77ed\u7684\u8fdb\u7a0b\u3002</p> <p></p> <p>Warning</p> <p>\u4ee5\u4e0a\u7684\u7b49\u5f85\u65f6\u95f4\u8ba1\u7b97\u65f6\uff0c\u9700\u8981\u51cf\u53bb arrival time\u3002</p> <p>\u5bf9\u4e8e\u62a2\u5360\u5f0f\u7684\u8c03\u5ea6\uff0c\u8c03\u5ea6\u7684\u65f6\u673a\u662f\u65b0\u8fdb\u7a0b\u5230\u8fbe\u7684\u65f6\u95f4 / \u8fdb\u7a0b\u8fd0\u884c\u7ed3\u675f\u7684\u65f6\u523b\uff0c\u9009\u62e9\u5269\u4f59 burst time \u6700\u77ed\u7684\u8fdb\u7a0b\u8fdb\u884c\u8c03\u5ea6\u3002</p> <p></p> <p>Warning</p> <p>\u4ee5\u4e0a\u7684\u7b49\u5f85\u65f6\u95f4\u8ba1\u7b97\u65f6\uff0c\u9700\u8981\u8003\u8651\u88ab\u6253\u65ad\u540e\u7684\u7b49\u5f85\u65f6\u95f4\uff0c\u4f8b\u5982 P<sub>1</sub> \u5728\u8c03\u5ea6\u7684\u4e2d\u95f4\u5b58\u5728 9 \u7684\u7b49\u5f85\u65f6\u95f4\u3002</p> <p>Note</p> <p>SJF \u8c03\u5ea6\u662f\u7406\u8bba\u4e0a\u6700\u4f18\u7684\u8c03\u5ea6\u65b9\u6848\u3002 \u4f46\u662f\u4e0d\u53ef\u6d4b\u91cf next CPU burst time\uff0c\u9700\u8981\u4f7f\u7528\u4e00\u5b9a\u7684\u4f30\u8ba1\u65b9\u6cd5\u3002\u4f8b\u5982\u4e0b\u56fe\u4e2d\u7684\u65b9\u6cd5\u4f7f\u7528\u8fc7\u53bb\u7684\u8c03\u5ea6\u65f6\u95f4\u6765\u4f30\u8ba1\u672a\u6765\u7684\u8c03\u5ea6\u65f6\u95f4\u3002 </p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#priority-scheduling","title":"Priority Scheduling","text":"<p>\u6b64\u5904\u5b9a\u4e49\u7f16\u53f7 (priority number) \u8d8a\u5c0f\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8\u3002</p> <p>\u4ece\u672c\u8d28\u4e0a\u770b\uff0cSJF \u4e5f\u662f\u4e00\u79cd priority scheduling\u3002</p> <ul> <li> <p>Problem \\(\\equiv\\) Starvation \u2013 low priority processes may never execute. \u4f4e\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u6c38\u8fdc\u5f97\u4e0d\u5230\u8fd0\u884c\u3002</p> </li> <li> <p>Solution \\(\\equiv\\) Aging \u2013 as time progresses increase the priority of the process. \u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u589e\u52a0\u7b49\u5f85\u7684\u8fdb\u7a0b\u7684 priority\u3002</p> </li> </ul>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#round-robin-rr","title":"Round Robin RR","text":"<p>\u9762\u5411\u4ea4\u4e92\u5f0f\u7cfb\u7edf / \u5206\u65f6\u7cfb\u7edf (\u591a\u4efb\u52a1\u7cfb\u7edf) \u3002</p> <p>\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u5206\u914d\u4e00\u4e2a\u65f6\u95f4\u5355\u5143 (time quantum, q)\u3002\u82e5 ready queue \u4e2d\u6709 n \u4e2a\u8fdb\u7a0b\uff0c\u67d0\u8fdb\u7a0b\u6700\u591a\u7b49\u5f85 (n-1) * q \u7684\u65f6\u95f4\u5c31\u4f1a\u5f97\u5230\u8c03\u5ea6\u3002</p> <p>Note</p> <p>q large -&gt; FIFO q small -&gt; q must be large with respect to context switch, otherwise overhead is too high</p> <p></p> <p>\u76f8\u6bd4 SJF\uff0c\u53ef\u4ee5\u53d1\u73b0\u867d\u7136 SJF \u7684\u603b\u8fd0\u884c\u65f6\u95f4\u77ed\uff0cCPU \u6548\u7387\u9ad8\uff0c\u4f46\u662f\u76f8\u5e94\u65f6\u95f4\u53ef\u80fd\u4e0d\u4e00\u5b9a\u4f18\u4e8e RR\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#multilevel-queue","title":"Multilevel Queue","text":"<p>Ready Queue \u88ab\u5206\u4e3a\u4e24\u4e2a\u961f\u5217\uff0c\u524d\u53f0 (foreground) \u4ee5\u53ca\u540e\u53f0 (background) \u4e24\u4e2a\u961f\u5217\u3002\u6bcf\u4e2a\u961f\u5217\u6709\u81ea\u5df1\u7684\u8c03\u5ea6\u7b97\u6cd5\u3002</p> <p>\u8981\u8f83\u597d\u5b9e\u73b0\u9700\u8981\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ul> <li>\u4e24\u4e2a\u961f\u5217\u4e4b\u95f4\u7684\u4f18\u5148\u7ea7\u95ee\u9898 (\u4f8b\u5982\uff0c\u662f\u5426\u5747\u4e3a\u524d\u53f0\u5e94\u7528\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u540e\u53f0\u5e94\u7528)\u3002</li> <li>\u4e24\u4e2a\u961f\u5217\u7684 CPU \u65f6\u95f4\u7684\u5206\u914d (time slice)\u3002</li> </ul>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#multilevel-feedback-queue","title":"Multilevel Feedback Queue","text":"<p>\u5e26\u53cd\u9988\u7684\u591a\u5c42\u961f\u5217\u3002\u4f8b\u5982\u67d0\u4e00\u8fdb\u7a0b\u5728 RR \u8c03\u5ea6\u4e0b\u5c1a\u672a\u5b8c\u6210\u8fd0\u884c\uff0c\u5219\u8c03\u5ea6\u7a0b\u5e8f\u4f1a\u5c06\u5176\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u961f\u5217\u4e2d\u7ee7\u7eed\u8fd0\u884c\u3002</p> <p>\u539f\u5148\u9759\u6001\u7684\u591a\u7ea7\u961f\u5217\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b starving \u95ee\u9898\uff0c\u800c\u201c\u6e38\u8d70\u201d\u53ef\u80fd\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p></p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_17","title":"\u7ebf\u7a0b\u8c03\u5ea6","text":"<p>\u4e5f\u79f0\u4e3a contention scope\u3002</p> <ul> <li> <p>Local Scheduling (Process-Contention Scope) \u2013 How the threads library decides which thread to put onto an available LWP.</p> </li> <li> <p>Global Scheduling (System-Contention Scope) \u2013 How the kernel decides which kernel thread to run next.</p> </li> </ul>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_18","title":"\u8fdb\u7a0b\u540c\u6b65","text":"<p>2023 / 10 / 26</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#race-conditon","title":"Race Conditon","text":"<p>\u5728\u4e4b\u524d\u7684 producer-consumer \u6a21\u578b\u4e2d\u52a0\u5165\u5171\u4eab\u53d8\u91cf count \u8bb0\u5f55\u961f\u5217\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u3002producer \u4e2d ++\uff0cconsumer \u4e2d --\u3002</p> <p>\u5177\u4f53\u5b9e\u73b0\u4e3a\uff1a</p> <p><code>register1 = count  register1 = register1 + 1  count = register1</code></p> <p><code>register2 = count  register2 = register2 - 1  count = register2</code></p> <p>\u82e5\u7ecf\u8fc7\u8c03\u5ea6\u540e\u987a\u5e8f\u5982\u4e0b\uff1a</p> <ol> <li>S0: producer execute register1 = count   {register1 = 5}</li> <li>S1: producer execute register1 = register1 + 1   {register1 = 6} </li> <li>S2: consumer execute register2 = count   {register2 = 5} </li> <li>S3: consumer execute register2 = register2 - 1   {register2 = 4} </li> <li>S4: producer execute count = register1   {count = 6 } </li> <li>S5: consumer execute count = register2   {count = 4}</li> </ol> <p>count \u7684\u503c\u4e0d\u7b26\u5408\u671f\u671b\u3002</p> <p>Critical Section\uff1a\u53ef\u80fd\u7531\u4e8e\u5171\u4eab\u5185\u5b58\u4ea7\u751f\u51b2\u7a81\u7684\u90e8\u5206 (\u4f46\u4e5f\u5b58\u5728\u4e0d\u8bbf\u95ee\u5171\u4eab\u5185\u5b58\u7684\u90e8\u5206)\u3002\u5927\u81f4\u7684\u6a21\u578b\u5982\u4e0b\uff1a</p> C<pre><code>do {\n    /* Entry section here */\n    // Critical section\n    /* Exit section here */\n    // Remainder section\n} while(TRUE);\n</code></pre> <p>\u82e5 Critical section \u4e2d\u7684 statements \u82e5\u5728\u64cd\u4f5c\u4e0d\u540c\u7684 data item\uff0c\u53ef\u4ee5\u5c06\u5176\u5206\u89e3\u4e3a\u66f4\u7ec6\u7c92\u5ea6\u7684 critical section\u3002\u7ec6\u7c92\u5ea6\u7684 critical section \u53ef\u4ee5\u6709\u66f4\u597d\u7684\u5e76\u53d1\u6027\u3002</p> <p>Critical section \u9700\u8981\u6ee1\u8db3\u4e09\u4e2a\u6761\u4ef6\uff1a</p> <p>\u4e92\u65a5\u6027 (mutual exclusion)\uff0c\u82e5\u4e00\u4e2a\u8fdb\u7a0b\u5728\u8fd0\u884c critical section\uff0c\u4e0e\u8be5\u8fdb\u7a0b\u5b58\u5728\u5408\u4f5c\u5173\u7cfb\u7684\u8fdb\u7a0b\u4e0d\u53ef\u8fd0\u884c\u3002</p> <p>Progress\uff0c\u5982\u679c\u5f53\u524d\u5408\u4f5c\u7684\u8fdb\u7a0b\u4e2d\uff0c\u6ca1\u6709\u8fdb\u7a0b\u5904\u4e8e critical section \u4e2d\uff0c\u5b58\u5728\u63a5\u4e0b\u6765\u5e0c\u671b\u8fdb\u5165 critical section \u7684\u51e0\u4e2a\u8fdb\u7a0b\uff0c\u9700\u8981\u4fdd\u8bc1\u8fdb\u7a0b\u8fdb\u5165 critical section \u4e0d\u4f1a\u88ab\u6c38\u4e45\u5ef6\u8fdf (\u6709\u9650\u65f6\u95f4\u5185\u9009\u62e9\u51fa\u6267\u884c critical section \u7684\u8fdb\u7a0b)\u3002</p> <p>\u6709\u9650\u7b49\u5f85 (Bounded Waiting)\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53d1\u51fa\u8bf7\u6c42\u6267\u884c critical section (\u5df2\u7ecf\u8fdb\u5165 entry section)\uff0c\u9700\u8981\u7b49\u5f85\u7684\u65f6\u95f4\u4e00\u5b9a\u662f\u6709\u9650\u7684\u3002</p> <ul> <li>\u5047\u8bbe\u6bcf\u4e2a\u8fdb\u7a0b\u8fd0\u884c\u901f\u5ea6\u4e00\u5b9a\u975e 0\u3002\u4f46\u65e0\u8fdb\u7a0b\u95f4\u76f8\u5bf9\u8fd0\u884c\u901f\u5ea6\u7684\u5047\u8bbe\u3002</li> </ul> <p>\u8f6f\u4ef6\u65b9\u6cd5 -- Peterson's Solution</p> C++<pre><code>int turn; \nBoolean flag[2];\n// for P_i (\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u4e3a P_j, \u7c7b\u4f3c)\nwhile (true) {\n    flag[i] = TRUE;\n    turn = j;\n    while ( flag[j] &amp;&amp; turn == j);\n        // CRITICAL SECTION\n    flag[i] = FALSE;\n        // REMAINDER SECTION\n}\n</code></pre> <p>\u786c\u4ef6\u65b9\u6cd5\uff1a\u5173\u95ed\u4e2d\u65ad (\u82e5 critical section\u4e0d\u80fd\u6b63\u5e38\u6267\u884c\uff0c\u4e2d\u65ad\u65e0\u6cd5\u5f00\u542f\uff1b\u591a\u6838\u6216\u591a\u5904\u7406\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u5173\u95ed\u4e2d\u65ad\u4ee3\u4ef7\u8f83\u9ad8)\uff0cAtomic \u6307\u4ee4 (\u6267\u884c\u65f6\u4e0d\u5141\u8bb8\u4e2d\u65ad)\u3002</p> <p>TestAndSet solution</p> C<pre><code>boolean TestAndSet (boolean *target) {\n    boolean rv = *target;\n    *target = TRUE;\n    return rv:\n}\nwhile (true) {\n    while (TestAndSet(&amp;lock))\n        ;   /* do nothing */\n    // critical section\n    lock = FALSE;\n    // remainder section \n}\n</code></pre> <p>\u4f46\u662f\u4ee5\u4e0a\u7684\u65b9\u6cd5\u4e0d\u6ee1\u8db3\u6709\u9650\u7b49\u5f85\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f starving \u7684\u95ee\u9898\u3002\u4f8b\u5982\u8fdb\u7a0b 1 3 \u4e92\u76f8\u62a2\u5360\uff0c\u8fdb\u7a0b 2 starving\u3002</p> <p>Swap Instruction</p> C<pre><code>void Swap (boolean *a, boolean *b) {\n    boolean temp = *a;\n    *a = *b;\n    *b = temp:\n}\nwhile (true)  {\n    key = TRUE;\n    while ( key == TRUE)\n        Swap (&amp;lock, &amp;key );\n    // critical section\n    lock = FALSE;\n    // remainder section \n}\n</code></pre> <p>\u4e0e TestAndSet \u7c7b\u4f3c\uff0c\u4f9d\u7136\u4e0d\u6ee1\u8db3\u6709\u9650\u7b49\u5f85\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#semaphore","title":"Semaphore","text":"<p>semaphore S \u4e3a\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\u3002</p> <p>\u6709\u4e24\u4e2a\u57fa\u7840\u7684 atomic \u64cd\u4f5c\uff1await() \u548c signal()\u3002</p> C<pre><code>S.wait() { \nwhile S &lt;= 0\n    ; // no-op\nS--;\n}\n</code></pre> C<pre><code>S.signal() { \n    S++;\n}\n</code></pre> <p>\u82e5\u6709\u591a\u4e2a\u8fdb\u7a0b\u540c\u65f6\u5904\u4e8e wait \u7684\u5faa\u73af\u4e4b\u4e2d\uff0cS \u88ab\u7f6e\u4e3a 1\uff0c\u7531\u4e8e wait() \u662f\u539f\u5b50\u64cd\u4f5c\uff0c\u5219\u67d0\u4e00\u8fdb\u7a0b\u9000\u51fa\u5faa\u73af\u540e\u5c06\u4f1a\u5c06 S \u91cd\u65b0\u7f6e\u4e3a 0\uff0c\u5176\u4f59\u8fdb\u7a0b\u5c06\u7ee7\u7eed\u7b49\u5f85\u3002</p> <ul> <li>counting semaphore\uff1aS \u4e3a\u6574\u5f62\u53d8\u91cf\u3002</li> <li>binary semaphore (mutex locks) \uff1aS \u53ea\u80fd\u4e3a 0 \u6216\u8005 1\u3002</li> </ul> C<pre><code>Semaphore S;    //  initialized to 1\nwait (S);\n// Critical Section\nsignal (S);\n</code></pre> <p>Semaphore \u53ef\u7528\u4e8e\u6307\u5b9a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u8c03\u7528\u987a\u5e8f\u3002</p> C<pre><code>Semaphore S;    //  initialized to 0\nP1: S1\n    S.Signal()\nP2: S.Wait()\n    S2\n</code></pre> <p>\u4ee5\u4e0a\u573a\u666f\u4e2d\uff0c\u5e0c\u671b S1 \u5728 S2 \u4e4b\u524d\u8fd0\u884c\uff0c\u5c06 S \u521d\u59cb\u5316\u4e3a 0\uff0c\u53ef\u4ee5\u5b9e\u73b0\u76ee\u7684\u3002</p> <p>\u7531\u4e8e\u9700\u8981\u4fdd\u8bc1 Wait() \u548c Signal() \u4e0d\u80fd\u540c\u65f6\u6267\u884c\uff0cwait \u548c signal \u64cd\u4f5c\u4e5f\u9700\u8981\u4f5c\u4e3a\u4e34\u754c\u533a\u4ee3\u7801\u6267\u884c\u3002\u4e00\u79cd\u6267\u884c\u65b9\u5f0f\u662f\u52a0\u9501\uff0c\u8fdb\u884c\u5fd9\u7b49\u5f85\u3002</p> <p>\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u53ef\u4ee5\u4e0d\u4f7f\u7528\u5fd9\u7b49\u5f85\uff0c\u5229\u7528 OS \u672c\u8eab\u7684\u4e0a\u4e0b\u6587\u5207\u6362\u673a\u5236\u3002</p> C<pre><code>wait (S){ \n    value--;\n    if (value &lt; 0)\n        // add this process to waiting queue\n        block();  \n}\nSignal (S){ \n    value++;\n    if (value &lt;= 0)\n        // remove a process P from the waiting queue\n        wakeup(P);  \n}\n</code></pre> <p>\u4f7f\u7528\u4fe1\u53f7\u91cf\u4f9d\u7136\u53ef\u80fd\u51fa\u73b0 deadlock \u548c starving \u95ee\u9898\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#some-problems","title":"Some Problems","text":""},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#bounded-buffer-problem","title":"Bounded-Buffer Problem","text":"<ul> <li> <p>Semaphore mutex initialized to the value 1</p> </li> <li> <p>Semaphore full initialized to the value 0, counting full items</p> </li> <li> <p>Semaphore empty initialized to the value N, counting empty items.</p> </li> </ul> C<pre><code>// producer\nwhile (true)  {\n    // produce an item\n    wait (empty);\n    wait (mutex);\n    // add the item to the  buffer\n    signal (mutex);\n    signal (full);\n}\n// consumer\nwhile (true) {\n    wait (full);\n    wait (mutex);\n    // remove an item from buffer\n    signal (mutex);\n    signal (empty);\n    // consume the removed item\n}\n</code></pre>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#readers-writers-problem","title":"Readers-Writers Problem","text":"<p>\u6709\u591a\u4e2a Reader \u548c\u591a\u4e2a Writer\u3002\u8bfb\u64cd\u4f5c\u53ef\u4ee5\u5e76\u53d1\uff0c\u4f46\u4e00\u65e6\u6709\u5199\u64cd\u4f5c\uff0c\u53ea\u80fd\u7531\u5f53\u524d\u9700\u8981\u5199\u7684\u8fdb\u7a0b\u8fdb\u884c\u8bbf\u95ee\u3002</p> <ul> <li> <p>Semaphore mutex initialized to 1, to ensure mutual exclusion when readcount is updated.</p> </li> <li> <p>Semaphore wrt initialized to 1.</p> </li> <li> <p>Integer readcount initialized to 0.</p> </li> </ul> C<pre><code>// writers\nwhile (true) {\n    wait (wrt) ;\n    // writing is performed\n    signal (wrt) ;\n}\n// readers\nwhile (true) {\n    wait (mutex) ;\n    readcount++ ;\n    if (readcount == 1)  wait (wrt) ;\n    signal (mutex);\n    // reading is performed\n    wait (mutex) ;\n    readcount-- ;\n    if (readcount  == 0)  signal (wrt) ;\n    signal (mutex) ;\n}\n</code></pre> <p>\u53ea\u6709\u7b2c\u4e00\u4e2a reader \u9700\u8981\u8fdb\u884c wrt \u7684 wait \u548c \u91ca\u653e\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#dining-philosophers-problem","title":"Dining-Philosophers Problem","text":"<p>\u4e94\u4e2a\u54f2\u5b66\u5bb6\uff0c5 \u652f\u4e0d\u540c\u7684\u7b77\u5b50\u3002\u53ea\u6709\u5f53\u54f2\u5b66\u5bb6\u9965\u997f\u65f6\uff0c\u624d\u4f1a\u8bd5\u56fe\u62ff\u8d77\u81ea\u5df1\u5de6\u53f3\u4e24\u6839\u7b77\u5b50\u3002</p> C<pre><code>// Philosopher i\nWhile (true) { \n    wait (chopstick[i]);\n    wait (chopStick[(i + 1) % 5]);\n    //  eat\n    signal (chopstick[i]);\n    signal (chopstick[(i + 1) % 5]);\n    //  think\n}\n// \u4e0a\u8ff0\u4ee3\u7801\u53ef\u80fd\u53d1\u751f\u6b7b\u9501\uff0c\u5f53\u6240\u6709\u54f2\u5b66\u5bb6\u540c\u65f6\u53d6\u540c\u4e00\u4fa7\u7684\u7b77\u5b50\u65f6\n</code></pre> <p>\u53ea\u9700\u8981\u66f4\u6539\u53d6\u7b77\u5b50\u7684\u987a\u5e8f\u5373\u53ef\u3002\u4e00\u90e8\u5206\u54f2\u5b66\u5bb6\u5148\u53d6\u5de6\u4fa7\u7684\u7b77\u5b50\uff0c\u4e00\u90e8\u5206\u5148\u53d6\u53f3\u4fa7\u7684\u7b77\u5b50\u5373\u53ef\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#monitor","title":"Monitor \u7ba1\u7a0b","text":"<p>\u4e00\u79cd\u9ad8\u5c42\u62bd\u8c61\u7684\u673a\u5236\uff0c\u5b9e\u73b0\u7ebf\u7a0b\u4e4b\u95f4\u7684\u540c\u6b65\u3002</p> C<pre><code>monitor monitor-name\n{\n    // shared variable declarations\n    // Only one process may be active within the monitor at a time\n    procedure P1 (\u2026) { \u2026. }\n    \u2026\n    procedure Pn (\u2026) {\u2026\u2026}\n    Initialization code ( \u2026.) { \u2026 }\n    \u2026\n}\n</code></pre> <p></p> <p>\u9664\u4e86\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u5176\u4ed6\u7a0b\u5e8f\u5904\u4e8e Queue \u4e2d\u7b49\u5f85\u8fdb\u5165\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#condition-variable","title":"Condition Variable","text":"<p>\u4e00\u4e2a\u8fdb\u7a0b\u8fdb\u5165\u7ba1\u7a0b\u540e\u88ab\u963b\u585e\uff0c\u963b\u585e\u7684\u539f\u56e0\u5b9a\u4e49\u4e3a\u6761\u4ef6\u53d8\u91cf\u3002\u539f\u56e0\u53ef\u80fd\u6709\u591a\u4e2a\uff0c\u6545\u53ef\u80fd\u6709\u591a\u4e2a\u6761\u4ef6\u53d8\u91cf\u961f\u5217\u3002</p> <ul> <li> <p>Two operations on a condition variable:</p> </li> <li> <p>x.wait ()  \u2013 x \u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u6b63\u5728\u8c03\u7528 monitor \u7684\u8fdb\u7a0b\u4f7f\u7528\u8be5\u64cd\u4f5c\u5c06\u81ea\u5df1\u63d2\u5165 x \u7684\u7b49\u5f85\u961f\u5217\uff0c\u91ca\u653e\u7ba1\u7a0b\uff0c\u5176\u4f59\u8fdb\u7a0b\u4e5f\u53ef\u8fdb\u5165\u3002</p> </li> <li> <p>x.signal () \u2013 x \u6761\u4ef6\u53d8\u5316\u3002\u8c03\u7528\u8be5\u64cd\u4f5c\u3002\u5524\u9192\u4e00\u4e2a\u88ab x.wait() \u963b\u585e\u7684\u8fdb\u7a0b\u3002</p> </li> </ul> <p></p> C++<pre><code>monitor Demo {\n    \u5171\u4eab\u6570\u636e\u7ed3\u6784 S;\n    init() {...}\n    take_away() {\n        // \u8d44\u6e90\u4e0d\u591f\uff0c\u5728 x \u4e0a\u963b\u585e\u7b49\u5f85\n        if(S &lt;= 0) x.wait();\n        // \u8d44\u6e90\u8db3\u591f\uff0c\u5219\u8fdb\u884c\u5904\u7406\n        ...\n    }\n    give_back() {\n        //\u89c4\u5212\u8d44\u6e90\n        ...\n        if(\u6709\u7b49\u5f85\u8fdb\u7a0b) \n            // \u5524\u9192\u8fdb\u7a0b\n            x.signal()\n    }\n}\n</code></pre>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_19","title":"\u6b7b\u9501","text":"<p>2023 / 11 / 09</p> <p>\u7531\u4e8e\u591a\u4e2a\u8fdb\u7a0b\u7684\u5e76\u53d1\u6267\u884c\uff0c\u591a\u4e2a\u8fdb\u7a0b\u56e0\u7ade\u4e89\u9020\u6210\u4e00\u79cd\u4e92\u76f8\u7b49\u5f85\u7684\u60c5\u51b5\uff0c\u82e5\u65e0\u5916\u529b\u5e72\u6d89\u65e0\u6cd5\u63a8\u8fdb\u3002</p> <p>\u6b7b\u9501\u7684\u539f\u56e0\uff1a\u5b58\u5728\u8d44\u6e90\u7684\u5171\u4eab\u3002</p> <p>\u7cfb\u7edf\u6a21\u578b\uff1a</p> <ul> <li>\u6709\u8d44\u6e90 R<sub>1</sub> ~ R<sub>m</sub>\uff0cCPU cycles, memory space, I/O devices \u7b49\uff0c\u6bcf\u79cd\u8d44\u6e90\u6709\u591a\u4e2a\u5b9e\u4f8b W<sub>i</sub></li> <li>\u9075\u5faa request - use - release \u534f\u8bae</li> </ul> <p>\u5728\u4e0a\u8ff0\u7684\u7cfb\u7edf\u6a21\u578b\u4e4b\u4e0b\uff0c\u6b7b\u9501\u7684\u6761\u4ef6\u4e3a (\u5747\u9700\u6ee1\u8db3)\uff1a</p> <ul> <li> <p>Mutual exclusion: only one process at a time can use a resource.</p> </li> <li> <p>Hold and wait: a process holding at least one resource is waiting to acquire additional resources held by other processes.</p> </li> <li> <p>No preemption: a resource can be released only voluntarily by the process holding it, after that process has completed its task.</p> </li> <li> <p>Circular wait: there exists a set {P0, P1, \u2026, Pn} of waiting processes such that P0 is waiting for a resource that is held by P1, P1 is waiting for a resource that is held by P2, \u2026, Pn\u20131 is waiting for a resource that is held by Pn, and Pn is waiting for a resource that is held by P0.</p> </li> </ul>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#resource-allocation-graph","title":"Resource-Allocation Graph","text":"<p>A set of vertices V and a set of edges E.</p> <p>V is partitioned into two types:</p> <ul> <li> <p>P = {P1, P2, \u2026, Pn}, the set consisting of all the processes in the system.</p> </li> <li> <p>R = {R1, R2, \u2026, Rm}, the set consisting of all resource types in the system.</p> </li> </ul> <p>request edge \u2013 directed edge P1 \\(\\to\\) Rj</p> <p>assignment edge \u2013 directed edge Rj \\(\\to\\) Pi</p> Process Resource Type with 4 instances Pi requests instance of *Rj* Pi is holding an instance of *Rj* <p>Warning</p> <ul> <li>\u6ca1\u6709\u73af\u8def\u4e00\u5b9a\u65e0\u6b7b\u9501\uff0c\u6709\u73af\u8def\u4e0d\u4e00\u5b9a\u6709\u6b7b\u9501</li> <li>\u6709\u73af\u8def\uff1a</li> <li>if only one instance per resource type, then deadlock.</li> <li>if several instances per resource type, possibility of deadlock.</li> </ul>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_20","title":"\u6b7b\u9501\u5904\u7406","text":""},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_21","title":"\u6b7b\u9501\u9884\u9632","text":"<p>\u4f7f\u7cfb\u7edf\u4e0d\u4f1a\u4ea7\u751f\u6b7b\u9501\u7684\u60c5\u51b5\u3002\u4f7f\u6b7b\u9501\u7684 4 \u4e2a\u6761\u4ef6\u4e2d\u6709\u6761\u4ef6\u65e0\u6cd5\u5b8c\u6210\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\u9700\u8981\u907f\u514d circute wait \u7684\u4ea7\u751f\uff1a\u5c06\u6240\u6709\u7684 resource type \u90fd\u8fdb\u884c\u7f16\u53f7\uff0c\u4f7f\u6240\u6709\u7684\u8d44\u6e90\u53ea\u80fd\u5e8f\u53f7\u4ece\u4f4e\u5230\u9ad8\u5730\u7533\u8bf7\u3002\u4f46\u901a\u5e38\u5728\u73b0\u5b9e\u5730 OS \u4e2d\u4e0d\u53ef\u80fd\u8fd9\u6837\u64cd\u4f5c\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_22","title":"\u6b7b\u9501\u907f\u514d","text":"<p>\u4ecd\u5c5e\u4e8e\u9884\u9632\u8303\u7574\uff0c\u4f46\u4e0d\u662f\u53bb\u907f\u5f00\u6b7b\u9501\u6761\u4ef6\uff0c\u800c\u662f\u9632\u6b62\u8fdb\u5165\u7cfb\u7edf\u201c\u4e0d\u5b89\u5168\u72b6\u6001\u201d\u3002</p> <p>\u7cfb\u7edf\u5b89\u5168\u72b6\u6001\uff1a\u5728\u8d44\u6e90\u5206\u914d\u65f6\u68c0\u67e5\u662f\u5426\u5b89\u5168\u3002</p> <ul> <li>\u7cfb\u7edf\u80fd\u6309\u7167\u67d0\u79cd\u987a\u5e8f\u63a8\u8fdb\u7a0b\u5e8f\uff0c\u5e76\u63d0\u4f9b\u76f8\u5e94\u7684\u8d44\u6e90\uff0c\u76f4\u81f3\u6bcf\u4e2a\u8fdb\u7a0b\u5bf9\u8d44\u6e90\u7684\u6700\u5927\u9700\u6c42\u88ab\u6ee1\u8db3\u3002</li> <li>\u82e5\u627e\u4e0d\u5230\u8fd9\u6837\u7684\u5e8f\u5217\uff0c\u5219\u8bf4\u660e\u7cfb\u7edf\u4e0d\u5b89\u5168\u3002</li> <li>\u4e0d\u5b89\u5168\u4e0d\u4e00\u5b9a\u6b7b\u9501\u3002</li> </ul> <p></p> <p>\u82e5\u6bcf\u79cd\u8d44\u6e90\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u4f7f\u7528 RAG\u3002</p> <p></p> <p>\u865a\u7ebf\u4e3a claim edge \u672a\u6765\u53ef\u80fd\u4f1a request\u3002\u5b9e\u7ebf\u8868\u793a request \u548c assign\u3002</p> <p>\u6bcf\u6b21\u5206\u914d\u65f6\u9700\u8981\u68c0\u67e5\u7cfb\u7edf\u662f\u5426\u5b58\u5728\u73af\u8def (\u5305\u62ec claim)\uff0c\u82e5\u5b58\u5728\uff0c\u9700\u8981\u62d2\u7edd\u6700\u8fd1\u7684 request\u3002</p> <p>\u82e5\u6bcf\u79cd\u8d44\u6e90\u6709\u591a\u4e2a\u5b9e\u4f8b\uff0c\u4f7f\u7528 banker's algorithm\u3002</p> <p>\u5c06\u64cd\u4f5c\u7cfb\u7edf\u89c6\u4e3a\u94f6\u884c\u5bb6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\u7684\u8d44\u6e90\u76f8\u5f53\u4e8e\u94f6\u884c\u7684\u8d44\u91d1\u3002\u8fdb\u7a0b\u8bf7\u6c42\u8d44\u6e90\u89c6\u4e3a\u8d37\u6b3e\u3002\u9700\u8981\u4fdd\u8bc1\u4e0d\u51fa\u73b0\u8d44\u91d1\u77ed\u7f3a\u7684\u60c5\u51b5\u3002</p> <p>\u6709\u51e0\u70b9\u524d\u63d0\uff1a</p> <ul> <li>\u6bcf\u79cd\u8d44\u6e90\u6709\u591a\u4e2a\u5b9e\u4f8b\u3002</li> <li>\u6bcf\u4e2a\u8fdb\u7a0b\u4e8b\u5148\u58f0\u660e\u4e86\u81ea\u5df1\u7684\u6700\u5927\u8d44\u6e90\u4f7f\u7528\u91cf\u3002</li> <li>\u7533\u8bf7\u8d44\u6e90\u65f6\uff0c\u8fdb\u7a0b\u6709\u53ef\u80fd\u4f1a\u7b49\u5f85\u3002</li> <li>\u8fdb\u7a0b\u5f97\u5230\u4e86\u9700\u8981\u7684\u8d44\u6e90\u65f6\uff0c\u4f1a\u5728\u6709\u9650\u7684\u65f6\u95f4\u5185\u4f1a\u5f52\u8fd8\u8d44\u6e90\u3002</li> </ul> <p>n = number of processes, and m = number of resources types</p> <ol> <li>Avaliable \u6570\u7ec4\uff0c\u8868\u793a\u5404\u7c7b\u8d44\u6e90\u7684\u53ef\u7528\u5b9e\u4f8b\uff0c\u82e5 Avaliable[j] = k\uff0cR<sub>j</sub> \u7c7b\u578b\u7684\u8d44\u6e90\u6709 k \u4e2a\u5b9e\u4f8b\u53ef\u4f9b\u8c03\u7528\u3002</li> <li>Max[n][m] \u77e9\u9635\uff0c\u4e00\u884c\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u4e00\u5217\u4e00\u79cd\u8d44\u6e90\uff0c\u8868\u793a\u6700\u5927\u7684\u9700\u6c42\u91cf\u3002</li> <li>Allocation[n][m] \u77e9\u9635\uff0c\u8fdb\u7a0b\u5df2\u7ecf\u5206\u914d\u5230\u7684\u8d44\u6e90\u3002</li> <li>Need[n][m] \u77e9\u9635\uff0c\u8fdb\u7a0b\u63a5\u4e0b\u6765\u6700\u591a\u8fd8\u9700\u8981\u591a\u5c11\u8d44\u6e90\u3002</li> </ol> <p>\\(Need[i,j]=Max[i,j]-Allocation[i,j]\\)</p> <p><code>Safety algorithm</code></p> <p>Work[m] \u8868\u793a\u5269\u4f59\u53ef\u7528\u7684\u8d44\u6e90\uff0c\u521d\u59cb\u5316\u4e3a Avaliable\u3002</p> <p>Finish[n] \u8868\u793a\u6bcf\u4e2a\u8fdb\u7a0b\u662f\u5426\u7ed3\u675f\uff0c\u4e00\u5f00\u59cb\u5747\u8bbe\u4e3a false\u3002</p> <ol> <li>\u82e5\u5b58\u5728 i \u4f7f\u5f97\uff0cFinish[i] = false\uff0cNeed[i] &lt;= work\uff0c\u6b63\u5e38\u8fd0\u884c\u3002\u82e5\u4e0d\u5b58\u5728\uff0c\u5219\u8f6c\u5230\u7b2c\u4e09\u6b65\u3002</li> <li>Work += Allocation\uff0cFinish[i] = true\uff0c\u56de\u5230\u7b2c\u4e00\u6b65\u3002</li> <li>\u82e5 Finish[n] \u5168\u662f true\uff0c\u7cfb\u7edf\u5904\u4e8e\u5b89\u5168\u72b6\u6001\u3002</li> </ol> <p><code>Resource-Request Algorithm</code></p> <p>Request<sub>i</sub>[m] \u4e3a\u8fdb\u7a0b P<sub>i</sub>  \u7684\u8bf7\u6c42\u5411\u91cf\u3002</p> <ol> <li> <p>\u82e5 Request<sub>i</sub>[j] &lt;= Need[i, j]\uff0c\u8df3\u8f6c 2\u3002\u82e5\u4e0d\u662f\uff0c\u89c6\u4e3a\u51fa\u9519\u3002</p> </li> <li> <p>\u82e5 Request<sub>i</sub>[j] &lt;= Avaliable[i, j]\uff0c\u8df3\u8f6c 3\u3002\u5426\u5219\u8fdb\u7a0b\u9700\u8981\u7b49\u5f85\u8d44\u6e90\u3002</p> </li> <li> <p>\u7cfb\u7edf\u8bd5\u63a2\u6027\u5730\u5206\u914d\u8d44\u6e90\u3002</p> </li> </ol> <p>$$ Avaliable = Avaliable - Request; \\ Allocation[i,j] = Allocation[i,j]+Request_i[j] \\ Need[i,j] = Need[i,j]-Request_i[j] $$</p> <ol> <li>\u4f7f\u7528 Safety Algorithm \u68c0\u67e5\u662f\u5426\u5b89\u5168\uff0c\u82e5\u5b89\u5168\uff0c\u5219\u5206\u914d\uff1b\u4e0d\u5b89\u5168\uff0c\u5219\u56de\u9000\u3002</li> </ol>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_23","title":"\u6b7b\u9501\u68c0\u6d4b","text":"<p>Wait-for Graph</p> <p></p> <p>\u5355\u5b9e\u4f8b\u5730\u60c5\u51b5\u4e0b\u82e5 Wait-for graph \u4e2d\u5b58\u5728\u6709\u5411\u73af\u8def\uff0c\u5219\u6709\u6b7b\u9501\u3002</p> <p>\u591a\u5b9e\u4f8b\u68c0\u6d4b</p> <ol> <li>Avaliable[m]</li> <li>Allocation[n][m] \u5f53\u524d\u7684\u5206\u914d\u60c5\u51b5\u3002</li> <li>Request[n][m] \u5f53\u524d\u7684\u8bf7\u6c42\u60c5\u51b5\u3002</li> </ol> <p>Work[m] \u8868\u793a\u5269\u4f59\u53ef\u7528\u7684\u8d44\u6e90\uff0c\u521d\u59cb\u5316\u4e3a Avaliable\u3002</p> <p>Finish[n] \u8868\u793a\u6bcf\u4e2a\u8fdb\u7a0b\u662f\u5426\u7ed3\u675f\uff0c\u4e00\u5f00\u59cb\uff0c\u82e5 Allocation[i] == 0\uff0c\u5219\u8bbe\u4e3a true\uff0c\u4e0d\u7136\u4e3a false\u3002</p> <p>Detection Algorithm \u5982\u4e0b\uff1a</p> <ol> <li>\u82e5\u5b58\u5728 i \u4f7f\u5f97\uff0cFinish[i] = false\uff0cNeed[i] &lt;= work\uff0c\u6b63\u5e38\u8fd0\u884c\u3002\u82e5\u4e0d\u5b58\u5728\uff0c\u5219\u8f6c\u5230\u7b2c\u4e09\u6b65\u3002</li> <li>Work += Allocation\uff0cFinish[i] = true\uff0c\u56de\u5230\u7b2c\u4e00\u6b65\u3002</li> <li>\u82e5 Finish[i] == false\uff0c\u5219\u8fdb\u7a0b P<sub>i</sub> \u6b7b\u9501\u3002</li> </ol>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_24","title":"\u6b7b\u9501\u6062\u590d","text":"<ul> <li>Abort all deadlocked processes.</li> <li>Abort one process at a time until the deadlock cycle is eliminated.</li> </ul>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_25","title":"\u4e3b\u5b58","text":"<p>2023 / 11 / 16</p> <p></p> <p>\u4f7f\u7528 Base \u548c Limit \u5bc4\u5b58\u5668\uff0c\u8868\u793a\u4e00\u4e2a\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u7a7a\u95f4\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#addressing","title":"Addressing","text":"<p>\u4e00\u822c\u7684\u5730\u5740\u8868\u793a\u4e3a\u6574\u6570\u5f62\u5f0f (absolute address)\uff0c\u6b64\u5916\uff0c\u5730\u5740\u8fd8\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> <ul> <li>Symbolic Address\uff1a\u4e3b\u8981\u7528\u4e8e\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\uff0c\u5730\u5740\u53ef\u4ee5\u4e0e\u53d8\u91cf\u76f8\u5173\u8054\u3002\u4f8b\u5982\u6570\u7ec4\u540d\u5c31\u8868\u793a\u4e00\u4e2a\u5730\u5740\u3002</li> <li>Relocatable Address\uff1a\u53ef\u91cd\u5b9a\u4f4d\u5730\u5740\uff0c\u76f8\u5bf9\u67d0\u4e2a module \u7684\u5730\u5740\u3002\u5f53 module \u843d\u5b9e\u5230\u4e00\u4e2a\u5b9e\u9645\u5730\u5740\u4e2d\u65f6\uff0cRelocatable address \u4e5f\u4f1a\u843d\u5b9e\u5230\u5b9e\u9645\u5730\u5740\u3002</li> </ul> <p></p> <p>\u5728 Compile \u9636\u6bb5\u4e3b\u8981\u4f7f\u7528 Relocatable address\uff0c\u76ee\u7684\u662f\u65b9\u4fbf\u540e\u7eed\u8fdb\u884c\u6587\u4ef6\u94fe\u63a5\u3002</p> <p>\u5728 Linker \u9636\u6bb5\uff0c\u94fe\u63a5\u591a\u4e2a .o \u4ee5\u53ca\u5e93\u6587\u4ef6\uff0c\u8f93\u51fa\u53ef\u6267\u884c\u6587\u4ef6\u3002</p> <p>\u6267\u884c\u9636\u6bb5\uff0c\u6620\u5c04\u5230\u7edd\u5bf9\u5730\u5740\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_26","title":"\u5730\u5740\u7ed1\u5b9a","text":"<p>\u4f55\u65f6\u786e\u5b9a\u5b9e\u9645\u5730\u5740\uff1a</p> <ul> <li>Compile time / Load time / Execution time</li> <li>\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u5927\u591a\u5728 Execution \u9636\u6bb5\u8fdb\u884c\u6620\u5c04\u3002\u5141\u8bb8\u7a0b\u5e8f\u5728\u5185\u5b58\u4e2d\u79fb\u52a8\u3002</li> <li>DOS \u5728 Compile time \u8fdb\u884c\u5730\u5740\u6620\u5c04\uff0c\u5373\u76f4\u63a5\u5c06\u4ee3\u7801\u4e2d\u7684 symbol \u8f6c\u5316\u4e3a\u5b9e\u9645\u5730\u5740\u3002</li> <li>Load time \u5728\u52a0\u8f7d\u7a0b\u5e8f\u5230\u5185\u5b58\u65f6\u786e\u5b9a\u5730\u5740\u6620\u5c04\u3002\u4f46\u7a0b\u5e8f\u8fd0\u884c\u4e4b\u540e\u5730\u5740\u4e0d\u4f1a\u53d1\u751f\u6539\u53d8\u3002</li> </ul> <p>Execution time \u9636\u6bb5\u6620\u5c04\u9700\u8981 CPU \u786c\u4ef6\u7684\u652f\u6301\uff0c\u9700\u8981\u5b9e\u73b0\u903b\u8f91\u5730\u5740 (\u865a\u62df\u5730\u5740) \u548c\u7edd\u5bf9\u5730\u5740 (\u7269\u7406\u5730\u5740) \u7684\u5206\u79bb\u3002</p> <p>Logical Address\uff1a\u53c8\u79f0\u4e3a Virtual address\u3002\u7531 CPU \u6307\u4ee4\u4e2d\u4ea7\u751f\u3002</p> <p>Physical Address\uff1a\u5185\u5b58\u4e2d\u7684\u5b9e\u9645\u5730\u5740\u3002</p> <p>\u5bf9\u4e8e\u5728 Compile \u548c Load \u9636\u6bb5\u8fdb\u884c\u5730\u5740\u7ed1\u5b9a\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u903b\u8f91\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u6ca1\u6709\u533a\u522b\u3002</p> <p>\u5bf9\u4e8e Execution time \u8fdb\u884c\u9700\u8981\u4e00\u5b9a\u7684\u65b9\u5f0f\u8fdb\u884c\u4e8c\u8005\u4e4b\u95f4\u7684\u8f6c\u5316\u3002\u4e00\u822c\u4f7f\u7528 MMU (Memory-Management Unit)\uff0c\u8fdb\u884c\u786c\u4ef6\u8f6c\u5316\u3002</p> <p></p> <p>\u901a\u8fc7\u91cd\u5b9a\u4f4d\u5bc4\u5b58\u5668\uff0c\u5c06\u903b\u8f91\u5730\u5740\u52a0\u4e0a\u4e00\u4e2a\u504f\u79fb\u503c\uff0c\u8f6c\u5316\u4e3a\u4e00\u4e2a\u7269\u7406\u5730\u5740\u3002</p> <p>Note</p> <p><code>Dynamic Loading</code> \u5141\u8bb8\u8fdb\u7a0b\u4ee3\u7801\u4e0d\u5b8c\u5168\u52a0\u8f7d\uff0c\u4ec5\u52a0\u8f7d\u9700\u8981\u4f7f\u7528\u7684\u6a21\u5757\u3002\u51cf\u8f7b\u7cfb\u7edf\u7684\u5185\u5b58\u538b\u529b\u3002 <code>Dynamic Linking</code> \u94fe\u63a5\u7684\u65f6\u5019\u4e0d\u9700\u8981\u94fe\u63a5\u6240\u6709\u7684\u6587\u4ef6 (\u4e0d\u7528\u94fe\u63a5\u52a8\u6001\u94fe\u63a5\u5e93)\u3002\u4f7f\u7528\u6869\u6a21\u5757 (stub) \u4ee3\u66ff\u539f\u5148\u7684\u51fd\u6570\u4f53\uff0c\u6869\u6a21\u5757\u4f1a\u627e\u5230\u5bf9\u5e94\u7684\u51fd\u6570\u4f53\u8fdb\u884c\u8fd0\u884c\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#contiguous-allocation","title":"Contiguous Allocation \u8fde\u7eed / \u76f8\u90bb\u5206\u914d","text":"<p>\u4e3b\u5b58\u4f1a\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u4f9b\u64cd\u4f5c\u7cfb\u7edf\u5e38\u9a7b\uff0c\u4e00\u90e8\u5206\u4f9b\u7528\u6237\u8fdb\u7a0b\u4f7f\u7528\u3002\u5f53 trap into system call \u65f6\uff0c\u4f1a\u4f7f\u7528\u5230\u7cfb\u7edf\u90e8\u5206\u7684\u5185\u5b58\u3002</p> <p></p> <ul> <li>multiple-partition allocation\uff1a\u5c06\u8fdb\u7a0b\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u8fdb\u884c\u5206\u914d\uff0c\u5206\u914d\u4e00\u6574\u5757\u5185\u5b58\u3002\u8fdb\u7a0b\u5185\u5b58\u6709\u9650\u5236\uff0c\u4f7f\u7528\u8d85\u51fa\u4f1a\u51fa\u9519\u3002\u7531\u4e8e\u8fdb\u7a0b\u7684\u8fd0\u884c\u65f6\u95f4\u4e0d\u540c\u6b65\uff0c\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4f1a\u4ea7\u751f\u5927\u91cf\u7684 holes\uff0c\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u5b58\u50a8\u6bcf\u4e2a\u8fdb\u7a0b\u7684 relocation register \u548c limit\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a holes \u7ec4\u6210\u7684\u94fe\u8868\u3002</li> </ul> <p></p> <ul> <li>\u5bfb\u627e holes \u6709\u591a\u79cd\u65b9\u6cd5\uff1aFirst-fit (\u7b2c\u4e00\u4e2a hole)\uff0cBest-fit (\u6700\u5c0f\u7684 hole)\uff0cWorst-fit (\u6700\u5927\u7684\u95ee\u9898)\u3002</li> </ul> <p>Fragmentation</p> <ul> <li>External Fragmentation\uff1a\u5916\u90e8\u788e\u7247\u95ee\u9898\uff0c\u7531\u4e8e\u7cfb\u7edf\u7684\u52a8\u6001\u52a0\u8f7d\uff0c\u5bfc\u81f4\u5f88\u591a\u4e0d\u8fde\u7eed\u7684 holes\u3002</li> <li>Internal Fragmentation\uff1a\u5185\u90e8\u788e\u7247\u95ee\u9898\uff0c\u7531\u4e8e\u8fdb\u7a0b\u5b9e\u9645\u5206\u914d\u7684\u5185\u5b58\u4e0e\u8fdb\u7a0b\u9700\u8981\u7684\u5185\u5b58\u5927\u5c0f\u4e0d\u4e00\u81f4\uff0c\u5b58\u5728\u8fdb\u7a0b\u4e0d\u4f1a\u4f7f\u7528\u7684\u5185\u5b58\u7a7a\u95f4\u3002</li> </ul> <p>\u4e3a\u89e3\u51b3\u5916\u90e8\u788e\u7247\u95ee\u9898\uff0c\u53ef\u901a\u8fc7 compaction (\u7d27\u81f4)\uff0c\u8fdb\u884c\u8fdb\u7a0b\u7684\u62f7\u8d1d\u4e0e\u642c\u8fd0\uff0c\u5236\u9020\u5927\u5757\u7684\u8fde\u7eed\u7a7a\u95f4\u3002\u4f46\u8fd9\u79cd\u65b9\u5f0f\u4f1a\u5bfc\u81f4\u8f83\u5927\u7684\u5f00\u9500\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#paging","title":"Paging","text":"<p>\u975e\u8fde\u7eed\u5206\u914d\u3002</p> <p>\u5c06\u865a\u5730\u5740\u7a7a\u95f4\u5206\u89e3\u4e3a pages\uff0c\u5c06\u7269\u7406\u5730\u5740\u7a7a\u95f4\u5206\u89e3\u4e3a frames\u3002\u7ed9\u8fdb\u7a0b\u5206\u914d\u5185\u5b58\u65f6\uff0c\u4ee5\u4e00\u4e2a frame (physical page) \u4e3a\u5355\u4f4d\u8fdb\u884c\u5206\u914d\u3002\u4e00\u4e2a page \u5bf9\u5e94\u4e00\u4e2a frame\u3002</p> <p>\u4e0d\u5b58\u5728\u5916\u90e8\u788e\u7247\uff0c\u4f46\u4f9d\u7136\u6709\u5185\u90e8\u788e\u7247\u95ee\u9898\u3002</p> <p></p> <p>\u67e5\u627e\u673a\u5236\u5982\u4e0b\uff1a</p> <p></p> <p>\u627e\u5230\u7b2c f \u4e2a frame \u4e2d\u504f\u79fb\u4e86 d bytes \u7684\u5185\u5bb9\u3002Page table \u4e5f\u662f\u653e\u5728\u5185\u5b58\u4e2d\u3002RISC-V \u4e2d\u4f7f\u7528 satp \u5bc4\u5b58\u5668\u6307\u5411\u4e86 page table \u8d77\u59cb\u7684\u7269\u7406\u5730\u5740\uff0c\u8fdb\u884c\u5185\u5bb9\u7684\u67e5\u8be2\u3002</p> <p></p> <p>\u4f7f\u7528 paging \u7ba1\u7406\u65f6\uff0cpage \u53ef\u80fd\u4e0d\u8fde\u7eed\u3002</p> <p>\u4f7f\u7528 free-frame list \u7528\u4ee5\u7ba1\u7406\u7a7a\u95f2\u7684 frame\u3002(\u4e0b\u56fe\u5de6\u4fa7\u4e3a\u5206\u914d\u524d\uff0c\u53f3\u56fe\u4e3a\u5206\u914d\u540e)\u3002</p> <p></p> <p>\u5b9e\u73b0 paging \u9700\u8981 MMU \u7684\u652f\u6301\uff0c\u4f7f\u7528\u4e00\u7ec4\u5bc4\u5b58\u5668\u5b58\u50a8\u4fe1\u606f\uff1a</p> <p>Page-table base register (PTBR)\uff1a\u6307\u5411 page table \u7684\u8d77\u59cb\u4f4d\u7f6e (\u7269\u7406\u5730\u5740)\u3002</p> <p>Page-table length register (PTLR)\uff1a\u7528\u4ee5\u8868\u793a page table \u7684\u5927\u5c0f (\u5e38\u6570)\u3002</p> <p>\u627e\u5230\u7279\u5b9a\u7684 page \u9700\u8981\u4e24\u6b21\u4e3b\u5b58\u7684\u8bbf\u95ee\uff0c\u53ef\u4ee5\u4f7f\u7528 TLB \u8fdb\u884c\u52a0\u901f\u3002</p> <p></p> <p>TLB (translation look-aside buffer\uff0c\u65c1\u8def\u7f13\u5b58 / \u5feb\u8868) \u4e2d\u5b58\u653e\u4e86 page number \u4ee5\u53ca\u5bf9\u5e94\u7684 frame number\u3002</p> <p>\u82e5\u6709\u591a\u4e2a\u8fdb\u7a0b\uff0c\u5b58\u5728\u4f7f\u7528\u540c\u4e00 VPN \u8fdb\u884c\u53d6 Page \u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u9700\u8981\u5728 TLB \u4e2d\u5b58\u653e address-space identifiers (ASIDs)\uff0c\u7528\u4ee5\u533a\u5206\u4e0d\u540c\u7684\u8fdb\u7a0b\u7684\u5185\u5b58\u7a7a\u95f4\u3002</p> <p>page table \u4e2d\u6240\u6709\u7684 frame \u53ef\u80fd\u5c1a\u672a\u5206\u914d\uff0c\u6545\u9700\u8981\u8bbe\u7f6e valid-invalid bit\u3002</p> <p></p> <p>\u82e5\u8bbf\u95ee\u4e86 invalid \u7684 page\uff0c\u5219\u79f0\u4e3a page fault\u3002</p> <p>Effective Access Time</p> <p>\u8bbf\u95ee\u4e00\u6b21 TLB \u7684\u65f6\u95f4\u4ee3\u4ef7\u4e3a \\(\\epsilon\\)\u3002\u8bbf\u95ee\u5185\u5b58\u4e3a\u4e00\u4e2a\u65f6\u95f4\u5355\u4f4d\u3002</p> <p>\u5047\u8bbe TLB \u547d\u4e2d\u7684\u6982\u7387\u4e3a \\(\\alpha\\)\uff0c\u53ef\u4ee5\u5f97\u5230 \\(Effective\\,Access\\,Time\\,(EAT) = (1 + \\epsilon)\\alpha+(2+\\epsilon)(1-\\alpha) = 2 + \\epsilon - \\alpha\\)\u3002</p> <p>Shared Pages</p> <p></p> <p>\u5982\u4e0a\u56fe\u4e2d\uff0c\u4e09\u4e2a\u8fdb\u7a0b\u90fd\u4f7f\u7528\u4e86\u540c\u6837\u7684 ed \u6bb5\uff0c\u53ef\u4ee5\u8d4b\u76f8\u540c\u7684 frame \u503c\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_27","title":"\u9875\u8868\u7ed3\u6784","text":"<p>Hierarchical Paging \u591a\u7ea7\u9875\u8868</p> <p>\u82e5 page \u8fc7\u591a\uff0c\u9700\u8981\u5bf9 page table \u672c\u8eab\u4e5f\u8fdb\u884c\u5206\u9875\u3002</p> <p></p> <p>\u4e0a\u56fe\u4e2d\u4e3a\u67d0 2 \u7ea7\u9875\u8868\u7684\u793a\u4f8b\u3002</p> <p></p> <p>\u7b2c\u4e00\u5c42\u4f7f\u7528 p1 \u8fdb\u7a0b\u67e5\u8be2\uff0c\u7b2c\u4e8c\u5c42\u4f7f\u7528 p2 \u8fdb\u884c\u67e5\u8be2\u3002</p> <p></p> <p>\u5728\u6b21\u60c5\u51b5\u4e0b\uff0cPTBR \u5bc4\u5b58\u5668\u6307\u5411 outer page table \u7684\u8d77\u59cb\u4f4d\u7f6e\u7684\u7269\u7406\u5730\u5740\u3002</p> <p>Hashed Page Table \u54c8\u5e0c\u9875\u8868</p> <p></p> <p>\u6bcf\u4e2a\u8fdb\u7a0b\u7ef4\u62a4\u4e00\u4e2a hash table\uff0chash table \u4e2d\u7684\u6bcf\u4e2a entry \u90fd\u4f1a\u6307\u5411 page table entry\u3002</p> <p>\u82e5\u53d1\u751f hash collision\uff0c\u5c06\u5404\u4e2a PTE \u4f7f\u7528\u94fe\u8868\u76f8\u8fde\u3002</p> <p>\u591a\u7ea7\u9875\u8868\u548c\u54c8\u5e0c\u9875\u8868\u5747\u53ef\u4ee5\u901a\u8fc7 TLB \u8fdb\u884c\u52a0\u901f\u3002</p> <p>Inverted Page Table</p> <p></p> <p>\u6574\u4e2a OS \u4e2d\u53ea\u6709\u4e00\u4e2a page table\uff0c\u4f46\u8be5 page table \u662f\u7269\u7406\u5730\u5740\u7a7a\u95f4\u7684\u4e00\u4e2a\u6620\u50cf\uff0c\u4f8b\u5982\u7b2c 0 \u884c\u5bf9\u5e94\u7b2c\u4e00\u4e2a page frame\u3002\u9875\u8868\u4e2d\u5b58\u50a8\u7684\u662f ASIDs \u548c page number\u3002\u5730\u5740\u67e5\u627e\u4e3a\u4e00\u4e2a\u67e5\u627e\u7684\u8fc7\u7a0b\u3002</p> <p>\u540c\u6837\u53ef\u4ee5\u4f7f\u7528 TLB \u8fdb\u884c\u52a0\u901f\u3002\u6709\u65f6\u4f1a\u5c06 page table \u5b58\u50a8\u5728 Content-addressible Memory (CAM) \u4e2d\u8fdb\u4e00\u6b65\u52a0\u901f\u67e5\u627e\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#swapping","title":"Swapping","text":"<p>\u5c06\u90e8\u5206\u8fdb\u7a0b\u8fdb\u884c swap out \u5230\u78c1\u76d8\u4e2d\uff0c\u4ee5\u4fdd\u8bc1\u8db3\u591f\u7684\u5185\u5b58\u8fdb\u884c\u8fd0\u884c\u3002</p> <p>\u4f7f\u7528\u5206\u9875\u7ba1\u7406\u540e\uff0cswap-in &amp; swap-out (\u6574\u4e2a\u8fdb\u7a0b\u66ff\u6362)\uff0c\u53ef\u4ee5\u53d8\u4e3a page-in &amp; page-out (\u4ec5\u66ff\u6362\u90e8\u5206\u7684 page)\u3002</p> <p></p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#segmentation","title":"Segmentation \u6bb5","text":"<p>\u5c06 page \u8fdb\u884c\u8fdb\u4e00\u6b65\u5730\u5212\u5206\uff0c\u4e0e\u7a0b\u5e8f\u4e2d\u7684\u51fd\u6570\u6bb5\u8f83\u4e3a\u543b\u5408\u3002</p> <p></p> <p></p> <p>\u4e0e page \u7c7b\u4f3c\uff0c\u4e5f\u6709 segment-number \u548c offset\u3002</p> <p>\u4e5f\u5b58\u5728 Segment table\uff0c\u4f7f\u7528 base \u548c limit register \u8fdb\u884c\u786e\u5b9a\u3002</p> <p>\u4e5f\u5b58\u5728 Segment-table base register (STBR) \u548c Segment-table length register (STLR)\u3002</p> <p>\u6b64\u5904 STLR \u7684\u957f\u5ea6\u5e76\u4e0d\u786e\u5b9a\uff0c\u82e5 segment-number \u5927\u4e8e STLR \u5219\u53d1\u751f\u4e86\u6bb5\u9519\u8bef\u3002</p> <p></p> <p>\u7531\u4e8e segment size \u4e0d\u786e\u5b9a\uff0csegment \u7684\u5b58\u50a8\u4e0d\u4e00\u5b9a\u9700\u8981\u5bf9\u9f50\u3002</p> <p>segment \u4e5f\u9700\u8981 protection bits\u3002\u4f8b\u5982 valid-invalid bits\uff0c\u7528\u4e8e\u8868\u793a segment \u662f\u5426 legal\u3002\u6b64\u5916\u8fd8\u6709\u4e00\u4e9b\u8868\u793a\u6743\u9650 (\u8bfb\u5199\u7b49) \u7684\u4f4d\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_28","title":"\u865a\u62df\u5185\u5b58","text":"<p>2023 / 11 / 23</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#demand-paging","title":"Demand Paging","text":"<p>\u8bf7\u6c42\u5f0f\u8c03\u9875\u3002</p> <p>\u5f53\u4e14\u4ec5\u5f53\u9700\u8981\u8bbf\u95ee\u67d0\u4e00 page \u65f6\uff0c\u624d\u4f1a\u5c06 page \u52a0\u8f7d\u8fdb\u4e3b\u5b58\u3002</p> <p>\u5f53\u67d0\u4e00 PTE \u7684 valid \u4f4d\u4e3a 0 \u65f6\uff0c\u51fa\u73b0 page fault\uff0c\u9700\u8981\u533a\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\u4e00\u662f\u975e\u6cd5\u8bbf\u95ee (\u5c06\u4e2d\u65ad\u7a0b\u5e8f\uff0c\u4f7f\u7528 PCB \u4e2d\u5176\u4ed6\u7684\u8f85\u52a9\u4fe1\u606f\u8fdb\u884c\u5224\u65ad)\uff0c\u4e8c\u662f page \u4e0d\u5728\u4e3b\u5b58\u4e2d\u3002</p> <p>\u4f7f\u7528 lazy swapper \u8fdb\u884c\u9875\u4ea4\u6362 (\u53ea\u6709\u8bbf\u95ee\u65f6\u624d\u4f1a\u8fdb\u884c\u9875\u4ea4\u6362)\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#page-fault","title":"Page fault","text":"<p>\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u533a\u5206\u975e\u6cd5\u8bbf\u95ee\u548c page \u4e0d\u5728\u4e3b\u5b58\u4e2d\u3002</li> <li>\u83b7\u53d6\u4e00\u4e2a empty frame\u3002</li> <li>\u5c06\u8be5 frame swap into \u4e3b\u5b58\u3002</li> <li>\u5bf9\u9875\u8868\u8fdb\u884c\u91cd\u7f6e\u3002</li> <li>\u5c06 valid \u4f4d\u7f6e v\u3002</li> <li>\u91cd\u65b0\u8fd0\u884c\u4e4b\u524d\u53d1\u751f\u4e86 page fault \u7684\u6307\u4ee4\u3002</li> </ol> <p></p> <p>\u4e00\u4e2a\u7279\u6b8a\u60c5\u51b5\uff1a</p> <ul> <li>\u82e5\u67d0\u4e00\u6761\u6307\u4ee4\u9700\u8981\u8fdb\u884c block move\uff0c\u4e14\u6570\u636e\u8de8\u9875\u3002\u82e5\u4ea7\u751f page fault\uff0c\u5219\u4f1a\u53d1\u751f\u4e00\u4e9b\u6570\u636e\u6210\u529f\u8f6c\u79fb\uff0c\u800c\u90e8\u5206\u6570\u636e\u672a\u80fd\u8f6c\u79fb\u7684\u60c5\u51b5\u3002\u4f1a\u4ea7\u751f\u6570\u636e\u9519\u8bef\u3002</li> </ul> <p>Demand Paging \u7684 EAT\uff1ap \u4e3a\u53d1\u751f page fault \u7684\u6982\u7387\u3002</p> \\[(1-p)*memory\\,access+ \\\\ p*(page\\,fault\\,overhead+swap\\,page\\,out+swap\\,page\\,in+restart\\,overhead)\\] <p>\u4e0a\u8ff0\u516c\u5f0f\u7684\u540e\u534a\u90e8\u5206\u7531\u4e8e\u6307\u4ee4\u91cd\u542f\uff0c\u540e\u534a\u90e8\u5206\u4e0d\u5305\u62ec memory access\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#process-creation-cow","title":"\u7528\u9014\uff1aProcess Creation &amp; COW","text":"<p>\u4f7f\u7528 virtual memory \u6765\u4f18\u5316\u8fdb\u7a0b\u521b\u5efa\u3002</p> <p>copy-on-write</p> <p>P1 \u548c P2 \u5747\u4f7f\u7528 Page A\u3001Page B\u3001Page C\uff0c\u4e09\u4e2a\u9875\u5747\u4e3a\u53ea\u8bfb (\u4e3a\u9632\u6b62\u5171\u4eab\u4ea7\u751f\u7684\u9519\u8bef)\u3002\u82e5 P1 \u5c1d\u8bd5\u4fee\u6539 Page C\uff0c\u4f1a\u5f15\u8d77 page fault\uff0c\u6b64\u65f6\u4f1a\u590d\u5236 Page C (\u590d\u5236\u5f97\u5230\u7684\u9875\u53ef\u5199)\uff0c\u5c06 P1 \u7684 PTE \u6307\u5411 copy\u3002</p> <p>\u6240\u4ee5\uff0c\u53ea\u6709\u5728\u5199\u65f6\u624d\u4f1a\u4ea7\u751f page \u7684\u590d\u5236\uff0c\u591a\u4e2a\u8fdb\u7a0b\u5728\u4e0d\u5c11\u60c5\u51b5\u4e0b\u53ef\u4ee5\u5171\u4eab page\uff0c\u53ef\u4ee5\u8282\u7ea6\u5185\u5b58\u7684\u4f7f\u7528\u3002</p> <p>Note</p> <p>brk \u7528\u4e8e\u63a7\u5236 heap \u7684\u5927\u5c0f\u3002 \u5728\u4f7f\u7528 malloc \u5206\u914d\u65f6\uff0c\u5b9e\u9645\u4e0a OS \u5e76\u4e0d\u4f1a\u7acb\u523b\u5206\u914d Page\uff0c \u53ea\u4f1a\u5c06 sbrk \u8fdb\u884c\u8c03\u6574\uff0c\u589e\u52a0\u5806\u7684\u5927\u5c0f\uff0c \u8bbf\u95ee\u8fd9\u7247 memory \u540e\u624d\u4f1a\u5206\u914d Page\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#zero-fill-on-demand","title":"\u7528\u9014\uff1aZero fill on demand","text":"<p>Block start by symbol\uff0c\u672a\u88ab\u521d\u59cb\u5316\u6216\u521d\u59cb\u5316\u4e3a 0 \u7684\u5168\u5c40\u53d8\u91cf\u6216\u9759\u6001\u53d8\u91cf\u3002</p> <p>\u7a0b\u5e8f\u52a0\u8f7d\u5230\u5185\u5b58\u65f6\uff0ctext \u548c data \u533a\u57df\u4f1a\u5b58\u653e\u4e86\u5df2\u7ecf\u521d\u59cb\u5316\u7684\u5168\u5c40\u6216\u9759\u6001\u53d8\u91cf\u3002</p> <p>\u6b64\u7b56\u7565\u53ef\u4ee5\u8282\u7ea6\u5185\u5b58\u3002\u5b9e\u9645\u4e0a\u5efa\u7acb\u65b0\u7684\u3001\u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u6216\u9759\u6001\u53d8\u91cf\u65f6\uff0c\u53ea\u9700\u8981\u6620\u5c04\u5230\u7269\u7406\u5730\u5740\u4e0a\u4e00\u4e2a\u5168 0 \u7684\u5730\u5740\u5373\u53ef\u3002</p> <p>\u521d\u59cb\u5316\u65f6\uff0c\u8fdb\u884c copy-on-write \u64cd\u4f5c\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#memory-mapped-file","title":"\u7528\u9014\uff1aMemory mapped file","text":"<p><code>mmap(va, len, prot, flags, fd, offset)</code></p> <p>prot \u7528\u4e8e\u4fdd\u62a4 (\u53ea\u8bfb\u7b49)\uff0cfd \u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u52a0\u4e0a offset \u540e\uff0c\u5c06\u957f\u5ea6\u4e3a len \u7684\u5185\u5bb9\u52a0\u5230 va\u3002</p> <p></p> <p>\u5c06\u6587\u4ef6\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u4f7f\u7528 load \u6216 store \u8fdb\u884c\u4fee\u6539\uff0c\u63d0\u9ad8\u6548\u7387\u3002</p> <p></p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#page-replacement","title":"Page Replacement","text":"<p>\u9700\u8981\u8bbe\u7f6e modified bit \u7528\u4e8e\u786e\u8ba4\u662f\u5426\u8981\u5c06\u9875\u5199\u56de memory\u3002</p> <p></p> <p>\u66ff\u6362\u7b97\u6cd5</p> <p>\u9700\u8981\u5c3d\u91cf\u964d\u4f4e page-fault \u7684\u6982\u7387\u3002</p> <p><code>FIFO</code>\uff1aFirst-In-First-Out Algorithm</p> <ul> <li>\u7279\u5b9a\u60c5\u51b5\u4e0b\uff0c\u66f4\u591a\u7684 frame \u4e0d\u4e00\u5b9a\u80fd\u591f\u51cf\u5c11 page fault\uff1a</li> <li></li> </ul> <p>\u53e6\u4e00\u4e2a\u4e3e\u4f8b\uff1a</p> <p></p> <p><code>Optimal</code>\uff1aOptimal Algorithm\uff0c\u66ff\u6362\u672a\u6765\u6700\u957f\u65f6\u95f4\u4e0d\u4f1a\u88ab\u7528\u5230\u7684 Page\u3002</p> <p></p> <ul> <li>\u82e5\u65e0\u6cd5\u5f97\u77e5\u672a\u6765\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u5219\u9000\u5316\u4e3a FIFO\u3002</li> <li>\u5728\u771f\u5b9e\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4e0d\u80fd\u5b9e\u73b0\uff0c\u4e3b\u8981\u7528\u4e8e\u53c2\u8003\u3002</li> </ul> <p><code>LRU</code>\uff1aLeast Recently Used Algorithm</p> <p></p> <ul> <li>LRU \u7b97\u6cd5\u7684\u5b9e\u73b0\u9700\u8981\u786c\u4ef6\u7684\u652f\u6301\u3002\u7ed9\u6bcf\u4e2a Page \u8bbe\u7f6e\u4e00\u4e2a\u8ba1\u6570\u5668\u3002\u66ff\u6362\u65f6\u95f4\u6233\u6700\u4e45\u7684 Page\u3002</li> <li>\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6808\u6765\u8bb0\u5f55\u6700\u8fd1\u88ab\u4f7f\u7528\u7684 Page\u3002</li> <li></li> <li>\u5c06\u6700\u8fd1\u88ab\u8bbf\u95ee\u7684\u9875\u653e\u5230\u6808\u9876\u3002</li> </ul> <p><code>LRU APPROX</code>\uff1aLRU \u8fd1\u4f3c\u7b97\u6cd5</p> <ul> <li>LRU \u4e2d\u7684\u8ba1\u6570\u5668\u6cd5\u4ee3\u4ef7\u8f83\u5927\uff0c\u53ef\u4ee5\u4f7f\u7528 reference bit (\u76f8\u5f53\u4e8e\u957f\u5ea6\u4e3a 1 \u7684\u8ba1\u6570\u5668)\uff0c\u4f46\u4f1a\u51fa\u73b0\u9009\u62e9\u7684\u95ee\u9898\u3002</li> </ul> <p><code>Second-Chance</code></p> <p></p> <ul> <li>\u4e00\u65b9\u9762\u8fdb\u884c\u6b63\u5e38\u8bbf\u95ee\uff0c\u4e00\u65b9\u9762\u5bf9\u52a0\u8f7d\u8fdb\u5185\u5b58\u7684 Page \u8fdb\u884c\u5faa\u73af\u8bbf\u95ee\u3002\u5faa\u73af\u626b\u63cf\u65f6\uff0c\u82e5\u9047\u89c1\u4e00\u4e2a reference bit \u4e3a 1 \u7684 Page\uff0c\u8bf4\u660e Page \u5728\u4e00\u4e2a\u5faa\u73af\u5468\u671f\u5185\u6709\u8fc7\u4f7f\u7528\uff0c\u7f6e\u6210 1\u3002\u82e5\u9047\u89c1 reference bit \u4e3a 0 \u7684 Page\uff0c\u5219\u76f4\u63a5\u53d6\u4e3a\u5c06\u88ab\u66ff\u6362\u7684 Page\u3002</li> </ul> <p><code>Counting-based</code></p> <p>\u589e\u52a0\u4e00\u4e9b\u591a\u7684 bit \u7528\u4e8e\u8ba1\u6570 (\u957f\u5ea6\u5c0f\u4e8e\u65f6\u95f4\u6233)\u3002\u5728 Second chance \u7684\u57fa\u7840\u4e0a\uff0c\u5c06 reference bit \u79fb\u4f4d\u5230 counter \u4e2d\u3002\u5b9e\u9645\u4e0a\u4fdd\u5b58\u4e86 t \u4e2a\u5faa\u73af\u5468\u671f\u5185\u7684\u8bbf\u95ee\u5386\u53f2\u3002</p> <ul> <li>LFU\uff1aleast frequent used\uff0ccounter \u6700\u5c0f\u7684 Page \u66ff\u6362\u3002</li> <li>MFU\uff1amost frequent used\uff0ccounter \u6700\u5927\u7684 Page \u66ff\u6362\u3002</li> </ul>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#frame-allocation","title":"Frame Allocation","text":"<p>\u4e3b\u8981\u6709\u4e24\u79cd\u5206\u914d\u7684\u7b56\u7565\uff1aFixed Allocation\u3001Priority Allocation\u3002</p> <ul> <li>Fixed Allocation\uff1a\u6309\u8fdb\u7a0b\u5927\u5c0f\u6bd4\u4f8b\u8fdb\u884c\u5206\u914d\u3001\u5b8c\u5168\u516c\u5e73\u5206\u914d\u7b49\u3002</li> </ul> <p>\u66ff\u6362\u65f6\uff0c\u9875\u5206\u4e3a Global\u3001local allocation\uff0c\u5373\u66ff\u6362\u65f6\u4e00\u4e2a\u8fdb\u7a0b\u662f\u5426\u53ef\u4ee5\u9009\u62e9\u66ff\u6362\u5176\u4f59\u8fdb\u7a0b\u7684 Page\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#working-set-model","title":"Working Set Model","text":""},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#trashing","title":"Trashing \u98a0\u7c38","text":"<p>\u4f4e CPU \u4f7f\u7528\u7387\u3001ready Queue \u4e2d\u65e0\u8fdb\u7a0b\u3001\u8fdb\u7a0b\u5747\u5728\u786c\u76d8\u7684\u7b49\u5f85\u961f\u5217\u4e2d\u3001\u786c\u76d8\u4f7f\u7528\u7387\u9ad8\u2026\u2026\u5728\u6709 long-term schedule \u7684\u7cfb\u7edf\u4e2d\uff0c\u4e3a\u63d0\u9ad8 CPU \u7684\u5229\u7528\u7387\uff0cscheduler \u4f1a\u52a0\u8f7d\u66f4\u591a\u7684\u8fdb\u7a0b\u3002</p> <p>\u4ee5\u4e0a\u73b0\u8c61\u7531\u7269\u7406\u5185\u5b58\u8fc7\u5c0f\u9700\u8981\u4e0d\u65ad\u4e0e\u786c\u76d8\u8fdb\u884c Swapping\uff0c\u51fa\u73b0\u98a0\u7c38\u3002</p> <p></p> <p>Note</p> <p>\u7531\u4e8e\u5c40\u90e8\u6027\u5b58\u5728\uff0cdemand paging \u6709\u6548 \u4f46\u5f53 \\(\\sum Locality\\_Size &gt; Memory\\_Size\\) \u65f6\u4f1a\u51fa\u73b0 thrashing\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#working-set","title":"Working Set \u5de5\u4f5c\u96c6","text":"<p>\u6bcf\u4e2a\u8fdb\u7a0b\u5728\u4e00\u6bb5\u65f6\u95f4\u4e2d\u8bbf\u95ee\u7684 Page \u7684\u4e2a\u6570\u3002</p> <p>\\(\\Delta\\equiv working\\mbox{-}set\\,\\,window\\equiv fixed\\,\\,number\\,\\,of\\,\\,Page\\,\\,references\\)</p> <p>WSS<sub>i</sub> - working set size of Process P<sub>i</sub> </p> <p>\\(WSS_i= total\\,\\,number\\,\\,of\\,\\,pages\\,\\,referenced\\,\\,in\\,\\,the\\,\\,most\\,\\,recent\\,\\,\\Delta\\,(varies\\,\\,in\\,\\,time)\\)</p> <p>D = \\(\\sum\\) WSS<sub>i</sub> \\(\\equiv\\) total demand frames for all processes in the system\u3002</p> <p>\u82e5 D &gt; M\uff0c\u5219\u5ef6\u8fdf\u67d0\u4e00\u8fdb\u7a0b\u3002</p> <p></p> <p>\u5b9e\u9645\u5e94\u7528\u4e2d Working Set \u4f1a\u6bd4 \\(\\Delta\\) \u5c0f\uff0c\u53cd\u5e94\u4e86\u63a5\u4e0b\u6765\u53ef\u80fd\u9891\u7e41\u8bbf\u95ee\u7684\u9875\u9762\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a Working Set \u843d\u5728 Working Set \u4e2d\u7684 Page \u4f1a\u4fdd\u7559\uff0c\u4e0d\u5728\u7684\u4f1a\u6362\u51fa\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#allocating-kernel-memory","title":"Allocating Kernel Memory","text":"<p>\u4e00\u822c\u5e0c\u671b\u83b7\u5f97\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u4ece free-list \u4e2d\u83b7\u5f97\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#buddy-system-allocator","title":"Buddy System Allocator","text":"<p>\u4f7f\u7528\u201c\u4e8c\u5206\u201d\u7684\u65b9\u5f0f\u8fdb\u884c\u5206\u914d\u3002\u82e5\u5185\u5b58\u5355\u5143\u8fc7\u5c0f\uff0c\u5219\u8fdb\u884c\u5408\u5e76\uff1b\u82e5\u8fc7\u5927\uff0c\u5219\u8fdb\u884c\u51cf\u534a\u3002</p> <p></p> <p>\u6b64\u5916\u4e5f\u53ef\u4ee5\u4f7f\u7528 freelist + bitmap \u7684\u65b9\u5f0f\u8fdb\u884c\u5b9e\u73b0\u3002</p> <p></p> <p>\u5de6\u4fa7\u7684 free area \u4e2d\uff0c\u4e0d\u540c\u7684\u8282\u70b9\u8fde\u63a5\u4e86\u4e00\u7cfb\u5217 Page \u6570\u91cf\u76f8\u540c\u7684\u5355\u5143\uff0c\u4e0d\u540c\u8282\u70b9\u6240\u8fde\u7684 Page \u6570\u91cf\u4e0d\u540c\u3002\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u4e86\u4e00\u4e2a bitmap\uff0c\u4e0d\u540c\u7684\u8282\u70b9\u7684 map \u7684\u5bc6\u5ea6\u4e0d\u540c (\u5982\u7b2c 1 \u4e2a map \u4e24\u4e2a page \u8bbe 1 bit)\uff0c\u8868\u793a\u8fd9\u4e00\u533a\u57df\u4e2d\u662f\u5426\u6709\u88ab\u4f7f\u7528\u7684 Page\u3002</p> <p>\u4e0a\u56fe\u4e2d\uff0cPage 8 \u5728\u8282\u70b9 2 \u4e0a\uff0c\u8868\u793a\u4ece 8 \u5f00\u59cb\u7684 4 \u4e2a Page \u5747\u4e3a free\u3002</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#slab-allocator","title":"Slab Allocator","text":""},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#_29","title":"\u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0","text":"<p>2023 / 12 / 07</p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#file-system-structure","title":"File-System Structure","text":"<p>\u6587\u4ef6\u7cfb\u7edf\u901a\u5e38\u5b58\u50a8\u5728\u5916\u5b58\u4e4b\u4e0a\u3002</p> <p></p> <ul> <li>Device\uff1aHDD, SSD, NVM \u7b49\u7b49\u3002</li> <li>I/O control\uff1a\u786c\u4ef6\u5c42\u9762\u7684\u6307\u4ee4\u5b9e\u73b0 block \u7684\u8bfb\u5199\u3002</li> <li>Basic file system\uff1a\u5b8c\u6210\u8bfb\u5199\u5757\u7684\u64cd\u4f5c\uff0c\u5305\u542b\u8bfb\u5199\u7684\u8c03\u5ea6\u3002</li> <li>File-organization module\uff1a\u5c06 Logic block \u6620\u5c04\u5230 Physical block \u4e0a\uff0c\u7ba1\u7406\u7a7a\u95f2\u5757\u3002</li> <li>Logical file system\uff1a\u7ba1\u7406\u6587\u4ef6\u7684 metedata\uff0c\u6587\u4ef6\u7684\u4fdd\u62a4\u548c\u5b89\u5168\u529f\u80fd\u5b9e\u73b0\u3002</li> </ul>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#fs-implement-data-structure","title":"FS Implement Data Structure","text":"<ul> <li>Disk \u7ed3\u6784\uff1aBoot control block\u3001Volume control block (superblock in Unix)\u3001Directory structure per file system\u3001Per-file FCB (inode in Unix)\u3002</li> <li>FCB - File Control Block\uff0c\u5927\u5c0f\u4e0d\u5230\u4e00\u4e2a block\uff0c\u4e00\u4e2a block \u4e2d\u53ef\u5b58\u50a8\u591a\u4e2a\u3002<ul> <li></li> <li>FCB \u4e2d\u4e0d\u5305\u542b\u6587\u4ef6\u540d\uff0c\u56e0\u4e3a FCB \u9762\u5411\u64cd\u4f5c\u7cfb\u7edf\u3002\u6587\u4ef6\u540d\u5b58\u50a8\u5728\u76ee\u5f55\u7cfb\u7edf\u4e2d\u3002</li> </ul> </li> <li>In-memory \u7ed3\u6784\uff1aIn-memory mount table about each mounted volume\u3001Directory cache (\u7f13\u5b58\u6700\u8fd1\u8bbf\u95ee\u7684\u76ee\u5f55) \u3001System-wide open-file table\u3001Per-process open-file table\u3002</li> <li></li> <li>Index \u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002Per-Process open-file table \u4e2d\u7684\u7b2c\u4e00\u9879\u4e3a std read\uff0c\u7b2c\u4e8c\u9879\u4e3a std write\u3002</li> </ul>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#virtual-file-system","title":"Virtual File System","text":"<p>\u5b9e\u73b0\u8de8\u8bbe\u5907\u7684\u6587\u4ef6\u7ba1\u7406\u3002\u5229\u7528\u5206\u5c42\u8bbe\u8ba1\u5b9e\u73b0\uff0c\u76f8\u5f53\u4e8e\u5bf9\u4e0d\u540c\u7684\u8bbe\u5907\u8fdb\u884c\u5c01\u88c5\uff0c\u63d0\u4f9b\u7edf\u4e00\u7684 API \u63a5\u53e3\u3002</p> <ul> <li>\u5c5e\u4e8e Logical file system Layer\u3002\u4f4d\u4e8e\u5185\u5b58\u4e2d\uff0c\u4e0d\u662f\u7269\u7406\u7684\u6587\u4ef6\u7cfb\u7edf\u3002</li> </ul> <p></p>"},{"location":"notes/OS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html#diectory-implement","title":"Diectory Implement","text":"<p>\u9700\u8981\u5728\u76ee\u5f55\u4e2d\u5b9e\u73b0\u6587\u4ef6\u7684\u5404\u7c7b\u64cd\u4f5c\u529f\u80fd\u3002</p> <ul> <li>\u53ef\u4ee5\u5229\u7528 Linear List \u5b9e\u73b0\uff0c\u4f46\u4e0d\u5229\u4e8e\u68c0\u7d22\u3002</li> <li>\u53ef\u4ee5\u5229\u7528 Hash Table \u5b9e\u73b0\u3002\u9700\u8981\u89e3\u51b3 Hash Collisions \u95ee\u9898\u3002</li> </ul>"},{"location":"notes/TC/%E8%AE%A1%E7%AE%97%E7%90%86%E8%AE%BA.html","title":"\u8ba1\u7b97\u7406\u8bba","text":""},{"location":"notes/TC/%E8%AE%A1%E7%AE%97%E7%90%86%E8%AE%BA.html#15","title":"1~5","text":"<p>\u4e3b\u8981\u5185\u5bb9\u4e3a\uff1aDFA\u3001NFA\u3001Regular expression\u3001Context-free\u3001PDA</p> <p>pdf \u5982\u4e0b\ud83d\udc47</p> <p>\u8ba1\u7b97\u7406\u8bba 1~5 \u8bb2</p>"},{"location":"notes/TC/%E8%AE%A1%E7%AE%97%E7%90%86%E8%AE%BA.html#67","title":"6~7","text":"<p>\u4e3b\u8981\u5185\u5bb9\u4e3a\uff1a\u56fe\u7075\u673a\u53ca\u5176\u53d8\u5f62\u3002</p> <p>pdf \u5982\u4e0b\ud83d\udc47</p> <p>\u8ba1\u7b97\u7406\u8bba 6~7 \u8bb2</p>"},{"location":"notes/TC/%E8%AE%A1%E7%AE%97%E7%90%86%E8%AE%BA.html#8","title":"8","text":"<p>\u4e3b\u8981\u5185\u5bb9\u4e3a\uff1a\u89c4\u7ea6\u53ca\u5176\u5e94\u7528\u3002</p> <p>pdf \u5982\u4e0b \ud83d\udc47</p> <p>\u8ba1\u7b97\u7406\u8bba 8 \u8bb2</p>"},{"location":"notes/TC/%E8%AE%A1%E7%AE%97%E7%90%86%E8%AE%BA.html#9","title":"9","text":"<p>\u4e3b\u8981\u5185\u5bb9\u4e3a\uff1a\u89c4\u7ea6\u53ca\u5176\u5e94\u7528\u3002</p> <p>pdf \u5982\u4e0b \ud83d\udc47</p> <p>\u8ba1\u7b97\u7406\u8bba 9 \u8bb2</p>"},{"location":"notes/TC/%E8%AE%A1%E7%AE%97%E7%90%86%E8%AE%BA.html#10","title":"10","text":"<p>\u4e3b\u8981\u5185\u5bb9\u4e3a\uff1a\u6570\u503c\u51fd\u6570\u76f8\u5173\u3002</p> <p>pdf \u5982\u4e0b \ud83d\udc47</p> <p>\u8ba1\u7b97\u7406\u8bba 10 \u8bb2</p>"},{"location":"notes/crypto/crypto.html","title":"\u5bc6\u7801\u5b66","text":"<p>\u6574\u7406</p>"},{"location":"notes/crypto/crypto.html#aes","title":"AES","text":"<p>2023 / 05 / 08</p> <p>Advanced Encryption Standard</p>"},{"location":"notes/crypto/crypto.html#_2","title":"\u6982\u51b5","text":"<p>AES \u7684\u5bc6\u94a5\u6709 3 \u79cd\uff1a128 bit \u5faa\u73af\u8f6e\u6570 10\uff1b192 bit \u5faa\u73af\u8f6e\u6570 12\uff1b256 bit \u5faa\u73af\u8f6e\u6570 14\uff1b</p> <p>\u4ee5 128 \u4f4d ( 16 \u5b57\u8282)\u5bc6\u94a5\u4e3a\u4f8b\uff0c\u8bbe p \u4e3a\u660e\u6587\uff0ck \u4e3a\u5bc6\u94a5\uff0c\u5219 AES \u7684\u52a0\u5bc6\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> C<pre><code>unsigned char a[4] = {0x03, 0x01, 0x01, 0x02};\nunsigned char p[16];\nAddRoundKey(p, k);\nfor(i=1; i&lt;=10; i++) {\n    // \u5bf9 p \u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u4f5c\u66ff\u6362\n    // AES \u7684 sbox \u548c DES \u6709\u6240\u4e0d\u540c\uff0c\u8fdb 8 \u4f4d\uff0c\u51fa 8 \u4f4d\n    // AES sbox \u4e2d\u4e3a 0 - 255 \u6309\u7167\u516c\u5f0f\u6446\u653e\uff0c\u4e0d\u91cd\u590d\n    // ByteSub \u7b2c\u4e8c\u4f4d\u662f\u5b57\u8282\u6570\n    ByteSub(p, 16); /* p[i] = sbox[p[i]]; */\n    /*  ShiftRow:\n        0 4 8 C -\u79fb0\u4f4d-&gt; 0 4 8 C\n        1 5 9 D -\u79fb1\u4f4d-&gt; 5 9 D 1\n        2 6 A E -\u79fb2\u4f4d-&gt; A E 2 6\n        3 7 B F -\u79fb3\u4f4d-&gt; F 3 7 B\n    */\n    ShiftRow(p);\n    /* MixColumn \u8f83\u4e3a\u590d\u6742 */\n    if(i != 10)\n        MixColumn(p, a, 1); /* do mul */\n    else\n        MixColumn(p, a, 0); /* don't mul */\n    /*  AddRoundKey:\n        \u6bcf\u4e00\u8f6e\u7684\u7528\u4e8e\u52a0\u5bc6\u7684\u5bc6\u94a5\u90fd\u4e0d\u4e00\u6837\n        \u5185\u90e8\u4ee3\u7801\u4e3a:\n        for (j = 0; j &lt; 16; j++)\n            p[j] ^= k[i * 16 + j];\n        \u5176\u4e2d k \u7684\u957f\u5ea6\u8fdc\u5927\u4e8e 16 byte\n        k \u7684\u540e\u7eed\u4f4d\u4e3a\u539f\u59cb\u7684 16 byte \u79cd\u5b50\u5bc6\u94a5\u751f\u6210\n    */\n    AddRoundKey(p, k + i * (4 * 4));\n}\n</code></pre>"},{"location":"notes/crypto/crypto.html#_3","title":"\u6570\u5b66\u57fa\u7840","text":"<ul> <li> <p>\u6709\u9650\u57df\uff1a\u57df (field) \u5c31\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5176\u4e0a\u505a\u52a0\u51cf\u4e58\u9664\u8fd0\u7b97\u800c\u4e0d\u8131\u79bb\u8be5\u96c6\u5408</p> </li> <li> <p>\u6709\u9650\u57df\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u79f0\u4e3a\u6709\u9650\u57df\u7684\u9636 (order)</p> </li> <li>\u6709\u9650\u57df\u7684\u9636\u5fc5\u4e3a\u7d20\u6570 p \u7684\u5e42,\u5373p<sup>n</sup>\uff0c\u5176\u4e2d n \u4e3a\u6b63\u6574\u6570</li> <li> <p>\u5bf9\u4efb\u610f\u7d20\u6570 p \u548c\u6b63\u6574\u6570 n\uff0c\u5b58\u5728 p<sup>n</sup> \u9636\u7684\u6709\u9650\u57df\uff0c\u8bb0\u4e3a GF(p<sup>n</sup>)\u3002\u5f53 n = 1 \u65f6\uff0c\u6709\u9650\u57df GF(p) \u4e5f\u79f0\u7d20\u57df</p> </li> <li> <p>\u4f8b\u5982 GF(2) \u4e0a\u6709 2 \u4e2a\u5143\u7d20 0 \u548c 1\uff0c\u52a0\u6cd5\u5b9a\u4e3a\u5f02\u6216\uff0c\u4e58\u6cd5\u5b9a\u4e3a\u4e0e</p> </li> <li> <p>\u518d\u4f8b\u5982 GF(2<sup>8</sup>) \u5bf9\u5e94 8 bit \u7684 2 \u8fdb\u5236\u6570\uff0c\u52a0\u6cd5\u5c31\u662f\u6309\u4f4d\u5f02\u6216 (\u53ef\u5f97\u51fa\u8be5\u57df\u4e0a x \u7684\u52a0\u6cd5\u9006\u5143\u5c31\u662f x \u672c\u8eab\uff0c\\(x \\equiv -x\\))\uff0c\u800c\u5bf9\u4e8e\u4e58\u6cd5\u8fd0\u7b97\uff0c\u4e3e\u4f8b\u4ee5\u53ca\u4ee3\u7801\u5982\u4e0b\uff1a</p> </li> </ul> C<pre><code>/*\n    x = 1011 0110 == 0xB6\n    y = 0000 0011 == 0x03 *)\n    ------------------------\n        1011 0110\n       10110 110\n    ------------------------\n       11101 1010 mod 0x11B =&gt; \u7b49\u4ef7\u4e8e\u51cf\u6cd5\n       10001 1011 -) (\u7531\u4e8e\u4e4b\u524d\u7684\u6027\u8d28\uff0c\u51cf\u6cd5\u5373\u4e3a\u52a0\u6cd5\uff0c\u5373\u4e3a\u5f02\u6216)\n    ------------------------\n       01100 0001 == 0xC1\n*/\n/*---\u519c\u592b\u7b97\u6cd5\uff0c\u8ba1\u7b97 x * y mod 0x11B---*/\nproduct = 0;\nwhile (x != 0 &amp;&amp; y != 0) {\n    // y \u7684\u4e2a\u4f4d\u662f\u5426\u4e3a 1\n    if (y &amp; 1) product = product ^ x; // \u52a0\u6cd5\n    x &lt;&lt;= 1, y &gt;&gt;= 1; // \u88ab\u4e58\u6570 * 2\uff0c\u4e58\u6570 / 2\uff0c\u79ef\u4e0d\u53d8\n    if (x &gt;= 0x100) x = x ^ 0x11B; // \u76f8\u5f53\u4e8e mod 0x11B\n}  \n</code></pre> <p>\u6216\u8005\u4e5f\u53ef\u4ee5\u7528\u591a\u9879\u5f0f\u7684\u5f62\u5f0f\u8fdb\u884c\u8ba1\u7b97\uff1a</p> <p>10001000 * 00000101 mod 0x11B =&gt; \\(((x^7+x^3) * (x^2+1))\\,mod\\,(x^8+x^4+x^3+x+1)\\)</p>"},{"location":"notes/crypto/crypto.html#mixcolumn","title":"MixColumn","text":"C<pre><code>char plain[16] = {4, 8, 12, 16,\n                  3, 7, 11, 15,\n                  2, 6, 10, 14,\n                  1, 5,  9, 13};\n</code></pre> <p>\\(\\begin{bmatrix}2&amp;3&amp;1&amp;1\\\\1&amp;2&amp;3&amp;1\\\\1&amp;1&amp;2&amp;3\\\\3&amp;1&amp;1&amp;2\\end{bmatrix} \\times \\begin{bmatrix}4\\\\3\\\\2\\\\1\\end{bmatrix} = \\begin{bmatrix}14\\\\5\\\\0\\\\15\\end{bmatrix} \\stackrel{\u5b58\u50a8\u65f6\u9700\u8981\u5c06\u5217\u8f6c\u884c}{\\longrightarrow} \\begin{bmatrix}14&amp;5&amp;0&amp;15\\end{bmatrix}\\)</p> <p>\u52a0\u5bc6\u65f6\uff0c\u88ab\u4e58\u6570\u4e3a \\(3\\,1\\,1\\,2\\) \uff0c\u89e3\u5bc6\u65f6\u5c06\u5176\u4e58\u6cd5\u9006\u5143 \\(B\\,D\\,9\\,E\\)\uff0c\u4f5c\u4e3a\u88ab\u4e58\u6570\uff0c\u5c06\u5bc6\u6587\u4f5c\u4e3a\u4e58\u6570\uff0c\u5373\u53ef\u4ee5\u8fd8\u539f\u51fa\u660e\u6587\u3002 </p> <p>\u8fd9\u91cc\u7684\u4e58\u6cd5\u9700\u8981\u8fd0\u7528\u519c\u592b\u7b97\u6cd5\u8fdb\u884c\u5904\u7406\u3002</p>"},{"location":"notes/crypto/crypto.html#rsa","title":"RSA","text":"<p>2023 / 05 / 22</p> <p>\u5bf9\u79f0\u5bc6\u7801\u4f53\u5236\uff1a\u52a0\u5bc6\u548c\u89e3\u5bc6\u4f7f\u7528\u540c\u4e00\u5bc6\u94a5\u3002</p> <p>RSA \u7b97\u6cd5\u91c7\u7528\u516c\u94a5\u5bc6\u7801\u4f53\u5236\uff0c\u4e5f\u79f0\u975e\u5bf9\u79f0\u5bc6\u7801\u4f53\u5236\u3002</p>"},{"location":"notes/crypto/crypto.html#_4","title":"\u7b97\u6cd5\u8fc7\u7a0b","text":"<ol> <li>\u9009\u53d6\u4e24\u4e2a\u5927\u7d20\u6570\uff0cp \u548c q\uff0c\u8ba1\u7b97\u4e58\u79ef \\(n = p\\,*\\,q\\)\uff0cn \u53ef\u4ee5\u516c\u5f00\uff0cp \u548c q \u4fdd\u5bc6\u3002</li> <li>\u968f\u673a\u9009\u53d6\u52a0\u5bc6\u5bc6\u94a5 e\uff0c\u4f7f e \u548c \\((p-1)*(q-1)\\) \u4e92\u8d28\u3002</li> <li>\u627e\u51fa d\uff0c\u4f7f \\(e\\,*\\,d= 1\\,mod\\,((p-1)*(q-1))\\)\u3002</li> <li>\u52a0\u5bc6\uff1a\\(c = m^e(mod\\,n)\\)\uff0c\u89e3\u5bc6\uff1a\\(m = c^d(mod\\,n)\\)\u3002</li> <li>(e, n) \u4f5c\u4e3a\u516c\u94a5 (\u516c\u5f00)\uff0c(d, n) \u4f5c\u4e3a\u79c1\u94a5\u3002</li> </ol>"},{"location":"notes/crypto/crypto.html#_5","title":"\u6570\u5b66\u57fa\u7840","text":"<p>Euler \u51fd\u6570\uff1a\\(\\phi(n)\\) - \u5c0f\u4e8en\u4e14\u4e0en\u4e92\u7d20\u7684\u6574\u6570\u4e2a\u6570\u3002\u82e5 \\(n_1,\\,n_2\\) \u4e92\u7d20\uff0c\u5219\u6709 \\(\\phi(n_1*n_2) = \\phi(n_1)*\\phi(n_2)\\)\u3002\u6b64\u5916\u6709 \\(\\phi(n) = \\prod_{p\\,|\\,n} (1-\\frac{1}{p})\\) \u5176\u4e2d p \u4e3a \u53ef\u4ee5\u6574\u9664 n (\u5373\u4e0b\u6807) \u7684\u7d20\u6570\u3002</p> <p>Euler \u5b9a\u7406\uff1a\u82e5 \\(gcd(x,\\,n) = 1\\)\uff0c\u5219 \\(x^{\\phi(n)} = 1 (mod \\, n)\\)</p> <p>Fermat \u5c0f\u5b9a\u7406\uff1a\u53ef\u4ee5\u7531 Euler \u5b9a\u7406\u5f97\u5230\uff0c\u5f53 p \u4e3a\u7d20\u6570\u65f6\uff0c\u6709 \\(\\phi(p) = p-1\\)\uff0c\u6545\u6709 \\(x^{p-1} = 1 (mod \\, n)\\)\u3002</p> <p>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\uff1a\u8bbe m<sub>1</sub>, m<sub>2</sub>, m<sub>3</sub> \u2026, m<sub>r</sub> \u4e24\u4e24\u4e92\u7d20, \u5219\u4ee5\u4e0b\u540c\u4f59\u65b9\u7a0b\u7ec4 x \u2261 a<sub>i</sub> (mod m<sub>i</sub>), i = 1, 2, 3, \u2026r \u6a21 M = m<sub>1</sub> m<sub>2</sub> m<sub>3</sub> \u2026m<sub>r</sub> \u7684\u552f\u4e00\u89e3\u4e3a</p> <p>\\(x = \\sum_{i = 1}^r a_i *M_i*(M_{i-1} \\, mod \\, m_i) \\,mod\\,M \\,\\,\u5176\u4e2d\\, M_i = \\frac{M}{m_i}\\).</p>"},{"location":"notes/crypto/crypto.html#_6","title":"\u6570\u5b57\u7b7e\u540d","text":"<p>\u53d1\u9001\u65b9 A \u7ed9 \u63a5\u53d7\u65b9 B \u53d1\u9001\u4fe1\u606f L\u3002\u9996\u5148\u9700\u8981\u5bf9\u4fe1\u606f\u8fdb\u884c\u52a0\u5bc6\u3002</p> <p>\u4fe1\u606f\u52a0\u5bc6\u7684\u8fc7\u7a0b\uff1a1. (A) L' =  RSA(L, B \u7684\u516c\u94a5)\u30022. (B) L = RSA(L', B \u7684\u79c1\u94a5)\u3002</p> <p>\u4e3a\u786e\u8ba4\u53d1\u9001\u65b9\u4e3a A\uff0c\u9700\u8981\u8fdb\u884c\u6570\u5b57\u7b7e\u540d\u3002</p> <p>\u6570\u5b57\u7b7e\u540d\u7684\u8fc7\u7a0b\uff1a1. (A) M = md5(L)\u30022. (A) M' = RSA(M, A \u7684\u79c1\u94a5)\u30023. (B) m = RSA(M', A \u7684\u516c\u94a5)\uff0c\u6bd4\u8f83 m \u4e0e M \u662f\u5426\u76f8\u540c\u5373\u53ef\u3002</p>"},{"location":"notes/crypto/crypto.html#ecc","title":"ECC","text":"<p>2023 / 06 / 05</p> <p>\u692d\u5706\u66f2\u7ebf\u53ef\u4ee5\u5b9a\u4e49\u6210\u6240\u6709\u6ee1\u8db3\u65b9\u7a0b E: y<sup>2</sup> = x<sup>3</sup> + ax + b (mod p) \u7684\u70b9 (x, y) \u6240\u6784\u6210\u7684\u96c6\u5408\u3002</p> <p>\u82e5 x<sup>3</sup> + ax + b \u6ca1\u6709\u91cd\u590d\u7684\u56e0\u5f0f\u6216 4a<sup>3</sup> + 27b<sup>2</sup> \u2260 0 (\u79f0\u4e3a\u5224\u522b\u5f0f)\uff0c\u5219 E: y<sup>2</sup> = x<sup>3</sup> + ax + b \u80fd\u5b9a\u4e49\u6210\u4e3a\u4e00\u4e2a\u7fa4\u3002</p>"},{"location":"notes/crypto/crypto.html#_7","title":"\u6570\u5b66\u57fa\u7840","text":"<p>\u5bf9\u4e8e\u56fe 1 \u4e2d\uff0cR \u5173\u4e8e x \u8f74\u7684\u5bf9\u79f0\u70b9 R' \u4e8e\u662f\u6709 P + Q = R'\u3002\u5176\u4e2d\u6240\u6709\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\u90fd\u5fc5\u987b\u662f\u6574\u6570\u3002</p> <p>(1) P + O = O + P = P</p> <p>(2) \u5982\u679c P = (x<sub>1</sub>, y<sub>1</sub>)\uff0cQ = (x<sub>2</sub>, y<sub>2</sub>)\uff0c\u4e14\u6709 x<sub>1</sub> = x<sub>2</sub> \u53ca y<sub>1</sub> = y<sub>2</sub> = 0\uff0c\u6216\u6709 x<sub>1</sub> = x<sub>2</sub> \u53ca y<sub>1</sub> = -y<sub>2</sub> \u2260 0\uff0c\u5219 P + Q = O;</p> <p>(3) \u5982\u679c P = (x<sub>1</sub>, y<sub>1</sub>)\uff0cQ = (x<sub>2</sub>, y<sub>2</sub>)\uff0c\u4e14\u6392\u9664(1)(2)\uff0c\u5219 P + Q = (x<sub>3</sub>, y<sub>3</sub>) \u7531\u4e0b\u5217\u89c4\u5219\u51b3\u5b9a\uff1a</p> <p>x<sub>3</sub> = \u03bb<sup>2</sup> - x<sub>1</sub> - x<sub>2</sub>\uff1by<sub>3</sub> = \u03bb(x<sub>1</sub> - x<sub>3</sub>) - y<sub>1</sub>\uff1b\u5f53 P \u2260 Q \u65f6\uff0c\u03bb = (y<sub>2</sub> - y<sub>1</sub>) / (x<sub>2</sub> - x<sub>1</sub>)\uff1b\u5f53 P = Q \u65f6\uff0c\u03bb = (3x<sub>1</sub><sup>2</sup> + a) / (2y<sub>1</sub>) \uff1b</p> <p>a\uff0cb\uff0cp\uff0c\u57fa\u70b9 G (\u6ee1\u8db3\u66f2\u7ebf\u7684\u67d0\u4e00\u70b9)\uff0cG \u7684\u9636\uff0c\u4f59\u56e0\u5b50\uff0c\u516d\u4e2a\u6982\u5ff5\u51b3\u5b9a\u4e86\u4e00\u6761\u692d\u5706\u66f2\u7ebf\u3002</p> <p>n * G = 0 \u65f6\u79f0 n \u662f G \u7684\u9636\u30021G\uff0c2G\uff0c...\uff0cnG \u6784\u6210\u4e00\u4e2a\u5faa\u73af\u5b50\u7fa4\u3002(n + 1)G = 1G\u3002\u6ee1\u8db3\u66f2\u7ebf\u65b9\u7a0b\u7684\u6240\u6709\u70b9\u7684\u4e2a\u6570\u79f0\u4e3a\u66f2\u7ebf\u7684\u9636\u3002</p> <p>\u4f59\u56e0\u5b50 = \u66f2\u7ebf\u7684\u9636 / G \u7684\u9636\uff1b</p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html","title":"\u7f16\u8bd1\u539f\u7406","text":""},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#_1","title":"\u7f16\u8bd1\u539f\u7406","text":"<p>2023 - 2024 \u6625\u590f</p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#introduction","title":"Introduction","text":"<p>2024.02.29</p> <p><code>compiler</code>: \u4e00\u4e2a\u5c06\u4e00\u79cd\u8bed\u8a00\u7ffb\u8bd1\u4e3a\u53e6\u4e00\u79cd\u8bed\u8a00\u7684\u7a0b\u5e8f (\u8bed\u8a00\u4e0e\u8ba1\u7b97\u673a\u76f8\u5173)\u3002</p> <p></p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#typical-workflow-of-a-compiler","title":"Typical Workflow of a Compiler","text":"<p>\u7f16\u8bd1\u5668\u7684\u5de5\u4f5c\u9636\u6bb5\u901a\u5e38\u5982\u4e0b\uff1a\u5206\u4e3a\u524d\u3001\u4e2d\u3001\u540e\u4e09\u7aef</p> <p></p> <ul> <li> <p>\u8bcd\u6cd5\u5206\u6790 (Lexical Analysis): String \\(\\rightarrow\\) token sequence (\u8bb0\u53f7\u5e8f\u5217)\uff0c\u5220\u9664\u4e0d\u5fc5\u8981\u7684\u90e8\u5206\u3002\u901a\u5e38\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5b9a\u4e49 (\u4f8b\u5982 <code>rm 2024*</code>)\uff0c\u7528\u4e8e\u5339\u914d\u4e0d\u540c\u7684 token\u3002</p> </li> <li> <p>\u8bed\u6cd5\u5206\u6790 (Syntactic Analysis): \u5c06\u8bb0\u53f7\u5e8f\u5217\u89e3\u6790\u4e3a\u67d0\u79cd\u8bed\u6cd5\u7ed3\u6784 (\u5982\u8bed\u6cd5\u6811)\u3002</p> </li> <li> <p>\u8bed\u4e49\u5206\u6790 (Semantic Analysis): \u5206\u6790\u8bed\u6cd5\u6811\u8282\u70b9\u7684\u5c5e\u6027\u4fe1\u606f\u7b49\u3002\u5f97\u5230\u7b26\u53f7\u8868\u7b49\u3002</p> </li> </ul> <p></p> <ul> <li>\u4e2d\u95f4\u4ee3\u7801\u751f\u6210 (IR): \u6e90\u8bed\u8a00\u4e0e\u76ee\u6807\u8bed\u8a00\u7684\u6865\u6881\u3002(\u4e09\u5730\u5740: \u6bcf\u4e2a\u8868\u8fbe\u5f0f\u4e2d\u81f3\u591a\u4e00\u4e2a\u64cd\u4f5c\u7b26\u4e24\u4e2a\u64cd\u4f5c\u6570)</li> </ul> <p></p> <ul> <li>**\u57fa\u4e8e\u4e2d\u95f4\u8868\u793a\u7684\u4f18\u5316 ** (\u673a\u5668\u65e0\u5173\u4ee3\u7801\u4f18\u5316): \u5bf9\u4e2d\u95f4\u4ee3\u7801\u8fdb\u884c\u4f18\u5316\u548c\u53d8\u6362\uff0c\u964d\u4f4e\u6267\u884c\u65f6\u95f4\uff0c\u51cf\u5c11\u8d44\u6e90\u6d88\u8017\u3002</li> </ul> <p></p> <ul> <li>\u540e\u7aef - \u76ee\u6807\u4ee3\u7801\u751f\u6210: \u628a\u4e2d\u95f4\u4ee3\u7801\u7ffb\u8bd1\u4e3a\u76ee\u6807\u8bed\u8a00\uff0c\u6d89\u53ca\u5230\u6307\u4ee4\u9009\u62e9\u3001\u5bc4\u5b58\u5668\u5206\u914d\u3001\u6307\u4ee4\u8c03\u5ea6\u7b49\u3002</li> </ul> <p></p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#tiger","title":"Tiger \u7f16\u8bd1\u5668","text":"<ul> <li>AST (\u62bd\u8c61\u8bed\u6cd5\u6811): \u7ecf\u8fc7\u8bed\u6cd5\u5206\u6790 + \"Parsing Actions\" \u751f\u6210\u3002</li> <li>IR Tree (\u6811\u578b\u4e2d\u95f4\u8868\u793a): \u8bed\u4e49\u5206\u6790\u4e4b\u540e\u6309\u7167\u4e00\u5b9a\u89c4\u5219\u751f\u6210\u3002\u8fdb\u884c\u4e86\u5f52\u4e00\u5316 (Canonicalized) \u7684\u64cd\u4f5c\u3002</li> <li>Control Flow Analysis (\u63a7\u5236\u6d41\u5206\u6790): \u5224\u65ad\u5206\u652f\u8bed\u53e5\u7684\u6267\u884c\u8def\u5f84 (\u53ef\u4ee5\u53bb\u9664\u4e0d\u53ef\u8fbe\u7684\u8def\u5f84)\u3002</li> <li>CFG (Control Flow Graph) (\u63a7\u5236\u6d41\u56fe): \u65b9\u4fbf\u8fdb\u884c\u6570\u636e\u6d41\u5206\u6790\u2013\u5982\u6d3b\u8dc3\u53d8\u91cf\u5206\u6790 (Liveness Analysis)\u3002</li> <li>Interference Graph (\u51b2\u7a81\u56fe): \u4ece\u6d3b\u8dc3\u53d8\u91cf\u5206\u6790\u7684\u7ed3\u679c\u6784\u9020\uff0c\u7528\u4e8e\u6307\u5bfc\u5bc4\u5b58\u5668\u5206\u914d\u3002</li> </ul>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#lexical-analysis","title":"Lexical Analysis \u8bcd\u6cd5\u5206\u6790","text":"<p>2024.03.07</p> <p></p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#lexical-token","title":"Lexical Token","text":"<p><code>\u5b9a\u4e49</code>\uff1a\u4e00\u4e2a\u5b57\u6bcd\u5e8f\u5217\uff0c\u6587\u6cd5\u4e2d\u7684\u57fa\u672c\u5355\u5143\u3002</p> <p>\u5e38\u89c1\u7684 token \u6709\uff1a</p> <p></p> <p>\u591a\u6570\u8bed\u8a00\u4e2d\u4fdd\u7559\u8bcd\u4e0d\u4f5c\u4e3a identifiers\u3002</p> <p>\u5e38\u89c1\u7684 non-token \u6709\uff1a</p> <p></p> <p>\u8bcd\u6cd5\u5206\u6790\u7684\u793a\u4f8b\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#regular-expression","title":"Regular Expression","text":"<p>\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u63cf\u8ff0 token \u89c4\u5219\uff0c\u518d\u4f7f\u7528 DFA \u5b9e\u73b0\u4e0a\u8ff0\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002</p> <p>\u8bcd\u6cd5\u5206\u6790\u9636\u6bb5\u4e0d\u7528\u5173\u5fc3 string \u7684\u542b\u4e49\uff0c\u53ea\u9700\u8981\u5173\u5fc3\u5b57\u7b26\u4e32\u662f\u5426\u5728\u8bed\u8a00\u4e2d\u3002</p> <p></p> <p>Note</p> <p>\u5176\u4e2d a | \\(\\epsilon\\) \u4e0e a | \u7b49\u4ef7\u3002</p> <p>Note</p> <p>\u66f4\u591a\u7684\u7b80\u5199\uff1a  \u7b80\u5199\u4e0d\u4f1a\u8ba9\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u8868\u8fbe\u80fd\u529b\u589e\u52a0\u3002</p> <p>Note</p> <p> \u7b2c\u4e94\u884c\u8868\u793a\u7684\u662f\u6ce8\u91ca\u6216\u7a7a\u683c\u3001\u6362\u884c\u7b49\u3002</p> <p>Warning</p> <p>\u4e0a\u8ff0\u7684\u4f8b\u5b50\u4e2d\u5b58\u5728\u6b67\u4e49\uff0c\u4f8b\u5982 <code>if8</code> \u53ef\u4ee5\u89e3\u91ca\u4e3a ID \u4e5f\u53ef\u4ee5\u89e3\u91ca\u4e3a if + 8\u3002 \u73b0\u4ee3\u7684\u7f16\u8bd1\u5668\u4f1a\u5f15\u5165\u6700\u957f\u5339\u914d\u673a\u5236\u4e14\u6309\u7167\u89c4\u5219\u7684\u4f18\u5148\u7ea7\u9010\u6761\u5339\u914d (if8 \u89e3\u91ca\u4e3a ID)\u3002</p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#finite-automata","title":"Finite Automata","text":"<p><code>\u786e\u5b9a\u6027\u72b6\u6001\u673a</code>\uff1ano two edges leaving from the same state are labeled with the same symbol. </p> <p>\u5c06\u4e0a\u8ff0\u7684\u516d\u4e2a DFA \u62fc\u63a5\u6210\u4e00\u4e2a DFA\uff1a</p> <p></p> <p>\u8ba1\u7b97\u673a\u4e2d DFA \u7684\u5b9e\u9645\u4e0a\u901a\u8fc7\u8868\u683c\u7684\u65b9\u5f0f (transition matrix) \u5b9e\u73b0\u7684\u3002</p> <p></p> <ul> <li>\u6bcf\u4e00\u884c\u8868\u793a\u4e00\u4e2a\u72b6\u6001\uff0c\u6bcf\u4e00\u5217\u8868\u793a\u8bfb\u5165\u7684 symbol\uff0c\u5b58\u50a8\u7684\u503c\u8868\u793a\u8bfb\u5165\u540e\u8df3\u8f6c\u5230\u7684\u72b6\u6001\u3002</li> <li>0 \u8868\u793a\u9519\u8bef\u72b6\u6001\u3002</li> </ul> <p>\u989d\u5916\u9700\u8981\u4e00\u4e2a\u77e9\u9635\u5b58\u50a8\u6bcf\u4e00\u4e2a\u72b6\u6001\u662f\u5426\u4e3a\u7ec8\u6001 (\"finality\" array)\uff0c\u4ee5\u53ca\u5176\u5bf9\u5e94\u7684\u8f93\u51fa\u6807\u7b7e\u662f\u4ec0\u4e48\u3002</p> <ul> <li>\u4e3a\u5b9e\u73b0 Longest matching\uff0c\u6bcf\u6b21\u9047\u5230\u53ef\u4ee5\u7ec8\u6b62\u7684\u8282\u70b9\u65f6\uff0c\u5148\u8bb0\u5f55\u5f53\u524d\u7684\u5206\u6790\u7ed3\u679c\uff0c\u7ee7\u7eed\u5411\u540e\u626b\u63cf\uff0c\u76f4\u5230\u65e0\u6cd5\u626b\u63cf\u4e3a\u6b62\u3002</li> <li>\u9700\u8981 <code>Last-Final</code>\uff0c<code>Input-Position-at-Last-Final</code> \u4e24\u4e2a\u53d8\u91cf\u8fdb\u884c\u8bb0\u5f55\u3002</li> <li></li> <li></li> </ul>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#nondeterministic-finite-automata","title":"Nondeterministic Finite Automata","text":"<p>Thompson's Construction</p> <p>\u5c06\u6b63\u5219\u8868\u8fbe\u5f0f\u8f6c\u5316\u4e3a NFA</p> <p></p> Regular Exp NFA <p>Subset Construction</p> <p>\u5c06 NFA \u8f6c\u5316\u4e3a DFA</p> <p></p> <ul> <li>edge(s, c)\uff1a1.the set of all NFA states reachable by following a single edge with label c from state s.</li> <li>closure(S)\uff1athe set of states that can be reached from a state in S without consuming any of the input, that is, by going only through \u220a-edges. </li> </ul> <p></p> <p>\u7b97\u6cd5\u601d\u60f3\uff1a</p> <p></p> <p>\u7b97\u6cd5\u5b9e\u73b0\uff1a</p> <p></p> <p>\u7b97\u6cd5\u4f8b\u5b50\uff1a</p> <p></p> NFA DFA <p>\u4e0a\u8ff0\u53f3\u56fe\u7684\u90e8\u5206\u7b49\u4ef7\u72b6\u6001\u53ef\u4ee5\u5408\u5e76\uff0c\u4ee5\u7f29\u5c0f DFA\u3002\u4f46\u6709\u90e8\u5206\u7684\u7b49\u4ef7\u72b6\u6001\u65e0\u6cd5\u6d88\u9664\u3002</p> <p></p> <p>\u4e0a\u8ff0\u7684\u7b97\u6cd5\u603b\u4f53\u601d\u60f3\u4e3a\u627e\u5230\u975e\u7b49\u4ef7\u7684\u72b6\u6001\uff0c\u4e3e\u4f8b\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#lex-a-lexical-analyzer-generator","title":"Lex: A Lexical Analyzer Generator","text":"<p>Lex \u662f\u4e00\u4e2a\u7a0b\u5e8f\uff0c</p> <ul> <li>\u8f93\u5165\uff1aa text file containing regular expressions, together with the actions to be taken when each expression is matched.</li> <li></li> <li>\u8f93\u51fa\uff1aContains C source code defining a procedure yylex that is a table-driven implementation of a DFA corresponding to the regular expressions of the input file, and that operates like a getToken procedure.</li> </ul>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#syntax-analysis","title":"Syntax analysis \u8bed\u6cd5\u5206\u6790","text":"<p>2024.03.14</p> <p></p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#cfg","title":"CFG \u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5","text":"<p>\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u65e0\u6cd5\u8868\u8fbe\u62ec\u53f7\u5339\u914d\u7b49 Recursive Structure \u89c4\u5219\u3002</p> <p>CFG \u5728\u8fdb\u884c\u66ff\u6362\u65f6\u4e0d\u9700\u8981\u5173\u5fc3 non-terminal symbol \u7684\u5de6\u53f3 (\u4e0a\u4e0b\u6587) \u5982\u4f55\uff0c\u6839\u636e\u89c4\u5219\u8fdb\u884c\u66ff\u6362\u5373\u53ef\u3002</p> <p>\u4e00\u4e2a\u4e0d\u542b\u5206\u652f\u8bed\u53e5\u7684\u7a0b\u5e8f\u7684 CFG \u53ef\u4ee5\u8868\u8fbe\u5982\u4e0b\uff1a</p> <p></p> <p>\u5176\u4e2d S \u8868\u793a\u8bed\u53e5\uff0c\u53ef\u4ee5\u4f7f\u7528\u5206\u53f7\u987a\u5e8f\u8fde\u63a5\u3002E \u4e3a\u6570\u5b57\u6216\u53d8\u91cf\u3002</p> <p>\u5728\u5224\u65ad\u7a0b\u5e8f\u662f\u5426\u6b63\u786e\u65f6\uff0c\u4e3b\u8981\u601d\u8def\u4e3a\u5224\u65ad\u7a0b\u5e8f\u662f\u5426\u6709\u8bed\u6cd5\u9519\u8bef\u3002</p> <p></p> <p>\u4e0a\u8ff0\u63a8\u5bfc\u9075\u5faa\u4e86\u6700\u5de6\u63a8\u5bfc left-most derivation\uff0c\u53ef\u4ee5\u6839\u636e\u6b21\u751f\u6210 parsing tree\u3002\u67d0\u4e9b\u60c5\u51b5\u4e0b\u6700\u5de6\u548c\u6700\u53f3\u63a8\u5bfc\u7b49\u4ef7 (\u5f53\u6587\u6cd5\u6ca1\u6709\u6b67\u4e49\u65f6)\u3002</p> <p></p> <p>\u4e00\u9897 parsing tree \u53ef\u80fd\u5bf9\u5e94\u591a\u4e2a\u63a8\u5bfc\u5173\u7cfb\u3002</p> <p>\u6b67\u4e49</p> <p></p> <p>\u9700\u8981\u5bf9\u751f\u6210\u7684\u89c4\u5219\u8fdb\u884c\u66f4\u6539\u4ee5\u6d88\u9664\u6b67\u4e49\u3002\u89c4\u5b9a\u4e58\u6cd5\u4f18\u5148\u7ea7\u9ad8\u4e8e\u52a0\u6cd5\uff0c\u5e76\u7edf\u4e00\u8fdb\u884c\u5de6\u7ed3\u5408\u3002</p> <p></p> <p>\u4e3a\u8bc6\u522b\u662f\u5426\u5df2\u7ecf\u8bfb\u5230\u6587\u4ef6\u7684\u672b\u5c3e\uff0c\u5f15\u5165 $ (EOF)\u3002\u5728\u89c4\u5219\u4e2d\u52a0\u5165 $S\\rightarrow E $ $\u3002</p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#top-down-parsing","title":"Top-Down Parsing","text":"<p>Recursive Descent Parsing: parses LL(1) grammars \uff1a Left-to-right parse; Leftmost-derivation; 1symbol lookahead.</p> <p>\u6839\u636e\u8bfb\u53d6\u5230\u7684 token\uff0c\u4ece\u5de6\u5230\u53f3\u8bfb\u53d6\uff0c\u5c1d\u8bd5\u5bfb\u627e\u89c4\u5219\u8fdb\u884c\u5339\u914d\u8fdb\u884c parsing tree \u7684\u6784\u5efa\u3002</p> <p></p> C++<pre><code>enum token {IF, THEN, ELSE, BEGIN, END, PRINT, SEMI, NUM, EQ};\nextern enum token getToken(void);\nenum token tok; \nvoid advance() {tok=getToken();} \nvoid eat(enum token t) {if (tok==t) advance(); else error();}\nvoid S(void) {\n    switch(tok) { \n    case IF: eat(IF); E(); eat(THEN); S(); eat(ELSE); S(); break; \n    case BEGIN: eat(BEGIN); S(); L(); break; \n    case PRINT: eat(PRINT); E(); break; \n    default: error(); }}\nvoid L(void) {\n    switch(tok) {\n    case END: eat(END); break;\n    case SEMI: eat(SEMI); S(); L(); break;\n    default: error(); }}\nvoid E(void) { eat(NUM); eat(EQ); eat(NUM); }\n</code></pre> <p>\u4e0a\u8ff0\u7684\u5b9e\u73b0\u4e3b\u8981\u4f9d\u9760\u66ff\u6362\u540e\u7684\u7b2c\u4e00\u4e2a symbol \u8fdb\u884c\u89c4\u5219\u7684\u9009\u62e9\uff0c\u4f46\u5e76\u4e0d\u9002\u7528\u4e0e\u6240\u6709\u7684\u8bed\u6cd5\u3002</p> <p>Predictive Parsing</p> <p>\u5bf9\u4e8e\u65e0\u6cd5\u901a\u8fc7\u7b2c\u4e00\u4e2a symbol \u8fdb\u884c\u5224\u65ad (\u4f8b\u5982\u90fd\u662f non-terminal)\uff0c\u57fa\u4e8e\u4e00\u5b9a\u7684\u89c4\u5219\u8fdb\u884c\u8ba1\u7b97\u9996\u5148\u6d3e\u751f\u51fa\u7684 terminal symbol\uff0c\u518d\u8fdb\u884c\u5224\u65ad\u3002</p> <p>\u5bf9\u4e8e\u4f8b\u5982 \\(Z\\rightarrow XY\\) \u7684\u89c4\u5219\uff0c\u9996\u5148\u9700\u8981\u8003\u8651\u7684\u662f X \u5728\u6d3e\u751f\u4e4b\u540e\u4f1a\u4ea7\u751f\u7684\u7b2c\u4e00\u4e2a terminal \u7b26\u53f7 (First)\u3002\u4f46\u9700\u8981\u8003\u8651\u5230 X \u53ef\u80fd\u6d3e\u751f\u51fa\u7a7a\u4e32 \\(\\varepsilon\\) (Nullable)\uff0c\u6240\u4ee5\u9700\u8981\u8003\u8651 Y \u53ef\u80fd\u6d3e\u751f\u51fa\u7684\u7b2c\u4e00\u4e2a terminal\u3002\u4f46 Y \u82e5\u4e5f\u53ef\u80fd\u6d3e\u751f\u51fa \\(\\varepsilon\\), \u5219\u9700\u8981\u8003\u8651\u7d27\u8ddf\u5728 Y \u4e4b\u540e\u7684 terminal (Follow)\u3002</p> <p>\\(\\gamma\\rightarrow^* t\\beta\\)\uff0c\u5176\u4e2d t \u4e3a terminal symbol\u3002\\(\\gamma\\) \u548c \\(\\beta\\) \u8868\u793a\u4efb\u610f\u7684\u5b57\u7b26\u4e32\uff0c\\(t\\in First(\\gamma)\\)\u3002</p> <p>\\(X \\rightarrow^* \\alpha Xt \\beta\\)\uff0c\\(\\alpha\\) \u548c \\(\\beta\\) \u8868\u793a\u4efb\u610f\u7684\u5b57\u7b26\u4e32\uff0c\\(t\\in Follow(X)\\)\u3002</p> <p>\u8ba1\u7b97 Nullable \u7b97\u6cd5\uff1a</p> C<pre><code>for each symbol X:\n    Nullable(X) = False\nrepeat\n    for each production X -&gt; Y1 Y2 \u2026 Yk:\n        if Nullable(Yi) = True for all 1 &lt;= i &lt;= k:\n            Nullable(X) = True\nuntil Nullable did not change in this iteration\n</code></pre> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u4e00\u8f6e\u90fd\u9700\u8981\u904d\u5386\u6240\u6709\u7684\u89c4\u5219\uff0c\u6bcf\u4e00\u8f6e\u5faa\u73af\u7ed3\u675f\u90fd\u9700\u8981\u548c\u524d\u4e00\u6b21\u7684\u7ed3\u679c\u8fdb\u884c\u6bd4\u8f83\uff0c\u76f4\u5230\u6ca1\u6709\u53d8\u5316\u540e\u7ed3\u675f\u5faa\u73af\u3002</p> <p></p> <p>First \u548c Follow \u7684\u7b97\u6cd5\u5982\u4e0b\uff1a</p> <p></p> <p>\u4e3e\u4f8b\u5982\u4e0b\uff1a</p> First-1 First-2 First-3 First-4 Follow-1 Follow-2 Follow-3 <p>\u9700\u8981\u989d\u5916\u6ce8\u610f\u7684\u662f \\(X\\rightarrow Y\\) \u89c4\u5219\u4f1a\u4f7f Follow(Y) \u548c Follow(X) \u51fa\u73b0\u91cd\u5408\u3002\u6700\u7ec8\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u8868\u683c\uff1a</p> <p></p> <p>\u9700\u8981\u5c06\u4e0a\u8ff0\u7684\u8868\u683c\u8f6c\u5316\u4e3a\u4e00\u4e0b\u7684\u8868\u683c\uff0c\u4ee5\u6307\u660e\u4f7f\u7528\u90a3\u6761\u89c4\u5219\u8fdb\u884c parsing tree \u7684\u6784\u5efa\uff1a</p> <p></p> <p>\u6784\u5efa\u7684\u7b97\u6cd5\u5982\u4e0b\uff1a</p> <ul> <li>if T \\(\\in\\) First(\\(\\gamma\\)) then enter \\(X\\rightarrow \\gamma\\) in row X, col T.</li> <li>if \\(\\gamma\\) is Nullable and T \\(\\in\\) Follow(X) then enter \\(X\\rightarrow \\gamma\\) in row X, col T.</li> </ul> <p>\u4e0a\u8ff0\u7684\u8868\u683c\u6307\u7684\u662f\uff0c\u5728\u81ea\u9876\u5411\u4e0b\u6d3e\u751f non-terminal \u65f6\uff0c\u8bfb\u5230\u8bcd\u6cd5\u5206\u6790\u5f97\u5230\u7684\u5e8f\u5217\u4e2d\u7684\u67d0\u4e2a symbol \u65f6\u9700\u8981\u9009\u62e9\u7684\u89c4\u5219\u3002\u82e5\u662f\u67e5\u8868\u5f97\u5230\u4e86\u7a7a\u683c\uff0c\u5219\u8868\u793a\u51fa\u73b0\u4e86\u8bed\u6cd5\u9519\u8bef\u3002</p> <p>\u8fd8\u9700\u8981\u6ce8\u610f\u4e0a\u8ff0\u7684\u8868\u683c\u8fd8\u5b58\u5728\u591a\u6761\u89c4\u5219\u4e00\u4e2a\u7a7a\u683c\u7684\u60c5\u51b5\uff0c\u8fd9\u53ef\u80fd\u7531\u4e24\u79cd\u60c5\u51b5\u5bfc\u81f4\uff1a</p> <ul> <li>Left-Recursive\uff1a\\(A\\rightarrow A\\alpha,\\,A\\rightarrow\\beta\\).</li> <li>\u4fee\u6539\u540e\uff1a\\(A\\rightarrow\\beta A',\\,A'\\rightarrow\\alpha A', A'\\rightarrow \\varepsilon\\).</li> <li>Left-Left Factoring\uff1a\u4fee\u6539\u5982\u4e0b\uff1a</li> <li></li> </ul> <p>\u4e3e\u4f8b\u5982\u4e0b\uff1a</p> <p></p> <p>\u9519\u8bef\u6062\u590d</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u5728\u9047\u5230\u9519\u8bef\u540e\uff0c\u9700\u8981\u4ece\u9519\u8bef\u4e2d\u6062\u590d\u8fc7\u6765\u7ee7\u7eed\u8fdb\u884c\u8bed\u6cd5\u5206\u6790\uff0c\u4ee5\u5206\u6790\u5f97\u5230\u66f4\u591a\u7684\u6f5c\u5728\u7684\u8bed\u6cd5\u9519\u8bef\u3002</p> <p>\u5e38\u89c1\u7684\u505a\u6cd5\u5982\u4e0b\uff1a</p> C++<pre><code>int Tprime_follow[] = {PLUS, RPAREN, EOF}; \nvoid Tprime() { \n    switch (tok) { \n        case PLUS: break; \n        case TIMES: eat(TIMES); F(); Tprime(); break; \n        case RPAREN: break; \n        case EOF: break; \n        default: print(\"expected +, *, right-paren, or end-of-file\"); \n        skipto(Tprime_follow); \n    }\n}\n</code></pre> <p>LL(k)</p> <p>k \u8868\u793a\u5728\u9009\u62e9\u6d3e\u751f\u89c4\u5219\u65f6\u9700\u8981\u6839\u636e\u51e0\u4e2a input \u624d\u80fd\u5224\u5b9a\u3002LL(1) \u5c31\u8868\u793a\u4e00\u4e2a 1 \u4e2a token \u5c31\u80fd\u65e0\u6b67\u4e49\u7684\u8fdb\u884c\u89c4\u5219\u9009\u62e9\u3002</p> <p>every LL(k) grammar is an LL(k+n) grammar, for any n.</p> <p>\u6240\u4ee5\u5728\u4f8b\u5982\u5728\u8bc1\u660e\u4e00\u4e2a grammar \u662f LL(3) \u65f6\uff0c\u53ef\u4ee5\u5148\u5c1d\u8bd5\u8bc1\u660e\u5176\u4e3a LL(1).</p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#lrk-parsing","title":"LR(k) parsing","text":"<p>\u76f8\u6bd4 LL(k)\uff0c\u4e0d\u6025\u4e8e\u505a\u5339\u914d\uff0c\u76f4\u5230 input tokens corresponding to the entire right-hand side of the production. </p> <ul> <li>\u7279\u5f81\uff1aLeft-to-right parse\u3001Rightmost derivation\u3001k-token lookahead\u3002</li> <li>\u662f\u4e00\u79cd <code>bottom-up Parsing</code>\u3002</li> <li>\u4e0d\u65ad\u5c06\u4ea7\u751f\u5f0f\u7684\u53f3\u90e8\u66ff\u6362\u4e3a\u5de6\u90e8\u3002</li> </ul> <p>\u4e3e\u4f8b\u5982\u4e0b\uff1a</p> <p></p> <p>\u4ece\u4ee5\u4e0a\u7684\u8fc7\u7a0b\u53ef\u4ee5\u770b\u51fa\u4ee5\u4e0a\u7684\u8fc7\u7a0b\u81ea\u4e0b\u5f80\u4e0a\u770b\u5b9e\u9645\u4e0a\u4e3a\u6700\u53f3\u5c55\u5f00\u3002</p> <p></p> <p>\u5206\u4e3a shift \u548c reduce \u4e24\u4e2a\u8fc7\u7a0b\u3002</p> <ul> <li> <p>shift: push next input onto top of stack</p> </li> <li> <p>reduce R:  </p> </li> <li>top of stack should match RHS of rule R (e.g., X -&gt; A B C)</li> <li>pop the RHS from the top of stack (e.g., pop C B A)</li> <li> <p>push the LHS onto the stack (e.g., push X)</p> </li> <li> <p>error</p> </li> <li> <p>accept: shift $ and can reduce what remains on stack </p> </li> </ul> <p>LR(0) Parsing</p> <p>\u53ea\u9700\u8981\u5728 state stack \u4e2d\u770b\u5c31\u53ef\u4ee5\u5224\u65ad\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528 DFA \u6765\u786e\u5b9a\u662f\u5426 reduce\u3002</p> <p></p> <ul> <li> <p>. : the current position of the parser</p> </li> <li> <p>start with S\u2019 -&gt; . S $: stack should be empty and the input is expected to be a complete S-sentence followed by $</p> </li> <li>A -&gt; \ud835\udefc . \u03b2: LR(0) item</li> <li>means the parser has processed \ud835\udefc and expects to see \u03b2 next.</li> </ul> <p>\u63a5\u4e0b\u6765\u5c06 NFA \u8f6c\u5316\u4e3a DFA\u3002</p> <p></p> <p>\u5177\u4f53\u7b97\u6cd5\u5982\u4e0b\uff1a</p> <p></p> <p>\u5e94\u7528\u4e0a\u8ff0\u7684\u7b97\u6cd5\uff0c\u5bf9\u4e8e grammar\uff1a</p> <p>S\u2019 -&gt; S$ S -&gt; ( L ) S -&gt; x L -&gt; S L -&gt; L , S</p> <p></p> Stack (states) Stack (symbols) Input Action 1 ( x ) $ shift 3 1, 3 ( x ) $ shift 2 1, 3, 2 ( x ) $ reduce 2 S -&gt; x 1, 3 ( S ) $ goto 7 1, 3, 7 ( S ) $ reduce 3 L -&gt; S 1, 3 ( L ) $ goto 5 1, 3, 5 ( L ) $ shift 6 1, 3, 5, 6 ( L ) $ reduce 1 S -&gt; ( L ) 1 S $ goto 4 1, 4 S $ accept <p>\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u7684 parsing table\uff1a</p> ( ) x , $ S L 1 s3 s2 g4 2 r2 r2 r2 r2 r2 3 s3 s2 g7 g5 4 a 5 s6 s8 6 r1 r1 r1 r1 r1 7 r3 r3 r3 r3 r3 8 s3 s2 g9 9 r4 r4 r4 r4 r4 <p>\u5177\u4f53\u7684\u64cd\u4f5c\u89c4\u5219\u5982\u4e0b\uff1a</p> <ul> <li>Shift: For edge labeled with terminal t and from state i to state n: </li> <li> <p>T[i, t] = sn (shift n)</p> </li> <li> <p>Goto: For edge labeled with non-terminal X and from state i to state n: </p> </li> <li> <p>T[i, X] = gn (goto n)</p> </li> <li> <p>Reduce: For item in a state i with dot at the end (e.g., X -&gt; A \u2026 C .):</p> </li> <li> <p>T[i, each terminal] = rk (reduce k)</p> </li> <li> <p>k is the index of this production</p> </li> <li> <p>Accept: For each state i containing </p> </li> <li> <p>S\u2019 -&gt; S . $:</p> </li> <li> <p>T[i, $] = accept</p> </li> </ul> <p>Simple LR Parsing</p> <p>\u53ef\u80fd\u4f1a\u5b58\u5728 shift-reduce \u51b2\u7a81\uff0c\u5373\u65e0\u6cd5\u5224\u65ad\u662f\u5426\u9700\u8981 reduce\u3002</p> <p>\u5f15\u5165 SLR \u65b9\u6cd5\uff0c\u57fa\u672c\u601d\u60f3\u662f\u8ba1\u7b97 Follow \u96c6\u5408\uff1a</p> C<pre><code>R \u2190 {} \nfor each state I in T \n     for each item A \u2192 \u03b1. in I \n           for each token X in FOLLOW(A) \n              R \u2190 R \u222a {(I, X, A \u2192 \u03b1)} \nI: the row\nX: the column\nA \u2192 \u03b1: the production\n</code></pre> <p>LR(1) Parsing</p> <p>\u9700\u8981\u5f80\u540e\u770b\u4e00\u4e2a symbol \u4ee5\u8f85\u52a9\u52a8\u4f5c\u9009\u62e9\u3002</p> <ul> <li>(\\(A \\rightarrow \\alpha.\\beta\\), x), x \u8868\u793a \\(\\beta\\) \u5904\u7406\u5b8c\u4e4b\u540e\uff0c\u5c06\u770b\u5230\u7684 symbol\u3002</li> </ul> C<pre><code>Closure(I) = \n    repeat \n        for any item (A \u2192 \u03b1.X\u03b2, z) in I \n           for any production X \u2192 \u03b3 \n               for any w \u2208 FIRST(\u03b2z) \n                  I \u2190 I \u222a {(X \u2192 .\u03b3, w)} \n    until I does not change \n    return I\n\nGoto(I, X) = \n    J \u2190 {} \n    for any item (A \u2192 \u03b1.X\u03b2, z) in I    \n        add (A \u2192 \u03b1X. \u03b2, z) to J \n    return Closure(J)\n\n// reduce\nR \u2190 { } \nfor each state I in T     \n    for each item (A \u2192 \u03b1., z) in I \n         R \u2190 R \u222a{(I, z, A \u2192 \u03b1)} \n</code></pre>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#abstract-syntax","title":"Abstract Syntax \u62bd\u8c61\u8bed\u6cd5","text":"<p>2024.04.11</p> <p>\u5982\u4f55\u6784\u5efa\u62bd\u8c61\u8bed\u6cd5\u6811 AST\uff0c\u5982\u4f55\u5c06\u8bed\u4e49\u4fe1\u606f\u5904\u7406\u52a0\u5165\u5230\u52a0\u5165\u5230\u8bed\u6cd5\u5206\u6790\u4e2d\u53bb\u3002</p> <p>Note</p> <p>\u5728 recursive-descent parser \u4e2d\uff0c\u8bed\u4e49\u52a8\u4f5c\u6709 values (\u5982\u7b97\u5f0f\u7ed3\u679c)\uff0c\u6216\u8005 side effects (\u5982\u8d4b\u503c\u8bed\u53e5\u3001\u51fd\u6570\u8c03\u7528)\uff0c\u90fd\u9700\u8981\u8bb0\u5f55\u3002</p> <p></p> <p>\u4e00\u4e9b\u60c5\u51b5\u4e0b\u9700\u8981\u8fdb\u884c\u8bed\u4e49\u503c\u5f97\u4f20\u9012\u3002\u4f8b\u5982\uff1aT \u2192 F T\u2032\uff1bT\u2032 \u2192 *F T\u2032\uff1bT\u2032 \u2192 / F T\u2032\uff0c\u9700\u8981\u5c06 F \u7684\u503c\u5411\u4e0b\u4f20\u9012\u3002</p> <p>Note</p> <p>Yacc \u4e2d\u7684\u90e8\u5206\u8bed\u6cd5\uff1a { \u2026 }: semantic actions $i: the semantic values of the i_th RHS symbol $$: the semantic value of the LHS nonterminal symbol %union: difference possible types for semantic values to carry &lt;variant&gt;: declares the type of each terminal or nonterminal</p> <p>Yacc \u4ee3\u7801\u4e3e\u4f8b\u5982\u4e0b\uff1a</p> C<pre><code>%{ \u2026 %}\n%union {int num; string id;}\n%token &lt;num&gt; INT\n%token &lt;id&gt; ID\n%type &lt;num&gt; exp\n...\n%left UMINUS\n%%\n\nexp: INT {$$ = $1;}\n   | exp PLUS exp {$$ = $1 + $3;}\n   | exp MINUS exp {$$ = $1 - $3;}\n   | exp TIMES exp {$$ = $1 * $3;}\n   | MINUS exp %prec UMINUS {$$ = -$2;}\n</code></pre>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#abstract-syntax-tree","title":"Abstract Syntax Tree","text":"<p>\u76f8\u6bd4\u5177\u4f53\u8bed\u6cd5\uff0c\u62bd\u8c61\u8bed\u6cd5\u7565\u53bb\u4e86\u4e00\u4e9b\u5197\u4f59\u7684\u4fe1\u606f\u4fbf\u4e8e\u8ba1\u7b97\u673a\u8fdb\u884c\u5904\u7406\u3002</p> <p>\u4e3a\u65b9\u4fbf\u9519\u8bef\u6062\u590d\uff0c\u53ef\u4ee5\u8bb0\u5f55\u4e0b\u6bcf\u4e00\u4e2a token \u7684\u4f4d\u7f6e\u4fe1\u606f\u3002</p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#semantic-analysis","title":"Semantic Analysis \u8bed\u4e49\u5206\u6790","text":"<p>2024.04.11</p> <p>\u5982\u4f55\u5c06\u58f0\u660e\u4e0e\u4f7f\u7528\u8054\u7cfb\u5230\u4e00\u8d77\uff0c\u68c0\u67e5\u8868\u8fbe\u5f0f\u662f\u5426\u6b63\u786e\u3002</p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#symbol-tables","title":"Symbol Tables \u7b26\u53f7\u8868","text":"<ul> <li><code>environment</code>\uff1a\u53d8\u91cf\u4e0e\u5176\u7c7b\u578b\u7684\u5b9a\u4e49\u7ed1\u5b9a\u3002</li> <li>\\(\\sigma_0=\\{g\\rightarrow string, a\\rightarrow int\\}\\)</li> <li>\\(\\sigma_1=\\sigma_0+\\{b\\rightarrow string, a\\rightarrow int\\}\\)</li> <li>\u4e24\u4e2a\u7b26\u53f7\u8868\u5b58\u5728\u4e00\u4e2a\u201c\u51b2\u7a81\u201d\uff0c\u9700\u8981\u6ce8\u610f\u5230\u7684\u662f\u5c40\u90e8\u7c7b\u578b\u53ef\u4ee5\u8986\u76d6\u5168\u5c40\u7684\u7c7b\u578b\u3002\u52a0\u53f7\u53f3\u4fa7\u7684\u4f18\u5148\u7ea7\u66f4\u9ad8\u3002</li> <li>\u4e00\u4e2a\u5c40\u90e8\u8bed\u53e5\u5757\u7ed3\u675f\u65f6\uff0c\u53ef\u4ee5\u629b\u5f03\u5c40\u90e8\u7684\u7b26\u53f7\u8868\uff1a<ul> <li>discard \\(\\sigma_1\\), go back to \\(\\sigma_0\\)</li> </ul> </li> </ul> <p>\u5b9e\u73b0\u7b26\u53f7\u8868\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <ul> <li>Functional Style\uff1a\u4fdd\u7559\u6bcf\u4e00\u7ea7\u7684\u7b26\u53f7\u8868\u3002</li> <li>Imperative Style\uff1a\u53ea\u662f\u5728\u4e00\u4e2a\u7b26\u53f7\u8868\u4e0a\u8fdb\u884c\u4fee\u6539\u3002</li> </ul> <p>\u5bf9\u4e8e\u4e00\u4e9b\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u9700\u8981\u6709\u591a\u4e2a\u7b26\u53f7\u8868\uff0c\u4f8b\u5982\uff1a</p> Java<pre><code>class E { \u00a0\u00a0\n    static int a = 5; \u00a0\u00a0\n}\n</code></pre> <p>\u53ef\u4ee5\u5199\u4f5c\uff1a\\(\\sigma_0 = \\{a\\rightarrow int\\},\\,\\sigma_1=\\{E\\rightarrow \\sigma_0\\}\\)</p> <p>\u7b26\u53f7\u8868\u5728\u5177\u4f53\u5b9e\u73b0\u65f6\u7ecf\u5e38\u4f7f\u7528\u54c8\u5e0c\u8868\u4ee5\u5b9e\u73b0\u5feb\u901f\u7684\u63d2\u5165\u4e0e\u5220\u9664\uff1a</p> <p></p> <p>\u5bf9\u4e8e\u51fd\u6570\u5f0f\u7684\u7b26\u53f7\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7684\u6307\u9488\u65b9\u5f0f\u9ad8\u6548\u5b9e\u73b0\uff1a</p> <p></p> <p>\u4f46\u82e5\u662f\u7b26\u53f7\u8868\u5de8\u5927\uff0c\u590d\u5236\u4ecd\u7136\u9700\u8981\u8f83\u591a\u7684\u65f6\u95f4\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e8c\u53c9\u641c\u7d22\u6811\u4ee3\u66ff\u54c8\u5e0c\u8868\u4ee5\u52a0\u901f\u590d\u5236\u7684\u8fc7\u7a0b\uff1a</p> <p></p> <p>\u8bed\u4e49\u5206\u6790\u4e2d\u4e0d\u5728\u4e4e\u5b57\u7b26\u4e32\u662f\u5426\u5339\u914d\uff0c\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a symbol \u4ee5\u52a0\u901f Hash \u64cd\u4f5c\u3002symbol \u53ef\u4ee5\u76f4\u63a5\u4f5c\u4e3a hash key\uff0c\u7528\u4e8e\u5339\u914d\uff0c\u8fd8\u53ef\u4ee5\u5728\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u4f5c\u4e3a\u7d22\u5f15\u3002</p> <p>Tiger \u8bed\u53e5\u4e2d\u6709\u4e24\u79cd\u7ed1\u5b9a\uff1a\u7c7b\u578b\u7ed1\u5b9a (Typedef)\u3001\u53d8\u91cf\u7ed1\u5b9a</p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#type-checking","title":"Type-checking \u7c7b\u578b\u68c0\u67e5","text":"<p>\u5b9e\u9645\u4e0a\u662f\u5bf9\u4e8e AST \u7684\u4e00\u4e2a\u9012\u5f52\u904d\u5386\u7684\u8fc7\u7a0b\u3002</p> <p>\u9700\u8981\u8003\u8651\u7684\u60c5\u51b5\u6709\uff1a</p> <ul> <li> <p>\u68c0\u67e5\u8d4b\u503c\u7684\u7c7b\u578b\u662f\u5426\u4e00\u81f4\u3002</p> </li> <li> <p>\u5c06\u51fd\u6570\u540d\u4e0e\u5176\u53c2\u6570\u8868\u4e00\u5757\u653e\u8fdb environment\u3002</p> </li> <li> <p>\u7ed3\u6784\u4f53\u4e2d\u5b58\u5728\u5927\u91cf\u7684\u9012\u5f52\u5b9a\u4e49\uff1a</p> </li> </ul> C<pre><code>struct temp {\n    int a;\n    struct temp tmp;\n}\n</code></pre> <p>\u5982\u679c\u76f4\u63a5\u8fdb\u884c\u68c0\u67e5\u4f1a\u51fa\u73b0\u6b7b\u9501\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u5148\u68c0\u67e5\u7ed3\u6784\u4f53\uff0c\u4f7f\u7528\u5360\u4f4d\u7b26 (\u5982\uff1aTy_Name) \u5148\u4ee3\u66ff\u7c7b\u578b\u3002\u6700\u540e\u8fdb\u884c\u5904\u7406\u3002</p> <p>\u4f46\u5982\u679c\u5b58\u5728\u4e0b\u8ff0\u7684\u5faa\u73af\u5b9a\u4e49\u60c5\u51b5\u5219\u4e0d\u53ef\uff1a</p> C<pre><code>typedef a b;\ntypedef b a;\n/*\nline1: a -&gt; Ty_Name{a, b\u2019s Ty_Name}\n       b -&gt; Ty_Name{b, NULL}\nline2: b -&gt; Ty_Name{b, a\u2019s Ty_Name}\n     a -&gt; Ty_Name{a, b\u2019s Ty_Name}\n*/\n</code></pre> <p>\u4f1a\u51fa\u73b0\u73af\uff0c\u65e0\u6cd5\u83b7\u53d6\u5177\u4f53\u7684\u7c7b\u578b\u3002\u4f46\u4e0b\u8ff0\u7684\u60c5\u51b5\u53ef\u4ee5\uff1a</p> C<pre><code>typedef a b;\nstruct b {\n    a i;\n}\n/*\nline1: a -&gt; Ty_Name{a, b\u2019s Ty_Name}\n       b -&gt; Ty_Name{b, NULL}\nline2: b -&gt; Ty_Name{b, Ty_Record}\n     a -&gt; Ty_Name{a, b\u2019s Ty_Name}\n*/\n</code></pre> <p>\u7c7b\u578b\u68c0\u67e5\u4e5f\u9700\u8981\u68c0\u67e5\u73af\u7684\u60c5\u51b5\u3002</p> <ul> <li>\u5bf9\u4e8e\u5faa\u73af\u51fd\u6570\u9012\u5f52\u8c03\u7528\uff1a</li> </ul> C<pre><code>void f() {\n    g();\n}\nvoid g() {\n    f();\n}\n</code></pre> <p>\u53ea\u9700\u8981\u5148\u8ba1\u7b97\u51fa\u4e00\u8005\u7684\u8fd4\u56de\u503c\u548c\u7c7b\u578b\u3001\u53c2\u6570\u8868\u7b49\u5373\u53ef\u3002</p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#activation-records","title":"Activation Records \u6d3b\u52a8\u8bb0\u5f55","text":"<p>2024.04.18</p> <p></p> <p>\u6b64\u7ae0\u8282\u4e3b\u8981\u5173\u5fc3 stack\uff1adata structures called activation records that get generated during procedure (i.e. function) calls.</p> <ul> <li> <p>Procedure (i.e., function) calls and returns are usually managed by a run-time stack called control stack.</p> </li> <li> <p>Each time a procedure is called, space for its local variables is pushed onto the stack.</p> </li> <li> <p>When the procedure terminates, that space is popped off the stack.</p> </li> <li> <p>Procedure calls are also called activations of procedures.</p> </li> <li> <p>Each live activation has an activation record (sometimes called a frame) on the control stack.</p> </li> </ul> <p>\u4f46\u82e5\u53ef\u4ee5\u540c\u65f6\u51fa\u73b0 nested function \u548c functio-valued variables (e.g. \u51fd\u6570\u6307\u9488)\uff0c\u6808\u8fd9\u79cd\u7c7b\u578b\u7684\u6570\u636e\u7ed3\u6784\u5c31\u4e0d\u591f\u7528\u4e86\u3002</p> JavaScript<pre><code>fun f(x) =\n  let fun g(y) = x+y \n    in g \n  end\n\nval h = f(3) \nval j = f(4)\n\nval z = h(5) \nval w = j(7)\n</code></pre>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#stack-frame","title":"Stack frame","text":"<p>Local variables are pushed/popped in large batches</p> <p>Local variables are not always initialized right after their creation</p> <p>We want to continue accessing variables deep within the stack</p> <p>\u6240\u4ee5\u9700\u8981\u5c06\u6808\u89c6\u4e3a\u6570\u7ec4\uff0c\u53ef\u4ee5\u8bbf\u95ee\u975e\u6808\u9876\u7684\u5143\u7d20\u3002</p> <p>\u6b64\u5916\u8fd8\u7ef4\u62a4\u4e86\u4e00\u4e2a Stack pointer\u3002</p> <p></p> <p>\u5177\u4f53\u7684\u8bbe\u8ba1\u5982\u4e0b\uff1a</p> <p></p> <p>\u5176\u4e2d previous frame \u4e3a caller \u51fd\u6570\uff0ccurrent frame \u4e3a callee \u51fd\u6570\u3002</p> <p><code>incoming arguments</code>: passed by the caller</p> <p><code>outgoing arguments</code>: pass parameters to other functions</p> <p>\u53ef\u4ee5\u770b\u5230\u53c2\u6570\u662f\u4ee5\u5012\u5e8f\u538b\u5728\u6808\u4e2d\u7684\uff0c\u8fd9\u662f\u4e3a\u4e86\u63d0\u9ad8\u6307\u9488\u67e5\u8be2\u7684\u6548\u7387\u3002</p> <p>\u9488\u5bf9\u4e8e\u4e4b\u524d\u63d0\u5230\u7684\u51fd\u6570\u5d4c\u5957\u7b49\u95ee\u9898\uff0c\u6b64\u5904\u901a\u8fc7 <code>static link</code> \u6765\u8fdb\u884c\u6808\u5e27\u4e0e\u6808\u5e27\u4e4b\u95f4\u7684\u8fde\u63a5\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\u9664\u4e86\u6808\u6307\u9488\u5916\u8fd8\u7ef4\u62a4\u4e86\u4e00\u4e2a\u5e27\u6307\u9488\u3002\u5728\u8c03\u7528\u65b0\u51fd\u6570\u65f6\uff0c\u4f1a\u8bb0\u5f55\u4e0b\u8001 FP \u7684\u4f4d\u7f6e\uff0c\u4ee5\u4fbf\u56de\u9000\u3002</p> <p>\u8fd9\u79cd\u53cc\u6307\u9488\u7684\u65b9\u5f0f\u5bf9\u4e8e\u975e\u8fde\u7eed\u5185\u5b58\u6392\u5e03\u6216\u5e27\u5927\u5c0f\u53ef\u53d8\u7b49\u60c5\u51b5\u4f1a\u8f83\u4e3a\u6709\u6548\u3002</p> <p>\u5bf9\u4e8e\u4f20\u53c2\uff0c\u7531\u4e8e\u5bc4\u5b58\u5668\u7684\u6570\u91cf\u6709\u9650\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u53ea\u6709\u524d k \u4e2a\u53c2\u6570\u901a\u8fc7\u5bc4\u5b58\u5668\u8fdb\u884c\u4f20\u53c2\uff0c\u5269\u4e0b\u7684\u53c2\u6570\u901a\u8fc7\u5185\u5b58\u4f20\u9012\u3002\u4f46\u9700\u8981\u6ce8\u610f\u5230\u7531\u4e8e\u4f7f\u7528\u4e86\u5bc4\u5b58\u5668\u8fdb\u884c\u4f20\u53c2\uff0c\u9700\u8981\u5c06\u4e4b\u524d\u7684\u5bc4\u5b58\u5668\u90fd\u5b58\u8fdb\u5185\u5b58\uff0c\u4f3c\u4e4e\u4f1a\u62d6\u6162\u6027\u80fd\u3002\u4f7f\u7528\u5bc4\u5b58\u5668\u4f20\u53c2\u5728\u4ee5\u4e0b\u7684\u51e0\u4e2a\u60c5\u51b5\u6709\u6548\uff1a</p> <ol> <li>Leaf procedures need not write their incoming arguments to memory.</li> <li> <p>leaf procedures: the procedures that don't call other procedures</p> </li> <li> <p>Some optimizing compilers use interprocedural register allocation, analyzing all the functions in an entire program at once.</p> </li> <li> <p>They assign different procedures different registers to receive parameters and hold local variables</p> </li> <li> <p>Parameter x is a dead variable at the point where h(z) is called. Then f(x) can overwrite r1 without saving it.</p> </li> <li> <p>Some architectures have register windows, so that each function invocation can allocate a fresh set of registers without memory traffic.</p> </li> </ol> <p>\u90e8\u5206\u67b6\u6784\u4e0d\u4f1a\u5c06\u5bc4\u5b58\u5668\u653e\u5728\u6808\u5e27\u4e2d\uff0c\u4f1a\u653e\u5728\u6307\u5b9a\u7684\u5bc4\u5b58\u5668\u4e2d\u3002\u9488\u5bf9\u53f6\u5b50\u8fdb\u7a0b\u53ef\u4ee5\u4f7f\u7528 interprocedural register allocation \u8fdb\u884c\u4f18\u5316\u3002</p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#static-link","title":"Static Link","text":"<ul> <li>Block Structure: In languages allowing nested function declarations (such as Pascal, ML, and Tiger), the inner functions may use variables declared in outer functions.</li> </ul> JavaScript<pre><code>type tree = {key: string, left: tree, right: tree}\nfunction prettyprint(tree: tree) : string =\n  let\n    var output := \u201c\u201d  \n    function write(s: string) = \n      output := concat(output,s)\n\n    function show(n: int, t: tree) =\n      let function indent(s: string) =\n            (for i := 1 to n\n             do write(\u201c \u201d));\n             output := concat(output, s);\n             write(\"\\n\"))\n      in if t=nil \n         then indent(\".\")\n         else (indent(t.key));\n               show(n+1, t.left);\n               show(n+1, t.right))\n      end\n    in show(0, tree); output\n  end\n</code></pre> <p>\u6b64\u5904\u4f8b\u5982 <code>write</code>  \u51fd\u6570\u9700\u8981\u80fd\u591f\u8bbf\u95ee <code>prettyprint</code> \u7684\u6808\u5e27\u3002Tiger \u8bed\u8a00\u4e2d\u9700\u8981\u901a\u8fc7 static link \u6765\u5b9e\u73b0 Block structure\u3002</p> <p><code>static link</code>\uff1a\u6bcf\u5f53\u51fd\u6570 f \u88ab\u8c03\u7528\u65f6\uff0cf \u4f1a\u88ab\u4f20\u9012\u4e00\u4e2a\u6808\u5e27\u7684\u6307\u9488\uff0c\u6307\u5411\u5305\u542b f \u7684\u4e0a\u4e00\u7ea7\u51fd\u6570\uff0c\u653e\u7f6e\u5728 f \u7684 static link \u7684\u533a\u57df\u3002\u5982\u679c\u662f\u9012\u5f52\u8c03\u7528\u5219\u4f20\u5165\u81ea\u5df1\u7684 static link\u3002</p> <p>\u4e0a\u8ff0\u4ee3\u7801\u8be6\u7ec6\u7684\u5904\u7406\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li> <p><code>in show(0, tree); output</code> </p> </li> <li> <p>passing pretryprint's own frame pointer (FP) as show's static link: prettyprint is the immediate enclosing function of show</p> </li> <li> <p>show's static link = prettyprint's FP</p> </li> <li> <p><code>function show(n:int, t: tree) =</code></p> </li> <li> <p>show stores its static link (the address of prettyprint's FP)</p> </li> <li> <p><code>then indent(\".\")</code></p> </li> <li> <p>show calls indent, passing its own FP as indent's static link</p> </li> <li> <p><code>show(n+1, t.left)</code></p> </li> <li> <p>show calls show, passing its own static link (not its own FP) as the static link</p> </li> <li> <p><code>for i := 1 to n</code></p> </li> <li> <p>fetch n at an appropriate offset from indent's static link (which points at the frame of show)</p> </li> <li> <p><code>write(\"\\n\")</code></p> </li> <li> <p>indent's static link (show's FP) + offset = show's static link = prettyprint's FP</p> </li> <li> <p>How can indent use output from prettyprint's frame?</p> <p>It starts with its own static link, then fetches show's, then fetches output.</p> </li> </ul>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#interm-code","title":"Interm. Code \u4e2d\u95f4\u4ee3\u7801","text":"<p>2024.04.25</p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#three-address-code","title":"Three Address Code \u4e09\u5730\u5740\u7801","text":"<p>\u6700\u57fa\u672c\u7684\u5f62\u5f0f\u4e3a <code>x = y op z</code> \u4e00\u6761\u6307\u4ee4\u6d89\u53ca\u5230\u4e09\u4e2a\u5730\u5740 (\u5730\u5740)\u3002\u5bf9\u4e8e\u590d\u6742\u60c5\u51b5\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u7684\u62c6\u89e3\uff1a</p> <p></p> <p>\u5bf9\u4e8e\u4f8b\u5982\u53d6\u8d1f\u7b49\u64cd\u4f5c\u9700\u8981\u7279\u6b8a\u5904\u7406\u4f7f\u5176\u53d8\u4e3a\u4e09\u5730\u5740\u7801\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u5230\u5176\u4e2d\u4f8b\u5982 <code>fact *= x</code> \u9700\u8981\u62c6\u6210\u4e24\u6761\u6307\u4ee4\u6765\u5b8c\u6210\u3002\u4f7f\u7528 <code>read</code> \u548c <code>write</code> \u6765\u8fdb\u884c IO\uff0c\u4f7f\u7528 <code>goto</code> \u8fdb\u884c\u8df3\u8f6c\uff0c<code>halt</code> \u8fdb\u884c\u505c\u673a\u3002</p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#intermediate-representation-tree","title":"Intermediate Representation Tree","text":"<p>Expressions</p> <p>IR \u5bf9 AST \u8fdb\u884c\u7b80\u5316\uff0c\u4e3a\u7ffb\u8bd1\u6c47\u7f16\u4ee3\u7801\u63d0\u4f9b\u65b9\u4fbf\u3002</p> <p></p> <p>IR tree \u5e76\u4e0d\u662f\u4e13\u4e3a Tiger \u8bed\u8a00\u8bbe\u8ba1\u7684\uff0c\u5177\u6709\u901a\u7528\u6027\u3002\u6bcf\u4e2a\u8868\u8fbe\u5f0f\u90fd\u6709\u8fd4\u56de\u503c\uff0c\u5b58\u5728\u4e00\u5b9a\u7684\u526f\u4f5c\u7528\u3002</p> <p></p> <p>\u5176\u4e2d EXP(e) \u4ec5\u7528\u4f5c\u8bc4\u4f30\u8ba1\u7b97\u8868\u8fbe\u5f0f\u7684\u526f\u4f5c\u7528 (\u5bc4\u5b58\u5668\u6539\u53d8) \u7b49\uff0c\u4e0d\u5173\u5fc3\u8ba1\u7b97\u7684\u7ed3\u679c\u3002</p> <p>\u8bed\u53e5\u90e8\u5206\u662f\u5728\u8bc4\u4f30\u526f\u4f5c\u7528\u4ee5\u53ca\u63a7\u5236\u6d41\uff0c\u6ca1\u6709\u8fd4\u56de\u503c\u3002</p>"},{"location":"notes/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html#translate-into-ir-tree","title":"Translate into IR tree","text":"<p>\u8868\u8fbe\u5f0f\u5206\u7c7b\uff1a</p> <ul> <li><code>Ex</code>\uff1a\u6709\u8fd4\u56de\u503c\uff0c\u9002\u5408\u4f7f\u7528 <code>T_exp</code> \u5b9e\u73b0\u3002</li> <li><code>Nx</code>\uff1a\u6ca1\u6709\u8fd4\u56de\u503c (\u51fd\u6570\u8c03\u7528\u7b49)\uff0c\u9002\u5408\u4f7f\u7528 <code>T_stm</code> \u8868\u8fbe\u3002</li> <li><code>Cx</code>\uff1a\u7279\u6b8a\u7c7b\u578b (\u7531\u4e8e Tiger \u4e0d\u652f\u6301\u5e03\u5c14\u7c7b\u578b\uff0c\u6545\u7279\u6b8a\u5904\u7406)\uff0c\u5e03\u5c14\u8868\u8fbe\u5f0f\uff0c\u4f7f\u7528 conditional jump (<code>CJUMP</code>) \u4e0e Label \u7ed3\u5408\u5b9e\u73b0\uff0c\u4e3e\u4f8b\u5982\u4e0b\uff1a</li> <li></li> </ul> <p>\u4e3e\u4f8b\u5b9e\u73b0\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <p></p> <p>\u5176\u4e2d <code>Cx</code> \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u8868\u793a\u4e3a\u771f\u6267\u884c\u7684\u8bed\u53e5\uff0c<code>toEx</code> \u5927\u81f4\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <p></p> <p>\u53e6\u4e00\u4e2a\u4f8b\u5b50\u5982\u4e0b\uff1a</p> <p></p> <p>Simple Variables</p> <p>\u5bf9\u4e8e\u53d8\u91cf\u7684\u8c03\u7528\uff0c\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <p></p> <p>\u5176\u4e2d fp \u6307\u7684\u662f\u5e27\u6307\u9488\u3002</p> <p>L-Values</p> <p>\u8868\u793a\u7684\u662f\u5185\u5b58\u7684\u4e00\u4e2a\u5730\u5740\u3002</p> <p>\u4e0e\u4e4b\u76f8\u5bf9\u5e94\u7684\u662f\u53f3\u503c\uff0c\u4e0d\u8868\u793a\u80fd\u591f\u88ab\u8d4b\u503c\u7684\u5355\u5143\u3002</p> <p>Scalar\uff1a\u6807\u91cf\uff0c\u53ea\u7528\u4e00\u4e2a\u5b57\u957f\u5c31\u80fd\u5b58\u50a8\u3002</p> <p>Tiger \u8bed\u8a00\u4e2d\u53ea\u6709\u6807\u91cf\uff0c\u4f46\u662f\u5728 C \u7b49\u8bed\u8a00\u4e2d\uff0c\u5b58\u5728\u7ed3\u6784\u5316\u7684\u5de6\u503c (\u975e\u6807\u91cf)\uff0c\u6240\u4ee5\u9700\u8981\u5bf9 <code>MEM</code> \u8bed\u53e5\u7a0d\u4f5c\u4fee\u6539\uff1a</p> C<pre><code>T_exp MEM(T_exp, int size);\nMEM(+(TEMP fp, CONST kn), s);\n</code></pre> <p>Subscripting and Field Selection</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html","title":"\u8ba1\u7b97\u673a\u7f51\u7edc","text":""},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#introduction","title":"Introduction","text":"<p>2023 / 09 / 19</p> <p></p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#network-hardware","title":"Network Hardware","text":""},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_2","title":"\u6309\u7167\u4f20\u8f93\u6280\u672f\u5206","text":"<p>Broadcast links \u591a\u64ad multicasting</p> <ul> <li> <p>\u6240\u6709\u673a\u5668\u90fd\u9700\u8981\u501f\u52a9\u6709\u7ebf / \u65e0\u7ebf\u94fe\u8def\u3002\u5e7f\u64ad\u7684 ip / Mac \u5730\u5740\u4e3a\u5168 1\u3002\u521d\u59cb\u7684\uff0c\u672a\u7ecf\u5206\u914d\u7684\u5730\u5740 (\u521d\u59cb\u5316\u5730\u5740) \u4e3a\u5168 0\u3002</p> </li> <li> <p>Wifi \u662f\u4e00\u4e2a\u5178\u578b\u7684\u5e7f\u64ad\u94fe\u8def\u3002</p> </li> </ul> <p>Point-to-point links \u5355\u64ad unicasting</p> <ul> <li>\u4e24\u70b9\u4e4b\u95f4\u7684\u53ef\u9009\u7684\u8def\u5f84\u5f88\u591a\uff0c\u9700\u8981\u501f\u52a9\u7b97\u6cd5\u9009\u62e9\u3002</li> </ul>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_3","title":"\u6309\u7167\u89c4\u6a21\u5206","text":"<p>\u5206\u7c7b\u7684\u6807\u51c6\u4e3a\u8ddd\u79bb\u3002</p> <p></p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#communication-links","title":"Communication Links","text":"<p>\u4e0d\u540c\u79cd\u7c7b\u7684\u7ebf\u4f20\u8f93\u901f\u7387\u4e0d\u540c\u3002(\u65e0\u7ebf\u4e5f\u662f\u4e00\u79cd\u4f20\u8f93\u4ecb\u8d28)</p> <p>Different links can transmit data at different rates, with the transmission rate of a link measured in bits/second</p> Text Only<pre><code>\u8def\u7ebf\u4e00 \u901f\u7387: 1K bits/s =&gt; 1 bit duration 1/1000 = 1 ms\n\u8def\u7ebf\u4e8c \u901f\u7387: 100 bits/s =&gt; 1 bit duration 1/100 = 10 ms\n\u5982\u679c\u6709\u4e00\u4e2a\u6301\u7eed 10 ms \u7684 noise (\u4fee\u6539\u5bf9\u5e94\u7684 bit)\n\u8def\u7ebf\u4e00\u6700\u591a\u4f1a\u88ab\u5f71\u54cd 11 bits\uff0c\u8def\u7ebf\u4e8c\u6700\u591a\u88ab\u5f71\u54cd 2 bits\n</code></pre>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#pan","title":"PAN","text":"<p>Personal Area Network\uff0c\u4e2a\u4eba\u8bbe\u5907\u4e4b\u95f4\u7ec4\u6210\u7684\u7f51\u7edc\u3002</p> <p>\u7531\u4e8e 2.4 Ghz \u5de6\u53f3\u4e3a ISM \u9891\u6bb5\uff0c\u5e38\u7528\u4e8e\u4e2a\u4eba\u8bbe\u5907\u4e4b\u95f4\u7684\u65e0\u7ebf\u8fde\u63a5 (Wifi)\u3002(\u5e26\u5bbd\u9ad8\u4e8e \u84dd\u7259)</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#lan","title":"LAN","text":"<p>Local Area Network\uff0c\u5c40\u57df\u7f51\u3002</p> <p>\u6709\u7ebf\u65e0\u7ebf\u90fd\u6709 dynamic / static \u7684\u8bbe\u8ba1\u3002static \u9759\u6001\u5206\u914d\uff0cdynamic \u52a8\u6001\u5206\u914d\u3002</p> <p>static\uff1a\u6709 TDM (\u65f6\u95f4\u5206\u914d)\uff0cFDM (\u7a7a\u95f4\u5206\u914d) \u7b49\u3002</p> <p>dynamic\uff1a\u6309\u9700\u5206\u914d\u3002\u6709\u4e2d\u5fc3\u5316 (centralized)\uff0c\u53bb\u4e2d\u5fc3\u5316 (decentralized) \u4e24\u79cd\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_4","title":"\u5176\u4ed6\u7f51\u7edc","text":"<p>Metropolitan Area Network\uff0c\u57ce\u9645\u7f51\u3002</p> <p>Wide Area Network\uff0c\u5e7f\u57df\u7f51\u3002\u6709\u4e24\u79cd\u5b9e\u73b0\uff0cVPN \u548c ISP\u3002</p> <ul> <li>VPN\uff0cVirtual Private Network\u3002\u76f4\u63a5\u5728\u73b0\u6709\u7f51\u7edc\u4e0a\u67b6\u8bbe\u3002</li> <li>ISP\uff0cInternet Service Provider\u3002\u7533\u8bf7\u7ebf\u8def\u8fde\u63a5\u3002</li> </ul> <p>The cellular telephone network is an example of a WAN that uses wireless technology</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_5","title":"\u7f51\u7edc\u4e3e\u4f8b","text":"<p>\u7531 hierarchy \u5230 distribute\uff0c\u589e\u52a0\u4e86\u5197\u4f59\uff0c\u589e\u5f3a\u4e86\u9c81\u68d2\u6027\u3002</p> <p></p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_6","title":"\u79fb\u52a8\u7f51\u7edc","text":"<p>UE \u7528\u6237\u8bbe\u5907\u3002eNodeB \u57fa\u7ad9\u3002S-GW\uff0cP-GW \u7f51\u5173\uff0c\u901a\u5411\u4e0d\u540c\u7684\u7f51\u7edc (\u5982\uff0c\u901a\u4fe1\u7f51\u7edc\u3001\u4e92\u8054\u7f51)\u3002</p> <p>E-UTRAN (Evolved UMTS Terrestrial Radio Access Network)\uff0c\u8fde\u63a5\u7528\u6237\u4e0e\u57fa\u7ad9\u3002</p> <p>EPC (Evolved Packet Core)\uff0c\u6838\u5fc3\u7f51\u7edc\u3002HSS (Home Subscriber Server)\uff0c\u901a\u4fe1\u5361\u7ba1\u7406\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#frequency-reuse","title":"Frequency Reuse","text":"<p>\u4e3a\u9632\u6b62\u76f8\u4e92\u4e4b\u95f4\u9891\u6bb5\u5e72\u6270\uff0c\u5c06\u8986\u76d6\u533a\u57df\u5206\u4e3a\u4e00\u4e2a\u4e2a\u5c0f\u516d\u8fb9\u5f62\u533a\u57df\u3002\u76f8\u9694\u8f83\u8fdc\u7684\u4e24\u4e2a\u516d\u8fb9\u5f62\u53ef\u4ee5\u590d\u7528\u76f8\u540c\u7684\u9891\u6bb5\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#switching","title":"Switching","text":"<ul> <li>Packet Switching\u3002\u65e0\u9700\u8fde\u63a5\uff0c\u53ea\u9700\u5305\u4f20\u8f93\u3002\u5982\u4e92\u8054\u7f51\u3002</li> <li>Circuit Switching\u3002\u9700\u8981\u8fde\u63a5\u3002\u5982\u6253\u7535\u8bdd\u3002</li> </ul>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#wlan","title":"WLAN","text":"<p>\u4f7f\u7528 ISM \u9891\u6bb5\uff0c\u7ec4\u6210\u5c40\u57df\u7f51\u3002</p> <ul> <li>multipath fading\u3002\u65e0\u7ebf\u4f20\u8f93\u4e2d\uff0c\u65e0\u7ebf\u7535\u6ce2\u901a\u8fc7\u591a\u6761\u8def\u7ebf\u8fbe\u5230\u8bbe\u5907\uff0c\u751f\u6210\u4e86\u6ce2\u7684\u76f8\u6d88\u6216\u589e\u5f3a\u3002</li> <li>\u4e3a\u514b\u670d\u4e0a\u8ff0\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u9891\u7387\u4f20\u8f93\u76f8\u540c\u7684\u6570\u636e\u3002\u53ef\u4ee5\u8fdb\u884c\u91cd\u590d\u7684\u4f20\u8f93\u3002\u8ddf\u8e2a\u5929\u7ebf\u5230\u5929\u7ebf\u4e4b\u95f4\u7684\u8def\u5f84\u4f20\u8f93 (MIMO)\u3002</li> </ul> <p>ALOHA \u7b97\u6cd5\u4f7f\u7528\u968f\u673a\u7684\u95f4\u9694\u907f\u514d\u4f20\u8f93\u7684\u51b2\u7a81\u3002(\u964d\u4f4e\u51b2\u7a81\u7684\u6982\u7387)</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_7","title":"\u7f51\u7edc\u534f\u8bae","text":"<p>Network Protocols</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_8","title":"\u8bbe\u8ba1\u76ee\u6807","text":"<p>\u53ef\u9760 Reliability\u3002\u9700\u8981\u80fd\u591f\u5904\u7406\u90e8\u5206\u8282\u70b9\u5b95\u673a\u3001\u4ea7\u751f\u9519\u8bef\u7684\u60c5\u51b5\u3002</p> <p>\u8d44\u6e90\u5206\u914d Resource allocation\u3002\u201c\u968f\u6765\u968f\u7528\u201d\u3002</p> <p>\u8fdb\u5316 Evolvability\u3002\u4f7f\u7528\u5206\u5c42\u7ed3\u6784\uff0c\u5c01\u88c5\u7f51\u7edc\u5185\u90e8\u7684\u4fe1\u606f\uff0c\u4f7f\u5f97\u6700\u65b0\u7684\u6280\u672f\u53ef\u4ee5\u4e0d\u65ad\u5f97\u5230\u5e94\u7528\u3002</p> <p>\u5b89\u5168 Security\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_9","title":"\u534f\u8bae\u5c42\u7ea7","text":"<p>Network architecture: a set of layers and protocols</p> <p>Protocol stack: a list of the protocols used by a certain system, one protocol per layer\u3002</p> <p>\u534f\u8bae\u5b9a\u4e49\u4e86\u4f20\u8f93\u7684\u683c\u5f0f\uff0c\u987a\u5e8f\uff0c\u63a5\u53d7\u4fe1\u53f7\u4e4b\u540e\u7684\u5904\u7406\u3002</p> <p>\u6570\u636e\u81ea\u4e0a\u800c\u4e0b\u5f97\u5230\u5904\u7406 (\u4f8b\u5982\uff0clayer4 \u4e3a layer5 \u63d0\u9ad8\u670d\u52a1)\u3002\u6700\u540e\u5728\u7269\u7406\u5a92\u4ecb\u4e0a\u5f97\u5230\u4f20\u8f93\u3002\u6bcf\u5c42\u63d0\u4f9b\u7684\u670d\u52a1\u53ef\u4ee5\u662f connection-oriented \u4e5f\u53ef\u4ee5\u662f connectionless \u7684\u3002</p> <p></p> <p>\u534f\u8bae\uff0c\u540c\u4e00\u5c42\u7ea7\u3002\u670d\u52a1\uff0c\u4e0d\u540c\u5c42\u7ea7\u4e4b\u95f4\u3002</p> <p>They are free to change their protocols at will, provided they do not change the service visible to their users</p> <p>\u51fd\u6570\u7684 I/O \u4e0d\u53ef\u53d8\uff0c\u4f46\u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0\u53ef\u53d8\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_10","title":"\u53c2\u8003\u6a21\u578b","text":""},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#osi","title":"OSI","text":"<p>\u4e00\u5171\u6709 7 \u5c42\u7ed3\u6784\u3002</p> <p>The physical layer\uff0cThe data link layer\uff0cThe network layer\uff0cThe transport layer\uff0cThe session layer\uff0cThe presentation layer\uff0cThe application layer</p> <p>\u6a21\u578b\u672c\u8eab\u4e0d\u662f\u67d0\u4e00\u7f51\u7edc\u7684\u67b6\u6784\uff0c\u53ea\u662f\u53c2\u8003\u3002</p> <p></p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#tcp-ip","title":"TCP / IP","text":"<p>\u4e00\u5171 4 \u5c42\u3002</p> <p></p> <p></p> <p>The TCP/IP model supports only one mode in the network layer (connectionless) but both in the transport layer.</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#metric-units","title":"Metric Units","text":""},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_11","title":"\u7f51\u7edc\u5ef6\u8fdf / \u635f\u5931 / \u541e\u5410","text":"<ul> <li>Processing delay\uff1a\u5305\u7684\u5904\u7406\u4e0e\u8bfb\u53d6\u3002</li> <li>Queuing delay\uff1a\u6392\u961f\u4f20\u8f93\u3002</li> <li>Transmission delay (or the store-and-forward delay): L (the length of packet in bits) / R (the transmission rate of a link)</li> <li>Propagation delay is the distance between two routers divided by the propagation speed.</li> </ul> <p>\u7ebf\u8def\u4e0d\u5b8c\u7f8e\uff0c\u53ef\u80fd\u4e22\u5305\u9020\u6210\u635f\u5931\u3002</p> <p>\u7f51\u7edc\u7684\u541e\u5410\u91cf\u7531\u6700\u6162\u5904\u51b3\u5b9a\u3002</p> <p>IPv4\uff1a32 bits\uff1bIPv6\uff1a128 bits\uff1bMac\uff1a48 bits</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#physical-layer","title":"Physical Layer","text":"<p>2023 / 09 / 26</p> <p></p> <p>\u4e0d\u540c\u7684 physical channel \u4f1a\u5f71\u54cd\uff1a\u541e\u5410\u3001\u5ef6\u8fdf\u3001\u9519\u8bef\u7387\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_12","title":"\u7406\u8bba\u57fa\u7840","text":""},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_13","title":"\u5085\u91cc\u53f6\u7ea7\u6570","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u5468\u671f\u6027\u4fe1\u53f7 \\(g(t) = g(t+nT_0)\\)\uff0c\u5149\u6ed1\u3001\u8fde\u7eed\u3002</p> <p>\\(g(t)= \\sum^{+\\infin}_{n = -\\infin} a_ne^{j2\\pi f_0 nt}\\) \u5176\u4e2d \\(a_n\\) \u662f\u4e00\u7cfb\u5217\u7684\u7cfb\u6570 (\u4e0d\u4e00\u5b9a\u662f\u5b9e\u6570)\uff0c\\(f_0\\) \u4e3a \\(1/T_0\\)\u3002</p> <p>\u4e5f\u53ef\u4ee5\u5f97\u5230 \\(a_n = \\frac{1}{T} \\int_T g(t)e^{-j2\\pi f_0 nt}dt\\)</p> <p>\u4f7f\u7528\u6b27\u62c9\u516c\u5f0f\u5c55\u5f00\u53ef\u4ee5\u5f97\u5230\uff1a\\(g(t) = C+\\sum_{n=1}^{\\infin}2A_ncos(2\\pi n f_0 t) + \\sum_{n=1}^{\\infin}2B_nsin(2\\pi n f_0 t)\\)</p> <p>\u5176\u4e2d \\(A_n=\\frac{1}{T}\\int_T g(t) cos(2\\pi n f_0t)dt\\)\uff0c\\(B_n=\\frac{1}{T}\\int_T g(t) sin(2\\pi n f_0t)dt\\)\uff0c\\(C_n=\\frac{1}{T}\\int_T g(t)dt\\)</p> <p>\u5085\u91cc\u53f6\u7ea7\u6570\u4e2d\u7684\u79ef\u5206\u6709\u4e00\u4e9b\u6027\u8d28\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#bandwidth-limited-signals","title":"Bandwidth-limited Signals","text":"<p>\u4efb\u4f55 channel \u4e0b\u4fe1\u53f7\u90fd\u4f1a\u8870\u51cf\u3002\u4e0d\u540c\u7684 channel \u5bf9\u4e0d\u540c\u9891\u7387\u7684\u4fe1\u53f7\u7684\u8870\u51cf\u5e45\u5ea6\u4e0d\u4e00\u81f4\u3002</p> <p>\u5bf9\u67d0\u79cd\u7ebf\u6750\uff0c\u9891\u7387\u5728 0~\\(f_c\\) \u4e4b\u95f4\u7684\u4fe1\u53f7\u8870\u51cf\u53ef\u4ee5\u63a5\u53d7\uff0c\\(f_c\\) \u4e3a\u622a\u6b62\u9891\u7387\u3002</p> <p>\u53ef\u4ee5\u4ee5\u8f83\u5c0f\u8870\u51cf\u4f20\u8f93\u7684\u9891\u7387\u7684\u5bbd\u5ea6 (\u8303\u56f4) \u79f0\u4e3a\u5e26\u5bbd\u3002</p> <p></p> <p>Baseband signals vs. Passband signals</p> <ul> <li>Baseband signals\uff0c\u57fa\u5e26\u4fe1\u53f7\uff0crun from 0 up to a maximum frequency\u3002</li> <li>Passband signals\uff0cshifted to occupy a higher range of frequencies, such as in the case of all wireless transmission\u3002</li> </ul> <p>\u8c03\u9891\uff0c\u6b64\u5904\u7684 \\(f_c\\) \u4e3a\u8f7d\u6ce2\u9891\u7387\uff1a</p> <p></p> <p>bandwidth vs. maximun data rate</p> <ul> <li>EE \u4e2d bandwidth \u5355\u4f4d\u4e3a Hz\uff0c\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u4e3a bits/sec\u3002</li> <li>\u9891\u7387\u7406\u8bba\u4e0a\u53ef\u4ee5\u65e0\u9650\u9ad8\uff0c\u4f46\u662f\u76f8\u5e94\u7684\u8870\u51cf\u53ef\u80fd\u589e\u52a0\uff0c\u5bf9\u4e8e\u63a5\u6536\u7aef\u7684\u8981\u6c42\u4e5f\u4f1a\u53d8\u9ad8\u3002\u6240\u4ee5 Data Rate \u4e0e\u7269\u7406\u4fe1\u9053\u7684\u6a21\u62df\u4fe1\u53f7\u9ad8\u5ea6\u76f8\u5173\u3002</li> </ul>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#the-maximum-data-rate-of-a-channel","title":"The Maximum Data Rate of a Channel","text":"<ul> <li> <p>Channel Capacity\uff1a\u5728\u7ed9\u5b9a\u6761\u4ef6\u4e0b\uff0c\u6570\u636e\u5728\u7ed9\u5b9a\u901a\u4fe1\u8def\u5f84\u6216\u4fe1\u9053\u4e0a\u4f20\u8f93\u7684\u6700\u5927\u901f\u7387\u3002</p> </li> <li> <p>Data rate (bps)\uff1aIf the binary-input and binary-output channel is noise free, the data rate will be 1bps.</p> </li> <li>Bandwidth\uff1a\u7531\u53d1\u5c04\u7684\u673a\u5236 (\u9632\u6b62\u5e72\u6270)\uff0c\u4ee5\u53ca\u7269\u7406\u4ecb\u8d28\u7684\u6027\u8d28\u51b3\u5b9a\u3002</li> <li>Noise\uff1a\u4f1a\u5f71\u54cd\u6570\u636e\u4f20\u8f93\u7684\u901f\u7387\u3002</li> <li>Error rate\uff1a\u4f20\u8f93\u9519\u8bef\u7684\u6982\u7387\uff0c\u5c06 0 \u4f20\u6210 1\uff0c1 \u4f20\u6210 0\u3002</li> </ul>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#nyquist-bandwidth","title":"Nyquist Bandwidth","text":"<p>\u65e0\u566a\u58f0\u60c5\u51b5\u4e0b\u7684\u7b26\u53f7\u901f\u7387\u3002</p> <p>\\(C = 2B\\) (\u4e00\u5171\u53ea\u6709\u4e24\u79cd\u7535\u5e73\u72b6\u6001)\uff0cB \u4e3a\u5e26\u5bbd\uff0cC \u4e3a Channal Capacity\u3002\\(C = 2Blog_2V\\) (V \u610f\u4e3a\u4e0d\u540c\u7684\u4fe1\u53f7\u4ee5\u53ca\u5bf9\u5e94\u7684\u7535\u5e73\u72b6\u6001\uff0c\u4f8b\u5982\u82e5\u4e00\u6b21\u4f20\u8f93 2bits\uff0c\u5c31\u9700\u8981 4 \u79cd\u7535\u5e73\u6765\u8868\u793a)\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_14","title":"\u9999\u519c","text":"<ul> <li>data rate \u8d8a\u9ad8\uff0c\u566a\u58f0\u5f71\u54cd\u7684 bits \u8d8a\u591a\u3002</li> <li>\u53d1\u5c04\u80fd\u529b\u8d8a\u9ad8\uff0cnoise \u7684\u5f71\u54cd\u6700\u5c0f\u3002</li> </ul> <p>Shannon Capacity\uff1a\\(C = B log_2(1+SNR)\\)\uff0c\u53ea\u8003\u8651\u767d\u566a\u58f0 (\u9ad8\u65af\u566a\u58f0)\uff0c\u4e0d\u8003\u8651\u8870\u51cf\u3001\u5ef6\u8fdf\u3001\u8109\u51b2\u566a\u58f0\u3002</p> <p>\u5176\u4e2d \\(SNR_{db} = 10 log_{10}(signal\\,power/noise\\,power)=10log_{10}SNR\\)\uff0cSNR \u4e3a\u4fe1\u566a\u6bd4\u3002</p> <p>\u5e26\u5bbd\u8d8a\u9ad8\uff0cSNR \u8d8a\u4f4e\uff0c\u4f46\u63a5\u53d7\u5230\u7684 noise \u8d8a\u591a\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#transmission-media","title":"Transmission Media","text":""},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#guided-or-wired","title":"Guided or Wired","text":"<ul> <li> <p>\u56fa\u5b9a\u50a8\u5b58 (\u786c\u76d8\u4f20\u8f93)\u3002</p> </li> <li> <p>\u53cc\u7ede\u7ebf\uff1a\u8fd9\u79cd\u8bbe\u8ba1\u53ef\u4ee5\u63d0\u9ad8\u9c81\u68d2\u6027\uff0c\u56e0\u4e3a\u4fe1\u53f7\u901a\u8fc7\u4e24\u6839\u7ebf\u7684\u7535\u538b\u5dee\u6765\u8868\u793a\uff0c\u566a\u58f0\u7684\u5e72\u6270\u5c31\u6bd4\u8f83\u5c0f (\u5f71\u54cd\u662f\u540c\u6b65\u7684)\u3002\u53ef\u4ee5\u4f20\u8f93\u6570\u5b57\u4fe1\u53f7\u548c\u6a21\u62df\u4fe1\u53f7\u3002\u5e26\u5bbd\u7531\u5bfc\u7ebf\u7684\u7c97\u7ec6\u548c\u957f\u5ea6\u51b3\u5b9a\u3002</p> </li> <li> <p>\u540c\u8f74\u7535\u7f06\uff1a\u5e38\u7528\u4e8e\u6709\u7ebf\u7535\u89c6\u3001\u57ce\u57df\u7f51\uff0c\u5e26\u5bbd\u9ad8\u4e8e\u53cc\u7ede\u7ebf\u3002</p> </li> <li> <p>Power Lines\uff0c\u4ea4\u6d41\u7535\u7ebf\uff1a\u53ef\u4ee5\u4f20\u8f93\u4e00\u4e9b\u4f4e\u9891\u7684\u4fe1\u53f7\uff0c\u4f46\u4e3b\u8981\u7528\u4e8e\u8f93\u7535\u3002</p> </li> <li> <p>\u5149\u7ea4\uff1a\u591a\u6a21\u5149\u7ea4 (\u542b\u591a\u6839\u5149\u7ea4)\uff0c\u5355\u6a21\u5149\u7ea4\u3002\u5e26\u5bbd\u9ad8\uff0c\u4e0d\u53d7\u7535\u6d8c\u3001\u7535\u78c1\u5e72\u6270\u3001\u505c\u7535\u3001\u8150\u8680\u6027\u5316\u5b66\u54c1\u7684\u5f71\u54cd\uff0c\u91cd\u91cf\u8f83\u8f7b\u3002\u6613\u635f\u3002</p> </li> </ul> <p></p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#wireless","title":"Wireless","text":"<ul> <li>UWB (Ultra WideBand)\uff1asends a series of rapid pulses, varying their position to communicate information. The rapid transitions lead to a signal that is spread thinly over a very wide frequency band.</li> <li>\u5fae\u6ce2\u901a\u8baf\uff1a&gt;100MHz\uff0c\u76f4\u7ebf\u4f20\u64ad\uff0c\u9700\u8981\u5bf9\u9f50\uff0c\u53d7\u73af\u5883 (\u5982\u6c34\u6c7d) \u7684\u5f71\u54cd\u3002\u5f88\u591a\u65f6\u5019\u9700\u8981\u4e2d\u7ee7\u7ad9\u3002</li> <li>\u7ea2\u5916\u901a\u8baf\uff1a\u6709\u65b9\u5411\u6027\u3001\u914d\u7f6e\u7b80\u5355\uff0c\u4e0d\u80fd\u7a7f\u8fc7\u56fa\u4f53\u969c\u788d\u7269\uff0c\u4e0d\u9700\u8981\u56fd\u5bb6\u7684\u6279\u51c6\u3002</li> </ul>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_15","title":"\u536b\u661f","text":"<p>\u4e0e\u7ebf\u7f06\u901a\u8baf\u7684\u4f18\u52a3\uff1a</p> <ul> <li>\u536b\u661f\u901a\u8baf\u53ef\u4ee5\u8986\u76d6\u66f4\u5e7f\u7684\u5730\u57df\uff0c\u73af\u5883\u9002\u5e94\u6027\u5f3a\uff0c\u5bf9\u57fa\u7840\u8bbe\u65bd\u7684\u4f9d\u8d56\u6027\u4f4e\u3002</li> </ul>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#digital-modulation-and-multiplexing","title":"Digital Modulation and Multiplexing","text":""},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_16","title":"\u6570\u5b57\u8c03\u5236","text":"<p>\u5c06\u6570\u636e\u6bd4\u7279\u8f6c\u5316\u4e3a\u4fe1\u53f7\u3002</p> <p>\u4f20\u8f93\u4fe1\u53f7\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <ul> <li> <p>\u57fa\u5e26\u4f20\u8f93\uff0c\u4f7f\u7528\u6709\u7ebf\u901a\u9053\u4f20\u8f93\u3002\u4fe1\u53f7\u5360\u636e\u53ef\u7528\u9891\u6bb5\u533a\u95f4\u7684\u5168\u90e8\u3002</p> </li> <li> <p>\u901a\u5e26\u4f20\u8f93\uff0c\u4f7f\u7528\u65e0\u7ebf\u548c\u5149\u7ea4\u901a\u4fe1\u3002\u4fe1\u53f7\u53ea\u5360\u636e\u8f7d\u6ce2\u4fe1\u53f7\u9891\u6bb5\u9644\u8fd1\u7684\u9891\u6bb5\u3002</p> </li> <li>\u6709\u8c03\u5e45\u3001\u8c03\u9891\u3001\u8c03\u76f8\u4f4d\u4e09\u79cd\u8c03\u5236\u65b9\u5f0f\u3002</li> </ul> <p><code>\u591a\u8def\u590d\u7528 multiplexing</code>\uff1a\u4e00\u6839\u7ebf\u4f20\u8f93\u591a\u79cd\u4fe1\u53f7\u3002</p> <p>\u57fa\u5e26\u4f20\u8f93</p> <p></p> <ul> <li>(b) NRZ \u6b63\u7535\u5e73\u8868\u793a 1\uff0c\u8d1f\u7535\u5e73\u8868\u793a 0\u3002\u63a5\u6536\u7aef\u4e5f\u6839\u636e\u6b64\u8fdb\u884c\u89e3\u7801\u3002\u4fe1\u53f7\u4f1a\u6709\u8870\u51cf\u548c\u5931\u771f\uff0c\u89e3\u7801\u65f6\u4f1a\u89e3\u7801\u5230\u6700\u63a5\u8fd1\u7684\u6bd4\u7279\u4e0a\u3002</li> </ul> <p>The bit rate = the symbol rate \\(\\times\\) the number of bits per symbol</p> <p>\u4e00\u4e2a symbol \u4e2d\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a bit\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u5e26\u5bbd\u7684\u4f7f\u7528\u6548\u7387\uff0c\u4f46\u5bf9\u4e8e\u63a5\u6536\u7aef\u7684\u8981\u6c42\u4e5f\u968f\u4e4b\u63d0\u9ad8\u3002</p> <ul> <li>(d) \u66fc\u5f7b\u65af\u7279\u7f16\u7801 (\u8bb8\u591a\u4ee5\u592a\u7f51\u6280\u672f\u4e2d\u91c7\u7528)\u3002\u63a5\u6536\u7aef\u9700\u8981\u77e5\u9053\u4e00\u4e2a symbol \u4f55\u65f6\u7ed3\u675f\uff0c\u4e0b\u4e00\u4e2a symbol \u4f55\u65f6\u5f00\u59cb\u3002\u4f7f\u7528\u4e00\u4e2a\u72ec\u7acb\u7684\u65f6\u949f\u4fe1\u53f7\u4e0e\u4f20\u8f93\u4fe1\u53f7\u8fdb\u884c xor\u3002 0 - a low-to-high transition\uff1b1 - a high-to low transition\u3002</li> <li>(c) NRZI (USB \u4e2d\u4f7f\u7528)\u3002</li> <li>Scrambling\uff0c\u4e00\u79cd\u4fe1\u53f7\u7684\u52a0\u5bc6\u6280\u672f\uff0c\u4e0e\u67d0\u4e00\u4fe1\u53f7\u8fdb\u884c xor \u4f7f\u4e4b\u66f4\u50cf\u767d\u566a\u58f0\uff0c\u5728\u63a5\u6536\u7aef\u518d\u6b21 xor \u8fd8\u539f\u3002</li> <li>Balanced signals (bipolar encoding)\uff0c\u77ed\u65f6\u95f4\u5185\u5e73\u5747\u7684\u7535\u5e73\u4e3a 0\uff0c\u8fd1\u4f3c\u4e3a\u76f4\u6d41\u7535\u800c\u4e0d\u9700\u8981\u76f4\u6d41\u7535\u5143\u4ef6\uff0c\u53ef\u4ee5\u51cf\u5c11\u76f4\u6d41\u5143\u4ef6\u5bf9\u4e8e\u4fe1\u53f7\u7684\u8870\u51cf\u3002(\\(\\pm\\) 1 \u8868\u793a 1\uff0c0 \u8868\u793a 0)</li> </ul> <p>\u901a\u5e26\u4f20\u8f93</p> <p>\u4e00\u822c\u9700\u8981\u8f83\u9ad8\u7684\u4f20\u8f93\u9891\u7387\u51cf\u5c0f\u6ce2\u957f\u3002</p> <p>\u4e09\u79cd\u8c03\u5236\u7684\u65b9\u5f0f\uff1a</p> <ul> <li>\u8c03\u5e45\uff1a\u632f\u5e45\u4e3a 0 \u8868\u793a 0\uff0c\u5176\u4f59\u60c5\u51b5\u4e3a 1\u3002</li> <li>\u8c03\u9891\uff1a\u9891\u7387\u7684\u758f\u5bc6\u4ee5\u533a\u5206 0\uff0c1\u3002</li> <li>\u8c03\u76f8\u4f4d\uff1a\u4fe1\u53f7\u53d8\u5316\u7684\u8282\u70b9\u6539\u53d8\u76f8\u4f4d\u3002</li> </ul> <p></p> <p>\u53ef\u4ee5\u7ed3\u5408\u8c03\u76f8\u4f4d\u548c\u8c03\u5e45\u8fdb\u884c\u66f4\u9ad8\u6548\u7387\u7684\u4f20\u8f93\u3002</p> <p></p> <p>\u76f8\u5f53\u4e8e\u4e00\u4e2a symbol 4 bits ~ 64 bits\u3002</p> <p>\u4e0d\u4f7f\u7528\u540c\u5fc3\u5706\u662f\u7531\u4e8e\u53ea\u662f\u7528\u8f74\u5411\u7684\u632f\u52a8\u66f4\u7b80\u5355\u3002</p> <p>\u4ee5\u4e0a\u60c5\u51b5\u5728\u7f16\u7801\u65f6\u4f7f\u7528 Gray code\uff0c\u4e3a\u6700\u5927\u7a0b\u5ea6\u5730\u62b5\u6d88\u4fe1\u53f7\u4f20\u8f93\u5730\u635f\u5931\uff0c\u6700\u591a\u53d1\u751f\u4e00\u4f4d\u5730\u4f20\u8f93\u9519\u8bef\u3002</p> <p></p> <p>FDM (Frequency Division Multiplexing)\uff1a\u5c06\u9891\u6bb5\u5212\u5206\u7ed9\u4e0d\u540c\u7684\u4fe1\u53f7\u8fdb\u884c\u4f20\u8f93\u3002</p> <p>OFDM (Orthogonal FDM)\uff1a\u76f8\u6bd4 FDM\uff0c\u7531\u4e8e\u4fe1\u53f7\u80fd\u91cf\u4e3b\u8981\u96c6\u4e2d\u4e8e\u4f20\u8f93\u9891\u7387\u9644\u8fd1\uff0c\u9891\u6bb5\u4e4b\u95f4\u53ef\u4ee5\u90e8\u5206\u91cd\u53e0\u3002\u8ddd\u79bb\u4f20\u8f93\u9891\u7387\u8f83\u8fdc\u7684\u9891\u7387\u5bf9\u4e8e\u5176\u4ed6\u9891\u6bb5\u76f8\u5f53\u4e8e\u566a\u58f0\u3002</p> <p>TDM (Time Division Multiplexing)\uff1a\u5faa\u73af\u673a\u5236\uff0c\u6bcf\u4e2a\u7528\u6237\u90fd\u6709\u4e00\u6bb5\u65f6\u95f4\u5360\u6709\u5168\u90e8\u7684\u5e26\u5bbd\u3002</p> <p></p> <p>\u5fc5\u987b\u540c\u6b65\u3002</p> <p>CDM (Code Division Multiplexing)\uff1a\u4e0d\u540c\u7528\u6237\u7684\u4fe1\u606f\u7f16\u7801\u6210\u552f\u4e00\u7684\u7801\uff08\u7801\u7247\u6216\u5e8f\u5217\uff09\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u7801\u7247\u6df7\u5408\u5728\u4e00\u8d77\u4f20\u8f93\uff0c\u6700\u540e\u5728\u63a5\u6536\u7aef\u4f7f\u7528\u6b63\u786e\u7684\u7801\u7247\u6765\u89e3\u7801\u5e76\u8fd8\u539f\u539f\u59cb\u4fe1\u606f\u3002\u8fd9\u79cd\u6280\u672f\u5141\u8bb8\u591a\u4e2a\u7528\u6237\u540c\u65f6\u5171\u4eab\u76f8\u540c\u7684\u9891\u8c31\u5e26\u5bbd\uff0c\u5e76\u4e14\u80fd\u591f\u5728\u540c\u4e00\u9891\u6bb5\u4e0a\u540c\u65f6\u4f20\u8f93\u548c\u63a5\u6536\u6570\u636e\uff0c\u800c\u4e0d\u4f1a\u5e72\u6270\u5f7c\u6b64\u3002(m chips)</p> <p></p> <p>\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u5206\u6790\u51fa\u4f20\u8f93\u7684\u4ee3\u7801\u6bb5\u6709\u54ea\u4e9b\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_17","title":"\u4e09\u4e2a\u901a\u8baf\u4f8b\u5b50","text":""},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#pstn","title":"PSTN","text":"<p>Local loops: telephone modem, ADSL, fiber</p> <ul> <li>Telephone modems\uff1a\u6a21\u62df\u4fe1\u53f7\u548c\u6570\u5b57\u4fe1\u606f\u4e4b\u95f4\u7684\u8f6c\u6362\u5668\u3002</li> </ul> <p>Trunks (digital fiber optic links connecting switching offices) - main consideration problem is multiplexing (FDM and TDM) </p> <p>Switching offices (where calls are moved from one trunk to another) - two switching ways</p> <p></p> <p>Nyquist Sampling\uff1a\u4f7f\u7528\u539f\u59cb\u9891\u7387\u4e24\u500d\u7684\u9891\u7387\u8fdb\u884c\u91c7\u6837\uff0c\u9632\u6b62\u6df7\u53e0\u3002\u9ad8\u4e8e\u8fd9\u4e2a\u9891\u7387\uff0c\u4e0d\u80fd\u83b7\u5f97\u66f4\u591a\u4fe1\u606f\uff0c\u4f4e\u4e8e\u8fd9\u4e2a\u9891\u7387\uff0c\u4e0d\u80fd\u83b7\u5f97\u8db3\u591f\u7684\u4fe1\u606f\u3002\u6ca1\u6709 bandlimited \u7684\u4fe1\u53f7\u4e0d\u80fd\u6b63\u786e\u91c7\u6837\u91cd\u5efa\u3002\u4f8b\u5982\u7535\u8bdd\u7684\u9891\u7387\u7ea6\u4e3a 4k Hz\uff0c\u5219\u91c7\u6837\u9891\u7387\u9700\u8981\u662f 8k Hz\uff0c\u5982\u679c\u6709 8 bit \u8fdb\u884c\u4f20\u8f93\uff0c\u5219\u9700\u8981\u7684 modern \u4e3a 64 kbps\u3002</p> <p>Local Loop</p> <p>\u7535\u8bdd\u7ebf\u6539\u9020\u540e (\u53bb\u6389\u6ee4\u6ce2\u5668)\uff0c\u4f20\u8f93\u7684\u673a\u5236\u5982\u4e0b\uff1a</p> <ul> <li> <p>The available 1.1 MHz spectrum on the local loop is divided into 256 independent channels of around 4 kHz each.</p> </li> <li> <p>The OFDM scheme is used to send data over these channels, though it is often called DMT (Discrete MultiTone) in the context of ADSL.</p> </li> <li> <p>Channel 0 is used for POTS (Plain Old Telephone Service)</p> </li> <li> <p>Channels 1-5 are not used to keep the voice and data signals from interfering with each other.</p> </li> <li> <p>Of the remaining 250 channels, one is used for upstream control and one is used for downstream control. The rest are available for user data.</p> </li> </ul> <p></p> <p>Trunks</p> <ul> <li>\u4f7f\u7528\u6570\u5b57\u4fe1\u53f7\u975e\u6a21\u62df\u4fe1\u53f7 (\u4e0d\u662f\u8bed\u8a00)\u3002\u901f\u7387\u8f83\u7535\u8bdd\u7ebf\u5757\u3002</li> <li>\u9700\u8981 multiplexing\uff0c\u4f7f\u7528 FDM \u6216\u8005 TDM\u3002</li> </ul> <p>SONET/SDH (Synchronous Optics NETwork)\uff1aa standardization of optical TDM system\u3002</p> <p>WDM (Wave-length Division Multiplexing)\u3002</p> <p>Switching</p> <p>\u5206\u4e3a circuit switching \u548c packet switching\u3002</p> <p>circuit switching \u9700\u8981\u5efa\u7acb\u4e13\u95e8\u7684 end-to-end \u94fe\u8def\u3002</p> <p>packet switching \u65e0\u9700\u5efa\u7acb\u4e13\u95e8\u7684\u94fe\u8def\u3002\u8def\u7531\u5668\u8d1f\u8d23\u63a5\u6536\u548c\u8f6c\u53d1\u6570\u636e\u5305\u3002\u6570\u636e\u5305\u7684\u5927\u5c0f\u6709\u9650\u5236\u3002\u5b58\u5728\u6392\u961f\u5ef6\u8fdf\u548c\u963b\u585e\u3002</p> <p></p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#data-link-layer","title":"Data-link Layer","text":"<p>2023 / 10 / 17</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#overview","title":"Overview","text":"<p>\u6570\u636e\u94fe\u8def\u5c42\u901a\u8fc7\u7269\u7406\u5c42\u7684\u670d\u52a1\u63a5\u6536\u53d1\u9001 bits\u3002</p> <p>\u6570\u636e\u94fe\u8def\u5c42\u7684\u6811\u5996\u529f\u80fd\uff1aFraming\uff0c\u9519\u8bef\u5904\u7406\uff0cflow control\u3002</p> <ul> <li>Framing\uff1a\u5c01\u88c5\u79bb\u6563\u7684\u5e27\u3002</li> <li>\u9519\u8bef\u5904\u7406 (\u68c0\u6d4b\u4ee5\u53ca\u5904\u7406)\uff1a\u6839\u636e\u8ba1\u65f6\u5668\u548c\u5e8f\u5217\u53f7 (ACK) \u786e\u8ba4\u6570\u636e\u662f\u5426\u5f97\u5230\u4e86\u6b63\u786e\u5730\u63a5\u6536\u3002</li> <li>Flow control\uff1a\u9632\u6b62\u63a5\u6536\u7aef\u6570\u636e\u8d85\u8f7d\u3002</li> <li>Feedback-based flow control (the data link layer): receiver gives sender permission.</li> <li>Rate-based flow control (the transportation layer): limit the data rate at witch the sender may transmit data.</li> </ul>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_18","title":"\u5b9e\u73b0\u4f4d\u7f6e","text":"<p>\u6570\u636e\u94fe\u8def\u5c42\u5904\u4e8e\u7684\u4f4d\u7f6e\uff1a</p> <p></p> <p>\u5b9e\u9645\u8bbe\u5907\u4e2d\u7684\u5b9e\u73b0\u8def\u5f84\uff1a</p> <p></p> <p>\u6570\u636e\u94fe\u8def\u5c42\u901a\u5e38\u5728\u7f51\u7edc\u9002\u914d\u5668 (\u7f51\u5361) \u4e0a\u5b9e\u73b0\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_19","title":"\u670d\u52a1","text":"<ul> <li>Unacknowledged connectionless service\uff1a\u4e3b\u8981\u7528\u4e8e\u51fa\u9519\u7387\u8f83\u4f4e\u7684\u5b9e\u65f6\u901a\u8baf\u4e2d (\u4ee5\u592a\u7f51)\u3002</li> <li>Acknowledged connectionless service\uff1a\u65e0\u94fe\u63a5\uff0c\u4f46\u662f\u9700\u8981\u56de\u51fd\u786e\u8ba4\uff0c\u9002\u7528\u4e8e\u4e0d\u53ef\u9760\u7684\u4fe1\u9053 (802.11 WiFi)\u3002</li> <li>Acknowledged connection-oriented service\uff1a\u5efa\u7acb\u4e13\u95e8\u7684\u94fe\u63a5 (\u9700\u8981\u7ecf\u8fc7\u5efa\u7acb\u3001\u4f20\u8f93\u3001\u91ca\u653e\u4e09\u4e2a\u8fc7\u7a0b)\uff0c\u9002\u7528\u4e8e\u957f\u8ddd\u79bb\u3001\u4e0d\u53ef\u9760\u7684\u4f20\u8f93 (\u536b\u661f\u901a\u8baf)\u3002</li> </ul>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#framing","title":"Framing","text":"<p>\u4ece NetWork Layer\u5728\u4e2d\u83b7\u53d6 packet\uff0c\u5c01\u88c5\u5230\u5e27\u4e2d\u4f20\u8f93\u3002</p> <p>\u7269\u7406\u5c42\u5b58\u5728\u566a\u58f0\uff0c\u4e3a\u51cf\u5c0f\u8870\u51cf\uff0c\u7269\u7406\u5c42\u4f1a\u52a0\u5165\u90e8\u5206\u5197\u4f59\u4fe1\u606f\u3002</p> <p>Data-link layer \u4f1a\u751f\u6210 checksum \u7528\u4e8e\u6821\u9a8c\u3002\u63a5\u6536\u7aef\u4f1a\u91cd\u65b0\u8ba1\u7b97\u3001\u6821\u9a8c\u3002\u51fa\u9519\u540e\u5904\u7406 (\u56de\u4f20\u9519\u8bef\u62a5\u544a\u6216\u4e22\u5f03)\u3002</p> <p>\u627e\u5230\u5e27\u7684\u5f00\u5934\u8f83\u4e3a\u56f0\u96be\uff0c\u9700\u8981\u6709\u4e00\u4e2a\u597d\u7684\u8bbe\u8ba1\uff0c\u5c3d\u91cf\u63d0\u9ad8\u5e26\u5bbd\u3002</p> <p>\u6709\u56db\u79cd\u6807\u8bc6\u7684\u65b9\u6cd5\uff1a</p> <ul> <li> <p>Byte count\uff1a\u5728 header \u4e2d\u7684\u7279\u5b9a\u5b57\u6bb5\u8868\u793a\u5e27\u7684\u5b57\u8282\u6570\u3002</p> </li> <li> <p></p> </li> <li> <p>Flag bytes with byte stuffing\uff1a\u63d2\u5165\u4e00\u4e2a\u7279\u6b8a\u7684\u5b57\u8282\u89e3\u51b3\u3002\u63d2\u5165 flag (PPP)\u3002</p> </li> <li> <p></p> </li> <li> <p>\u4f46 data \u4e2d\u4e5f\u53ef\u80fd\u51fa\u73b0 flag \u5b57\u6bb5\uff0c\u89e3\u51b3\u65b9\u6848\u662f\u5728\u5f02\u5e38\u7684 flag \u524d\uff0c\u63d2\u5165 ESC\u3002</p> </li> <li> <p></p> </li> <li> <p>Flag Byte with Bit Stuffing\uff1a\u5728 bit \u7684\u5c42\u7ea7\u4e0a\u5b9e\u73b0\u533a\u5206 (USB)\u3002</p> </li> <li> <p>\u4f8b\u5982\uff0cflag \u4e3a 0x7E (\u8fde\u7eed\u7684 6 \u4e2a 1)\u3002\u53d1\u9001\u7aef\u4f1a\u5728\u6838\u5fc3\u6570\u636e\u90e8\u5206\u68c0\u6d4b\u5230 5 \u4e2a\u8fde\u7eed\u7684 1 \u540e\u81ea\u52a8\u52a0\u4e00\u4e2a 0\uff0c\u65b9\u5f0f\u9519\u8bef\u3002\u63a5\u6536\u7aef\u5219\u4f1a\u76f8\u5e94\u53bb\u9664\u8fde\u7eed 5 \u4e2a 1 \u540e\u7684 0\u3002</p> </li> <li> <p></p> </li> <li> <p>Coding Violations\uff1a\u524d\u4e24\u79cd\u65b9\u6cd5\u5bfc\u81f4\u5e27\u7684\u957f\u5ea6\u4e0e\u5185\u5bb9\u6709\u5173\u3002\u7269\u7406\u5c42\u4e5f\u4f1a\u6709\u4e00\u4e9b\u5197\u4f59\u3002\u76ee\u524d\u7684\u6570\u636e\u94fe\u636e\u7ecf\u5e38\u91c7\u7528\u6df7\u5408\u7684\u65b9\u6cd5\u3002\uff0c\u5e76\u4f7f\u7528\u7f16\u7801\u53cd\u8f6c\u7684\u4f4d\u7f6e\u4f5c\u4e3a frame \u7684\u5f00\u7aef\u3002</p> </li> <li> <p></p> </li> </ul>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#errors","title":"Errors","text":"<p>\u6709\u4e24\u79cd\u7b56\u7565\uff1a</p> <ul> <li>\u643a\u5e26\u8db3\u591f\u7684\u5197\u4f59\u4fe1\u606f\uff0c\u5373\u4f7f\u51fa\u9519\u4e5f\u53ef\u4ee5\u81ea\u884c\u63a8\u65ad\u51fa\u6b63\u786e\u7684\u4fe1\u606f\u3002</li> <li>\u643a\u5e26\u4e00\u5b9a\u7684\u4fe1\u606f\uff0c\u80fd\u53d1\u73b0\u51fa\u9519\uff0c\u4f46\u9700\u8981\u56de\u4f20\u3002</li> </ul> <p>\u4f46\u662f\u8fd9\u4e24\u79cd\u7b56\u7565\u90fd\u4e0d\u80fd\u4fdd\u8bc1\u4f20\u8f93\u7684\u6b63\u786e\u6027\uff0c\u56e0\u4e3a\u566a\u58f0\u4e5f\u53ef\u80fd\u5f71\u54cd\u5197\u4f59 bits\u3002</p> <ul> <li>errors \u53ef\u80fd\u7531\u6781\u7aef\u503c\u5bfc\u81f4\u5355 bit \u4f4d\u5931\u6548\u3002\u4e5f\u53ef\u80fd\u662f\u968f\u673a\u4ea7\u751f\u7684\u3002</li> </ul>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#error-correcting","title":"Error-Correcting","text":"<ul> <li>Hamming Distance\uff1a\u4e24\u4e2a\u7b49\u957f\u4e8c\u8fdb\u5236\u6570\u6709\u51e0\u4f4d bits \u4e0d\u4e00\u6837\u3002</li> <li>\u5bf9\u4e8e n \u4e2a\u4e8c\u8fdb\u5236\u6570\u7801\u672c\uff0c\u4e24\u4e24\u914d\u5bf9\uff0c\u627e\u5230\u6700\u5c0f\u7684 hamming distance\uff0c\u5373\u6574\u4e2a\u7801\u672c\u7684 distance\u3002</li> </ul> <p>n-bit codeword\uff1an = m (\u5b9e\u9645\u4f20\u8f93) + r (\u5197\u4f59)\u3002</p> <p>code-rate\uff1am / n\u3002</p> <p>\u5982\u679c\u9700\u8981\u68c0\u6d4b d bits \u7684\u9519\u8bef\uff0c\u7801\u672c\u7684 hamming distance \u81f3\u5c11\u4e3a d + 1\u3002</p> <p>\u5982\u679c\u9700\u8981\u7ea0\u6b63 d bits \u7684\u9519\u8bef\uff0c\u7801\u672c\u7684 hamming distance \u77e5\u9053\u4e3a 2d + 1\u3002</p> <ul> <li>\u4f8b\u5982\u4e00\u4e2a\u7801\u672c\u2014\u20140000000000, 0000011111, 1111100000, 1111111111\uff0cdistance \u4e3a 5\uff0c\u53ef\u4ee5\u68c0\u6d4b 4 \u4f4d\u9519\u8bef\uff0c\u7ea0\u6b63 2 \u4f4d\u9519\u8bef\u3002</li> <li>\u4f8b\u5982\u4e00\u4e2a\u7801\u5b57\u51fa\u73b0\u9519\u8bef\u53d8\u6210 0000000111\uff0c\u53ef\u4ee5\u627e\u51fa\u6700\u63a5\u8fd1\u7684\u539f codeword\uff1a0000011111\u3002</li> <li>\u4f46\u5982\u679c \u4e0a\u8ff0\u7684\u9519\u8bef codeword \u662f\u7531 0000000000 \u8f6c\u53d8\u800c\u6765\uff0c\u5219\u4e0d\u80fd\u6b63\u786e\u7ea0\u6b63\u3002</li> </ul> <p>\u5982\u679c\u9700\u8981\u7ea0 1 bit \u7684\u9519\u8bef\uff0cm-bit \u7684 codeword\uff0c\u52a0\u4e0a r-bit \u7684\u5197\u4f59\uff0c\u53d8\u4e3a n-bit \u7684 codeword\uff0chamming distance \u4e3a 1\uff0c\u9700\u8981\u6ee1\u8db3\uff1a</p> <p></p> <p>Hamming code\uff1a\u7ea0\u6b63 1 \u4f4d\u7684\u9519\u8bef\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u7f51\u5740\ud83d\udc47</p> <p>\u6c49\u660e\u7801\u2014\u2014\u8ba1\u7b97\u673a\u7f51\u7edc\u2014\u2014\u5168\u7f51\u6700\u901a\u4fd7\u7684\u8bb2\u89e3-CSDN\u535a\u5ba2</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u5728 2<sup>i</sup> \u4f4d\u4e0a\u6dfb\u52a0\u5947\u5076\u6821\u9a8c\u7801\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u6709 4 \u4f4d\u6821\u9a8c\u7801\uff0c\u5206\u522b\u5728 0001\uff0c0010\uff0c 0100\uff0c1000 \u4f4d\u4e0a\uff0c\u8fd9 0001 \u8d1f\u8d23\u6240\u6709\u6700\u540e\u4e00\u4f4d\u4e3a 1 \u7684\u6821\u9a8c (1001\uff0c0111\uff0c0011\uff0c0101\uff0c1011)\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u53ef\u4ee5\u5728\u51fa\u9519\u65f6\uff0c\u5bf9\u76f8\u5e94\u7684\u4f4d\u8fdb\u884c\u5947\u5076\u6821\u9a8c\u3002\u5982\u679c\u6821\u9a8c\u51fa\u9519\uff0c\u5219\u5bf9\u5e94\u4f4d\u4e3a 1 (\u5982\u679c 0001 \u5bf9\u5e94\u7684\u6821\u9a8c\u51fa\u9519\uff0c\u5219\u7b2c\u4e00\u4f4d\u4e0a\u4e3a 1)\u3002\u6700\u7ec8\u76f4\u63a5\u53ef\u4ee5\u63a8\u65ad\u51fa\u51fa\u9519\u7684 bit \u7684\u4f4d\u7f6e\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#error-detection","title":"Error Detection","text":"<p>\u5947\u5076\u6821\u9a8c\uff1a\u76f8\u5bf9 hamming code \u5197\u4f59\u66f4\u5c11\uff0c\u5728\u5355\u7eaf\u7684\u68c0\u6d4b\u4e0a\u6548\u7387\u66f4\u9ad8\uff0c\u4f46\u9700\u8981\u91cd\u4f20\uff0c\u4e5f\u5b58\u5728\u4e00\u4e9b\u56f0\u96be\u3002</p> <p>Interleaving\uff1a\u5bf9\u9f50\u4e0d\u540c\u7684 channel \u8fdb\u884c\u5947\u5076\u6821\u9a8c\uff0c\u53ef\u4ee5\u68c0\u6d4b\u8fde\u7eed\u7684\u9519\u8bef\u3002</p> <p></p> <p>An Two Dimensional Even Parity Example\uff1a\u5355\u4fe1\u9053\u3001\u591a\u4fe1\u9053\u90fd\u8fdb\u884c\u5947\u5076\u6821\u9a8c\uff0c\u53ef\u4ee5\u5b9a\u4f4d\u9519\u8bef\u3002</p> <p></p> <p>Checksum\uff1a\u5bf9\u6570\u636e\u8fdb\u884c\u52a0\u548c\uff0c\u6ce8\u610f\u9700\u8981\u6ea2\u51fa\u4e3a\u52a0\u5230\u52a0\u548c\u503c\u4e0a\u3002</p> <p></p> <p></p> <p>CRC\uff1a\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u7f51\u5740\ud83d\udc47</p> <p>\u5faa\u73af\u5197\u4f59\u6821\u9a8c\uff08CRC\uff09\u7b97\u6cd5\u5165\u95e8\u5f15\u5bfc-CSDN\u535a\u5ba2</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_20","title":"\u534f\u8bae","text":"<ul> <li>Utopian Simplex Protocol\uff1a\u7406\u60f3\u5316\u3001\u4e00\u7aef\u53d1\u9001\uff0c\u4e00\u7aef\u63a5\u53d7\u3002</li> <li>Simplex Stop-and-Wait Protocol for an Error-Free Channel\uff1a\u8003\u8651\u4e86 flooding \u95ee\u9898\uff0c\u56de\u4f20\u4e00\u4e2a\u53cd\u9988\u786e\u8ba4\u4fe1\u606f\u662f\u5426\u6536\u5230\u3002</li> <li>Simplex Stop-and-Wait Protocol for a Noisy Channel\uff1a\u8003\u8651\u4e86\u566a\u58f0\uff0c\u589e\u52a0\u4e00\u4e2a\u8ba1\u65f6\u5668\uff0c\u5982\u679c frame \u9519\u8bef\uff0c\u76f4\u63a5\u4e22\u5f03\u4e0d\u53cd\u9988\uff0c\u65f6\u95f4\u8d85\u51fa\u540e\uff0c\u53d1\u9001\u7aef\u91cd\u4f20\u3002\u4f46\u53ef\u80fd\u4f1a\u9020\u6210\u91cd\u590d\uff0c\u539f\u56e0\u53ef\u80fd\u662f ACK \u4fe1\u53f7\u4e22\u5931\uff0c\u56de\u4f20\u4fe1\u53f7\u672a\u5230\u8fbe\u3002\u4e3a\u907f\u514d\u91cd\u590d\uff1a</li> <li>\u8ba1\u65f6\u5668\u9700\u8981\u8bbe\u7f6e\u5408\u9002\u7684\u65f6\u957f\u3002</li> <li>\u4e3a\u6bcf\u4e00\u4e2a frame \u589e\u52a0\u4e00\u4e2a\u5e8f\u5217\u53f7\u3002<ul> <li>\u5e8f\u5217\u53f7\u53ea\u9700\u8981 1 bit \u5373\u53ef (\u524d\u540e\u9519\u5f00\u5c31\u4e0d\u4f1a\u91cd\u590d)\u3002</li> </ul> </li> </ul> normal ACK is lost or arrived after the timeout Loss or damaged and retransmission ACK arrived after the timeout"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#sliding-window-protocols","title":"Sliding Window Protocols","text":"<ul> <li>Piggybacking (\u9a6e\u8fd0)\uff1aACK \u4fe1\u53f7\u52fe\u8fde\u5728\u4e0b\u4e00\u4e2a\u5373\u5c06\u53d1\u9001\u7684 data frame \u4e0a\u53d1\u9001\u3002</li> </ul> <p>\u5728\u6240\u6709\u7684 Sliding Window \u534f\u8bae\u4e2d\uff0csender \u4f1a\u7ef4\u62a4\u4e00\u7ec4\u6570\u636e\u5e27\u7684\u5e8f\u5217\u53f7 (\u843d\u5728 sending window \u4e2d)\u3002\u53d1\u9001\u7aef\u4e5f\u4f1a\u4fdd\u7559\u5c1a\u672a\u786e\u5b9a\u3001\u5c1a\u672a\u53d1\u9001\u7684\u6570\u636e\u5e27\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6570\u636e\u53ef\u80fd\u4f1a\u4f20\u8f93\u5931\u8d25\u6216\u635f\u574f (sender window)\u3002\u53d1\u9001\u7aef\u5b58\u5728\u4e00\u5b9a\u5927\u5c0f\u7684\u7f13\u51b2\u533a\uff0c\u5f53\u7f13\u51b2\u533a\u88ab\u586b\u6ee1\u65f6\uff0c\u6570\u636e\u94fe\u8def\u5c42\u4f1a\u5173\u95ed\u4ece\u7f51\u7edc\u5c42\u6765\u7684\u6570\u636e\u9632\u6b62\u6ea2\u51fa (Flow control)\u3002</p> <p>\u63a5\u6536\u7aef\u4e5f\u6709 receiving window\uff0c\u53ea\u63a5\u53d7\u843d\u5728\u7a97\u53e3\u4e2d\u7684\u6570\u636e\u5e27\u5e76\u5b58\u5165\u7f13\u51b2\u533a\uff0c\u4e0d\u843d\u5728\u7a97\u53e3\u4e2d\u7684\u5e27\u5c06\u88ab\u4e22\u5f03\u3002\u5982\u679c\u5e8f\u53f7\u7b49\u4e8e\u7a97\u53e3\u4e0b\u6cbf\u7684\u6570\u636e\u5e27\u5230\u8fbe\uff0c\u4f1a\u88ab\u4f20\u7ed9\u7f51\u7edc\u5c42\u5e76\u5c06\u4e0b\u6cbf\u52a0 1 (\u65cb\u8f6c 1)\u3002\u5982\u679c\u7a97\u53e3\u5927\u5c0f\u4e3a 1\uff0c\u5219\u53ea\u4f1a\u6309\u987a\u5e8f\u63a5\u53d7\u6570\u636e\u3002</p> <p></p> <p>\u6709\u4e09\u79cd\u53cc\u5411\u7684\u534f\u8bae\uff1a</p> <ul> <li>A One-Bit Sliding Window Protocol (stop-and-wait)\uff1asending \u548c receiving \u7684\u7a97\u53e3\u5927\u5c0f\u5747\u4e3a 1\u3002\u5e8f\u53f7\u53ea\u7528 0 \u548c 1 \u8868\u793a\u3002</li> </ul> <p></p> <p>\u7ea2\u7ebf\u6307\u672a\u6536\u5230 ACK \u8fdb\u884c\u4e86\u91cd\u53d1\u3002* \u8868\u793a\u63a5\u6536\u5230\u4e86\u5e0c\u671b\u5f97\u5230\u7684\u6570\u636e\u5e27\u5e76\u9012\u4ea4\u5230\u7f51\u7edc\u5c42\u3002\u5bf9 A \u5de6\u4fa7\u4e3a ACK\uff0c\u53f3\u4fa7\u4e3a\u5e8f\u53f7\uff0cB \u5219\u6b63\u597d\u76f8\u53cd\u3002</p> <p>A Protocol Using Go Back N\uff1a\u53ef\u4ee5\u4e00\u6b21\u53d1\u9001\u591a\u5e27\u6570\u636e\u4e0d\u7528\u7b49\u5f85 ACK\u3002\u9700\u8981\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ul> <li>\u5982\u679c\u4f20\u8f93\u7684\u4e00\u6279\u6570\u636e\u5e27\u4e2d\u51fa\u73b0\u9519\u8bef\u5982\u4f55\u5904\u7406\u3002</li> <li>\u63a5\u6536\u7aef\u5982\u4f55\u5904\u7406\u5269\u4e0b\u7684\u6b63\u786e\u7684\u5e27\u3002</li> </ul> <p></p> <p>\u82e5\u63a5\u6536\u7aef\u7684\u7a97\u53e3\u5927\u5c0f\u4e3a 1\uff0csender \u53d1\u9001\u4e86 0~8 \u5e27\uff0c\u7b2c 2 \u5e27\u5931\u6548\u5bfc\u81f4 3~8 \u5e27\u4e22\u5931\uff0c\u9700\u8981\u91cd\u4f20 2 ~ 8 \u5e27\u3002</p> <p></p> <p>\u82e5\u63a5\u6536\u7aef\u7684\u7a97\u53e3\u5927\u5c0f &gt; 1\uff0c\u7b2c 2 \u5e27\u5931\u6548\uff0c\u7ee7\u7eed\u63a5\u6536 345 \u5e27\uff0c\u4f1a\u4ea7\u751f ACK \u7684\u8df3\u53d8\u3002\u6b64\u5904\u7684 ACK \u8868\u793a\u6210\u529f\u9012\u4ea4\u4e86\u51e0\u4e2a\u6570\u636e\u5e27\u3002</p> <ul> <li>Sliding Window Protocol Using Go Back N (revceiving window size \u4e3a 1)</li> </ul> Text Only<pre><code>When the sender window of size = 7\n    \u2022 The sender sends frames 0 through 6\n    \u2022 A piggybacked acknowledgement for frame 6 eventually comes \nback to the sender\n    \u2022 The sender sends another 7 frames:7,0,1,2,3,4,5,\n        \u2013 Frame 7,0,1,2,3,4,5 belonging to the second batch get lost\n        \u2013 Frame 7,0,1,2,3,4,5 belonging to the second batch arrive\n    \u2022 Another piggybacked acknowledgement comes in, no \nambiguity\n    \u2013 Frame 7,0,1,2,3,4,5 belonging to the second batch get lost, \n      ack=6\n    \u2013 Frame 7,0,1,2,3,4,5 belonging to the second batch arrive, \n      ack=5\n</code></pre> <p>Go Back N \u5728\u51fa\u9519\u7387\u4f4e\u7684\u60c5\u51b5\u4e0b\u5de5\u4f5c\u5c1a\u53ef\uff0c\u4f46\u82e5\u51fa\u73b0\u9519\u7387\u9ad8\u5219\u9700\u8981\u5927\u91cf\u7684\u5e26\u5bbd\u7528\u4e8e\u91cd\u4f20\u3002</p> <ul> <li>A Sliding Window Protocol Using Selective Repeat (revceiving window size &gt; 1)</li> </ul> <p>\u672a\u9632\u6b62\u7f13\u5b58\u5360\u6ee1\u5bfc\u81f4\u6b7b\u9501\uff0c\u8bbe\u7f6e\u8f85\u52a9\u7684 ack_timer \u8fdb\u884c\u786e\u8ba4\uff0c\u53d1\u9001\u4e00\u4e2a\u72ec\u7acb\u7684 ack \u4fe1\u53f7\u3002</p> <p>\\(sending\\, window\\,size=\\frac{MAXSEQ + 1}{2}\\)</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#example-data-link-protocols","title":"Example Data Link Protocols","text":"<p>\u4e3b\u8981\u4ecb\u7ecd Point-to-Point \u534f\u8bae (PPP)\u3002</p> <ul> <li>\u9700\u8981\u63d0\u4f9b framing \u529f\u80fd\uff0c\u533a\u5206\u6570\u636e\u5e27\u7684\u59cb\u672b\u3002</li> <li>\u9700\u8981\u63d0\u4f9b LCP (Link Control Protocol)\uff0c\u5bf9\u7ebf\u8def\u7684\u4f7f\u7528\u8fdb\u884c\u63a7\u5236\uff0cbring up / bring down / testing...\u3002</li> <li> <p>\u9700\u8981\u63d0\u4f9b NCP (Network Control Protocol)\uff0c\u534f\u8c03\u4f7f\u7528\u7684\u7f51\u7edc\u5c42\u534f\u8bae\u3002</p> </li> <li> <p>Packet over SONET</p> </li> </ul> <p>\u4e00\u79cd\u7269\u7406\u5c42\u7684\u534f\u8bae\u3002</p> <p></p> <p>\u5bf9\u5e94\u7684 PPP frame \u683c\u5f0f\u4e3a\uff1a</p> <p></p> <p>\u9700\u8981\u63d2\u5165 ESC (0x7D = 0x7E xor 0x20\uff0cbit stuffing) \u4fdd\u8bc1\u4f20\u8f93\u7684\u6b63\u786e\u3002</p> <p>Note</p> <p>The Payload field is variable length, up to some negotiated maximum. (default length of 1500 bytes) The Checksum field which normally is 2 bytes</p> <p></p> <ul> <li>**ADSL ** (Asymmetric Digital Subscriber Loop)</li> </ul> <p>\u4e00\u79cd\u7269\u7406\u5c42\u534f\u8bae\u3002</p> <p><code>ATM</code>\uff1aATM (Asynchronous Transfer Mode) is a link layer that is based on the transmission of fixed-length cells of information. </p> <p></p> <p>\u5bf9\u5e94\u7684 AAL5 frame \u7684\u683c\u5f0f\u4e3a\uff1a</p> <p></p> <p>\u4e0d\u9700\u8981\u5730\u5740\u6807\u8bc6\u7b26\uff0cthe virtual circuit identifier \u4f1a\u5c06\u6570\u636e\u5e27\u5e26\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e\u3002\u6b64\u5916\uff1a</p> <ul> <li> <p>It has a trailer that gives length and has a 4-byte CRC for error detection. The CRC is the same one used for PPP and IEEE 802 LANs.</p> </li> <li> <p>The payload of the AAL5 frame has padding to be a multiple of 48 bytes so that the frame can be evenly divided into cells.</p> </li> <li> <p>The protocol field indicates to the DSLAM at the far end whether the payload is an IP packet or a packet from other protocol such as LCP.</p> </li> </ul>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#mac-sublayer","title":"MAC sublayer","text":"<p>2023 / 10 / 31</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#the-channel-allocation-problem","title":"The Channel Allocation Problem","text":""},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#static-channel-allocation","title":"Static channel allocation","text":"<p>\u4f8b\u5982\uff1aFDMA - \u5206\u9891\u5206\u914d\u3002</p> <p>\u4f46\u5b58\u5728\u95ee\u9898\uff1a\u67d0\u4e00\u7528\u6237\u4e0d\u4f7f\u7528\u65f6\uff0c\u4fe1\u9053\u5c31\u6ca1\u6709\u5f97\u5230\u5145\u5206\u5229\u7528\u3002\u9700\u8981 Dynamic channel allocation\u3002</p> <ul> <li> <p>Preliminary Queueing Theory</p> </li> <li> <p>\u7cfb\u7edf\u6700\u5927\u901f\u7387\u4e3a C\u3002R \u8868\u793a\u9700\u8981\u7684\u5e73\u5747\u901f\u7387\u3002</p> </li> <li> <p>\u82e5 R &lt; C \u7cfb\u7edf\u53ef\u4ee5\u5904\u7406\u3002\u4f46\u82e5 R &gt; C\uff0c\u5219\u4f1a\u4ea7\u751f\u4e00\u4e9b\u95ee\u9898\u3002</p> </li> <li> <p>\u6392\u961f\u7406\u8bba\u4e2d\u9700\u8981\u6ce8\u610f\u4e24\u4e2a\u53d8\u91cf the arrival times\u3001the service times\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u7b2c n \u4f4d\u987e\u5ba2 \\(C_n\\)\uff0c\\(\\tau_n\\) \u4e3a arrival time\uff0c\\(x_n\\) \u4e3a service time\uff0cinterarrival time \\(t_n = \\tau_n - \\tau_{n-1}\\)\u3002</p> </li> <li> <p>\\(\\tilde{x}\\)\u3001\\(\\tilde{t}\\) \u8868\u793a\u968f\u673a\u53d8\u91cf\u3002</p> </li> <li> <p>\\(A(\\tilde{t} \\le t) = A(t)\\)\uff0c\\(B(\\tilde{x} \\le x) = B(t)\\) \u8fdb\u884c\u6982\u7387\u7684\u8868\u793a\u3002</p> </li> <li> <p>\\(E(\\tilde{t}) = 1 / \\lambda\\)\uff0c \\(E(\\tilde{t}) = 1 / \\mu\\)\uff0c\u5176\u4e2d \\(\\lambda\\) \u8868\u793a\u5e73\u5747 arrival time\u3002</p> </li> <li> <p>\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u88ab\u63cf\u8ff0\u4e3a\uff1aA/B/m\u3002\u5176\u4e2d m \u4e3a\u670d\u52a1\u5668\u6570\u91cf\uff0cA \u4e3a interarrival time \u7684\u5206\u5e03\uff0cB \u4e3a service time \u7684\u5206\u5e03\u3002A\uff0cB \u6709\u516d\u79cd\u53ef\u80fd\uff1a</p> </li> </ul> <p></p> <ul> <li> <p>\u5bf9\u4e8e G/G/m\uff0c\u5b9a\u4e49 \\(\\rho\\) \u4e3a\u5229\u7528\u7cfb\u6570\uff0c\u6709 \\(\\rho = \\frac{\\lambda \\tilde{x}}{m}\\)\uff0c\\(\\rho\\) \u8d8a\u63a5\u8fd1 1\uff0c\u961f\u5217\u7684\u7b49\u5f85\u65f6\u95f4\u8d8a\u957f\u3002</p> </li> <li> <p>\u6709 \\(T = \\tilde{x} + W\\)\uff0c\u5176\u4e2d W \u4e3a\u5fc5\u5b9a\u7b49\u5f85\u65f6\u95f4\u3002</p> </li> <li> <p>Little\u2019s Result\uff1a\\(\\overline{N} = \\lambda T\\)\uff0cThe average queue size \\(\\overline{N}_q = \\lambda W\\)\uff0c\u5728 G/G/m \u4e2d\uff0c\u6709 \\(\\overline{N}_q = \\overline{N} - m\\rho\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e M/M/1 \u7684\u60c5\u5f62\uff0c\\(\\lambda\\) \u4e3a\u6cca\u677e\u5206\u5e03\uff0c\u6709 \\(T = \\tilde{x} + W = 1 / \\mu + \\frac{\\rho/\\mu}{1-\\rho} = \\frac{1 / \\mu}{1-\\rho}\\)\u3002</p> </li> <li> <p>\u5728\u5bb9\u91cf\u4e3a C \u7684 FDMA \u4e2d\u6709\uff1a</p> </li> </ul> <p></p> <p>\u5206\u9891\u5206\u4e3a N \u4efd\u4e4b\u540e\u6709\uff1a</p> <p></p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#dynamic-channel-allocation","title":"Dynamic Channel Allocation","text":"<p>\u6709\u4e94\u70b9\u5047\u8bbe\uff1aIndependent Traffic\u3001Single Channel\u3001Observable Collisions\u3001Continuous or Slotted Time (\u4f20\u8f93\u53ef\u4ee5\u4ece\u4efb\u610f\u65f6\u95f4\u5f00\u59cb\uff0c\u6216\u53ea\u80fd\u4ece\u65f6\u949f\u95f4\u9694\u65f6\u5f00\u59cb)\u3001Carrier Sense or No Carrier Sense (\u53ef\u5426\u5224\u65ad\u4fe1\u9053\u662f\u5426\u7e41\u5fd9)\u3002</p> <ul> <li> <p>ALOHA</p> </li> <li> <p>\u7528\u6237\u5411\u4e2d\u592e\u8ba1\u7b97\u673a\u53d1\u9001\u6570\u636e\uff0c\u53ef\u4ee5\u5206\u4e3a pure \u548c slotted \u4e24\u79cd\u7c7b\u578b\u3002</p> </li> <li> <p>pure</p> </li> <li> <p>\u4e2d\u592e\u8ba1\u7b97\u673a\u63a5\u6536\u5230\u67d0\u6570\u636e\u540e\uff0c\u5e7f\u64ad\u5230\u6240\u6709\u7684\u8ba1\u7b97\u673a\uff0c\u6545\u8ba1\u7b97\u673a\u53ef\u4ee5\u5224\u65ad\u81ea\u5df1\u7684\u5e27\u662f\u5426\u5df2\u901a\u8fc7\u3002</p> </li> <li> <p>\u82e5\u67d0\u5e27\u906d\u5230\u4e86\u635f\u6bc1\uff0c\u53d1\u9001\u53d1\u7b49\u5f85\u4e00\u6bb5\u968f\u673a\u7684\u65f6\u95f4\u540e\u91cd\u65b0\u53d1\u9001\u3002</p> <p></p> </li> <li> <p>\u6548\u7387\u5982\u4f55\uff1f</p> <p></p> </li> <li> <p>slotted\uff0c\u5c06\u65f6\u95f4\u5206\u4e3a\u4e00\u6bb5\u6bb5\u65f6\u95f4\u95f4\u9694\u3002frame \u53d1\u9001\u53ea\u80fd\u95f4\u9694\u7684\u8d77\u70b9\u53d1\u9001\u3002\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u5411\u5404\u4e2a\u4e3b\u673a\u53d1\u9001\u4e00\u4e2a\u4fe1\u53f7\u8868\u793a\u65f6\u95f4\u95f4\u9694\u7684\u5f00\u59cb\u3002</p> </li> </ul> <p>\u7531\u4e8e ALOHA \u6ca1\u6709 carrier sense\uff0c\u6548\u7387\u4e0d\u9ad8\uff0c\u5bb9\u6613\u4ea7\u751f collision\u3002</p> <ul> <li>1-persistent CSMA</li> <li>\u4e00\u65e6 sender \u68c0\u6d4b\u5230\u4fe1\u9053\u4e3a\u7a7a\u7684\u8bdd\u5219\u7acb\u5373\u53d1\u9001\u6570\u636e\u3002\u6301\u7eed\u4e0d\u65ad\u76d1\u6d4b\u3002</li> <li>Nonpersistent CSMA</li> <li>\u6bcf\u9694\u4e00\u6bb5\u968f\u673a\u7684\u65f6\u95f4\u76d1\u6d4b\u3002</li> <li>p-persistent CSMA</li> <li>\u5efa\u7acb\u5728 slotted \u7684\u57fa\u7840\u4e4b\u4e0a\u3002\u5f53 slot \u7a7a\u95f2\u65f6\uff0c\u6709\u4e00\u5b9a\u7684\u6982\u7387 (1-p) \u5ef6\u8fdf\u5230\u4e0b\u4e00\u4e2a slot \u53d1\u9001\u3002\u6709 p \u7684\u6982\u7387\u4f1a\u53d1\u9001\u3002</li> </ul> <p></p> <p>Collision Detection \u4e5f\u53ef\u4ee5\u63d0\u9ad8\u6548\u7387\u3002\u53d1\u9001\u7684\u8fc7\u7a0b\u4e2d\uff0c\u540c\u65f6\u4e5f\u5728\u68c0\u6d4b frame \u7684\u72b6\u6001\u3002\u82e5 frame \u4e0e\u521d\u59cb\u72b6\u6001\u53d1\u751f\u6539\u53d8\uff0c\u5219\u53ef\u4ee5\u8bf4\u660e\u4ea7\u751f\u4e86 collision\u3002\u4ee5\u4e0b\u4e3a\u4e00\u4e9b Collision Free Protocols\uff1a</p> <ul> <li>A Bit-Map Protocol -- Reservation Protocol</li> </ul> <p></p> <ul> <li>\u82e5\u8981\u53d1\u9001\uff0csender \u5728\u81ea\u5df1\u7684 bit map \u4e0a\u7684 bit \u7f6e 1\u3002</li> <li> <p>\u4f46 sender \u591a\u65f6\uff0c\u8f6e\u8be2\u65f6\u95f4\u957f\uff0c\u5f00\u9500\u5927\u3002</p> </li> <li> <p>Token Passing</p> </li> <li> <p>\u53ea\u6709\u62ff\u5230\u4ee4\u724c token \u4e4b\u540e\uff0c\u624d\u80fd\u53d1\u9001\u3002token \u5728\u4e0d\u540c\u7684\u72b6\u6001\u4e4b\u95f4\u4f20\u9012\u3002</p> </li> </ul> <p></p> <ul> <li> <p>\u4e00\u4e9b\u7ad9\u70b9\u9700\u8981\u5c06 token \u62ff\u51fa token ring\u3002</p> </li> <li> <p>Binary Countdown</p> </li> <li> <p>\u5e0c\u671b\u53d1\u9001\u4fe1\u606f\u7684 sender \u5e7f\u64ad\u81ea\u5df1\u7684 address\u3002\u5730\u5740\u4e4b\u95f4\u8fdb\u884c or \u64cd\u4f5c\uff0c\u7ea7\u522b\u6700\u9ad8\u7684 sender \u5148\u53d1\u9001\u3002</p> </li> </ul> <p>\u5728 low load \u7684\u60c5\u51b5\u4e0b\u9700\u8981\u8ffd\u6c42\u4f4e\u65f6\u5ef6 (ALOHA\uff0ccollision sense)\uff0chigh load \u7684\u60c5\u51b5\u4e0b\u9700\u8981\u8ffd\u6c42\u9ad8\u5229\u7528\u7387 (Collision Free)\u3002</p> <ul> <li> <p>Limited-Contention Protocols</p> </li> <li> <p>\u7ed3\u5408\u4e86\u4e24\u79cd\u7c7b\u578b\u7684\u534f\u8bae\u7684\u4f18\u52bf\u3002</p> </li> <li> <p>\u6bcf\u4e2a\u4fe1\u9053\u90fd\u4ee5 p \u7684\u6982\u7387\u83b7\u53d6\u4fe1\u9053\u3002\u82e5\u6709 k \u4e2a sender\uff0c\u6210\u529f\u83b7\u53d6\u7684\u6982\u7387\u4e3a \\(kp(1-p)^{k-1}\\)\u3002</p> </li> </ul> <p></p> <ul> <li> <p>\u53ef\u4ee5\u5c06 sender \u5206\u7ec4\uff0cgroup 0 \u4e89\u593a slot 0\uff0cgroup 1 \u4e89\u593a slot 1 \u7b49\u3002</p> </li> <li> <p>The Adaptive Tree Walk Protocol</p> </li> <li> <p>\u57fa\u4e8e Limited-Contention Protocols\uff0c\u8fdb\u884c\u4ee5\u4e0b\u7684\u6811\u72b6\u7684\u5206\u7ec4\uff1a</p> </li> </ul> <p></p> <ul> <li>\u82e5\u4ea7\u751f collision \u5206\u4e3a\u4e24\u7ec4\uff0c\u4e00\u7ec4\u4e89\u593a\u4e0b\u4e00\u4e2a slot\uff0c\u53e6\u4e00\u7ec4\u4e89\u593a\u540e\u4e00\u4e2a slot\u3002</li> </ul>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#wireless-lan-protocols","title":"Wireless LAN Protocols","text":"<p>\u76f8\u6bd4\u6709\u7ebf\u4f20\u8f93\u66f4\u52a0\u590d\u6742\u3002\u4f8b\u5982 A\u3001C \u540c\u65f6\u5411 B \u53d1\u9001\u6570\u636e\uff0c\u4f46 A \u7531\u4e8e\u6709\u611f\u77e5\u7684\u8303\u56f4\uff0c\u65e0\u6cd5\u68c0\u6d4b C\uff0c\u4ece\u800c\u53d1\u751f collision (The Hidden Terminal Problem)\u3002\u53e6\u4e00\u79cd\u60c5\u51b5\uff0cC \u5411 D \u53d1\u9001\uff0cB \u5411 A \u53d1\u9001\uff0c\u4f46\u662f BC \u4e92\u76f8\u68c0\u6d4b\u5230\u53d1\u9001\u72b6\u6001\uff0c\u9519\u8bef\u68c0\u6d4b\u5230\u4e86\u51b2\u7a81 (The Exposed Terminal Problem)\u3002</p> <p>\u6b64\u5916\uff0c\u65e0\u7ebf\u7f51\u7edc\u4e2d sender \u53d1\u9001\u6570\u636e\u65f6\u51e0\u4e4e\u4e0d\u80fd\u63a5\u6536\u4fe1\u53f7 (Nodes Cannot Hear while Sending)\u3002</p> <p>\u89e3\u51b3\u65b9\u6848\uff1aMACA</p> <ol> <li> <p>A sender node transmits a RTS (Request-To-Send, with frame length)</p> </li> <li> <p>The receiver replies with a CTS (Clear-To-Send, with frame length)</p> </li> <li> <p>Sender transmits the frame while nodes hearing the CTS stay silent</p> </li> <li>Collisions on the RTS/CTS are still possible, but less likely.</li> </ol> <p></p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#ethernet","title":"Ethernet","text":""},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_21","title":"\u5e27\u7ed3\u6784","text":"<p>\u524d\u5bfc\u7801 preamble\uff0c8 bytes\uff0c\u7528\u4e8e\u53d1\u9001\u7aef\u63a5\u6536\u7aef\u65f6\u949f\u540c\u6b65\u3002\u524d 7 bytes \u4e3a 10101010\uff0c\u6700\u540e\u4e00\u4e2a byte \u4e3a\u5e27\u5f00\u59cb\u754c\u5b9a\u7b26\uff0c\u4e3a 10101011\u3002</p> <p>\u6e90\u5730\u5740\u3001\u76ee\u7684\u5730\u5740\u6b64\u5904\u5747\u4e3a MAC \u7269\u7406\u5730\u5740\uff0cMAC \u5730\u5740\u4e3a 48 bits\uff0c6 bytes\u3002MAC \u5730\u5740\u5168 1 \u4e3a\u5e7f\u64ad\u300248 bits \u4e2d\u524d 24 \u4f4d\u4e3a IEEE \u5206\u914d\u7ed9\u7f51\u5361\u5382\u5546\uff0c\u540e 24 \u4f4d\u4e3a\u7f51\u5361\u5382\u5546\u5206\u914d\u7684\u7279\u5b9a\u7684\u5730\u5740\u3002</p> <p>\u533a\u5206 DIX \u548c IEEE 802.3 \u4e3b\u8981\u4ee5 Type \u548c length \u4e3a\u533a\u5206\u3002Type \u6307\u5b9a\u4e86\u540e\u7eed Data \u8981\u4ea4\u7531\u4f55\u79cd\u534f\u8bae\u5904\u7406\uff0c\u5982 0x800 \u4e3a IPv4\u3002length \u5219\u4e00\u5b9a\u5c0f\u4e8e\u7b49\u4e8e 0x600\u3002</p> <p>\u6570\u636e\u4e3a 46 ~ 1500 bytes (\u5305\u62ec Data \u548c pad)\u3002\u7531\u4e8e CSMA / CD \u7b97\u6cd5\u7684\u9650\u5236\uff0c\u9664\u53bb\u524d\u5bfc\u7801\uff0c\u4ee5\u592a\u7f51\u5e27\u81f3\u5c11\u4e3a 64 bytes\u3002</p> <p>\u6700\u540e 4 bytes \u4e3a CRC \u6821\u9a8c\u7801\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#performance","title":"Performance","text":"<p>\u5047\u5b9a\u6052\u5b9a\u6709 k \u4e2a station \u5e0c\u671b\u53d1\u9001\uff0c\u4e00\u4e2a station\u62ff\u5230\u4fe1\u9053\u7684\u53ef\u80fd\u4e3a p\u3002</p> <p>\u6545\u4fe1\u9053\u88ab\u4f7f\u7528\u7684\u6982\u7387\u4e3a \\(A = kp(1-p)^{k-1}\\)\uff0c\u4e89\u7528\u671f\u843d\u5728 j \u4e2a time slot \u4e2d\u7684\u53ef\u80fd\u4e3a \\(A(1-A)^{j-1}\\)\u3002</p> <p>\u6545 time slot \u7684\u671f\u671b\u4e3a \\(\\sum^{+\\infty}_{0}jA(1-A)^{j-1}=1/A\\)\uff0c\u82e5\u65f6\u95f4\u95f4\u9694\u4e3a \\(2\\tau\\)\uff0c\u4e89\u7528\u671f\u65f6\u95f4\u4e3a \\(2\\tau /A\\)\u3002\u5047\u8bbe\u5e27\u5e73\u5747\u7528 P \u79d2\u4f20\u8f93\u3002\u5219\u6709\uff1a</p> \\[ channel \\,\\, efficiency = \\frac{P}{P + 2\\tau /A} \\] <p>\u82e5 \\(P = F /B\\)\uff0cF \u4e3a frame \u957f\uff0cB \u4e3a\u5e26\u5bbd\u3002\u6709\u4fe1\u9053\u6548\u7387\u4e3a \\(\\frac{1}{1 + 2BLe/cF}\\)\uff0cL \u4e3a\u7ebf\u7f06\u957f\u5ea6\uff0cc \u4e3a\u5149\u901f\uff0cA \u4e3a 1 / e\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_22","title":"\u5206\u7c7b","text":"<p>Hub\uff1a\u96c6\u7ebf\u5668\uff0c\u53ea\u662f\u5c06\u51e0\u4e2a\u7ebf\u7f06\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u4e0d\u589e\u52a0\u5bb9\u91cf\u3002\u5185\u90e8\u76f8\u5f53\u4e8e\u4e00\u6839 cable \u7684\u901f\u7387\u3002\u4f1a\u5c06\u6570\u636e\u8f93\u51fa\u5230\u6240\u6709\u7aef\u53e3\u3002</p> <p>Switch\uff1a\u4ea4\u6362\u673a\uff0c\u6709 high-speed backplane\uff0c\u8fde\u63a5\u6240\u6709\u7aef\u53e3\u3002\u53ea\u9700\u5c06\u6570\u636e\u8f93\u51fa\u5230\u76ee\u7684\u5730\u7aef\u53e3\u3002</p> <p>Warning</p> <p>\u4ea4\u6362\u673a\u4e2d\u6bcf\u4e2a\u7aef\u53e3\u6709\u81ea\u5df1\u7684\u78b0\u649e\u57df\uff0c\u4f46\u96c6\u7ebf\u5668\u4e2d\u6240\u6709\u7aef\u53e3\u5904\u4e8e\u540c\u4e00\u4e2a\u78b0\u649e\u57df\u4e2d\u3002</p> <p>Note</p> <p>\u4ee5\u592a\u7f51\u540c\u65f6\u662f\u7269\u7406\u5c42\u548c\u6570\u636e\u94fe\u8def\u5c42\u7684\u89c4\u8303\u3002</p> <p>Fast Ethernet\uff1a\u5141\u8bb8\u901a\u8fc7\u96c6\u7ebf\u5668\u6216\u4ea4\u6362\u673a\u8fdb\u884c\u4f20\u8f93\u3002</p> <p>Gigabit Ethernet\uff1a\u4f7f\u7528\u70b9\u5bf9\u70b9\u6765\u94fe\u8def\u3002\u5206\u4e3a\u5168\u53cc\u5de5\u548c\u534a\u53cc\u5de5\u4e24\u79cd\u6a21\u5f0f\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#80211-wifi","title":"802.11 WiFi","text":"<p>\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\u6a21\u5f0f\uff1aIn infrastructure mode\uff0c\u901a\u8fc7 AP \u8fde\u63a5\uff1bAd hoc network\uff0c\u5206\u5e03\u5f0f\u4e92\u8054\u3002</p> <p>802.11 \u7684\u6570\u636e\u94fe\u8def\u5c42\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u5b50\u5c42\uff1a</p> <ul> <li>MAC (Medium Access Control) sublayer\uff1a\u5206\u914d\u4fe1\u9053\uff1b</li> <li>LLC (Logical Link Layer)\uff1a\u9690\u85cf 802 \u534f\u8bae\u7684\u5dee\u5f02\uff0c\u5411\u7f51\u7edc\u5c42\u5c01\u88c5\u3002</li> </ul> <p>\u4f7f\u7528 2.4 Ghz \u548c 5 Ghz \u8fdb\u884c\u4f20\u8f93\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#80211-mac-sublayer-protocol","title":"802.11 MAC Sublayer Protocol","text":"<p>\u96be\u9898\uff1a</p> <ul> <li>\u534a\u53cc\u5de5\uff1a\u65e0\u6cd5\u540c\u65f6\u53d1\u9001\u63a5\u6536\u6570\u636e\u3002</li> <li>\u6709\u9650\u8303\u56f4\uff1a\u6709\u7684\u7ad9\u65e0\u6cd5\u76d1\u6d4b\u6216\u65e0\u6cd5\u907f\u5f00\u3002</li> </ul> <p>\u4f7f\u7528 CSMA / CA \u534f\u8bae\uff1aChannel sensing before sending\uff1bExponential backoff after collision\u3002</p> <p></p> <p>\u76f8\u8f83\u4e8e\u4ee5\u592a\u7f51\uff0c802.11\uff1a</p> <ul> <li>starting backoffs early helps to avoid collision\u3002</li> <li>acknowledgements are used to infer collision because collision cannot be detected\u3002</li> </ul> <p>\u4e3a\u6d88\u9664\u54ea\u4e2a station \u6b63\u5728\u53d1\u9001\u6570\u636e\u7684\u534f\u8bae\uff0c802.11 \u5c06\u4fe1\u9053\u4f20\u611f\u5206\u4e3a physical sensing and virtual sensing\u3002</p> <ul> <li> <p>Physical sensing\uff1a\u7a7a\u95f2\u5219\u4f20\u8f93\uff0c\u51b2\u7a81\u7b49\u5f85\u968f\u673a\u7684\u65f6\u95f4\u540e\u56de\u9000\u3002\u7528\u4e8e\u4f20\u8f93 RTS\u3002</p> </li> <li> <p>virtual sensing\uff1a</p> </li> <li> <p>Scenario: A wants to send to B. C is a station within range of A. D is a station within range of B but not within range of A.</p> <ul> <li>C----A----B----D</li> </ul> </li> <li> <p>A sends RTS frame to B to request permission, B sends CTS frame back to grant permission. Then A sends data, and starts an ACK timer.</p> </li> <li> <p>C receives RTS frame, assert virtual channel busy, indicated by NAV(Network Allocation Vector)</p> </li> <li> <p>D hears CTS, assert NAV</p> </li> <li> <p>Note: the NAV signals are NOT transmitted; they are just internal reminder to keep quiet for a certain period of time.</p> </li> </ul> <p>\u5e27\u7ed3\u6784</p> <p></p> <p>\u524d 30 \u5b57\u8282\u4e3a MAC \u9996\u90e8\u3002\u5176\u4e2d\u6709 4 \u4e2a MAC \u5730\u5740\uff0c\u7b2c\u56db\u4e2a\u7528\u4e8e\u81ea\u7ec4\u7f51\u7edc\u3002\u6839\u636e To DS \u548c From DS \u4fe1\u53f7\uff0c\u4e09\u4e2a\u5730\u5740\u5206\u914d\u5982\u4e0b\uff1a</p> To DS From DS 1 2 3 0 1 \u63a5\u6536 = \u76ee\u7684\u5730\u5740 \u53d1\u9001 = AP \u5730\u5740 \u6e90\u5730\u5740 1 0 \u63a5\u6536 = \u76ee\u7684\u5730\u5740 \u53d1\u9001 = \u6e90\u5730\u5740 \u76ee\u7684\u5730\u5740 <p>\u5e27\u4e3b\u4f53\u4e0d\u8d85\u8fc7 2312 bytes\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#data-link-layer-switching","title":"Data Link Layer Switching","text":"<ul> <li> <p>We can use bridges (or switches) to join multiple physical LANs into a single logical LAN.</p> </li> <li> <p>We can also treat one physical LAN as multiple logical LANs, called VLANs (Virtual LANs)\u3002</p> </li> </ul>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#physical-lan","title":"physical LAN","text":"<p>Bridges examine the data link layer addresses to do routing, can transport IPv4, IPv6, AppleTalk, ATM, etc.</p> <p></p> Text Only<pre><code>\u4e0a\u56fe\u4e2d (b) \u6709\u51e0\u4e2a\u78b0\u649e\u57df\uff1f\n7 \u4e2a (Hub \u6240\u8fde\u7684\u6240\u4e00\u4e2a\uff0c\u5176\u4f59\u4e00\u4e2a\u7aef\u53e3\u4e00\u4e2a)\n</code></pre> <p>Bridge \u9700\u8981\u51b3\u5b9a\u5bf9\u5e27\u8fdb\u884c\u4f20\u8f93\u8fd8\u662f\u4e22\u5f03\u3002\u4e00\u4e2a\u7b80\u5355\u5b9e\u73b0\u662f\u5efa\u7acb\u4e00\u4e2a\u54c8\u5e0c\u8868\uff0c\u5176\u4e2d\u5217\u51fa\u6240\u6709\u7aef\u53e3\u7684\u6bcf\u4e2a\u53ef\u80fd\u7684\u76ee\u6807\u3002</p> <p>\u82e5\u521d\u6b21\u8fde\u63a5\uff0c\u4f1a\u4f7f\u7528 flooding algorithm \u8fdb\u884c\u68c0\u6d4b (\u9664\u4e86\u6e90\u7aef\u53e3\uff0c\u6240\u6709\u7aef\u53e3\u90fd\u8fdb\u884c\u8f6c\u53d1)\uff1a</p> <ul> <li>Every incoming frame for an unknown destination is output on all the ports to which the bridge is connected except the one it arrived on\u3002</li> <li>Once a destination is known, frames destined for it are put only on the proper port\u3002</li> </ul> <p>\u7f51\u7edc\u7ed3\u6784\u662f\u52a8\u6001\u7684\uff0cbridge \u4f1a\u5728\u54c8\u5e0c\u8868\u4e2d\u8bb0\u5f55\u6700\u65b0\u7684\u5e27\u7684\u5230\u8fbe\u65f6\u95f4\uff0c\u5b9a\u671f\u6e05\u9664\u957f\u65f6\u95f4\u672a\u4f7f\u7528\u7684\u6761\u76ee\u3002</p> <p>Bridge \u4f1a\u91cd\u65b0\u7f16\u5199 header\u3002</p> <p></p> <p>Spanning Tree Bridges</p> <p>\u7f51\u7edc\u62d3\u6251\u56fe\u4e2d\u53ef\u80fd\u6709\u56de\u8def\uff0c\u4f1a\u9020\u6210\u95ee\u9898\u3002</p> <p></p> <p>\u4ee5 MAC \u5730\u5740\u6700\u4f4e\u7684 switch \u4e3a\u6839\u8282\u70b9\uff0c\u4ee5\u79bb\u6839\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5efa\u7acb spanning tree\u3002</p> <p></p> <p>Note</p> <ol> <li>\u6240\u6709\u4ea4\u6362\u673a\u4e00\u5f00\u59cb\u5747\u8ba4\u4e3a\u81ea\u5df1\u4e3a root</li> <li>\u4ea4\u6362\u673a\u5b9a\u671f\u5411\u81ea\u5df1\u7684\u90bb\u5c45\u53d1\u9001\u66f4\u65b0 (\u81ea\u8eab MAC\uff0c\u6839 MAC\uff0c\u5230\u6839\u7684\u8ddd\u79bb)</li> <li>\u4ea4\u6362\u673a\u4f1a\u4f7f\u7528\u66f4\u77ed\u7684\u8ddd\u79bb</li> </ol> <p>Note</p> <ol> <li>Hub and Reapter(\u6e05\u7406\u3001\u653e\u5927\u8f93\u5165\u4fe1\u53f7)\uff1aPhysical layer</li> <li>Bridges and Switches\uff1aData Link Layer</li> <li>Routers\uff1aNetwork Layer</li> <li>Gateways\uff1aTransmission Layer</li> </ol>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#vlan","title":"VLAN","text":"<p>\u4e0d\u540c\u989c\u8272\u4ee3\u8868\u5c5e\u4e8e\u4e0d\u540c\u7684 VLAN\u3002GW \u7b49\u540c\u4e8e vlan trunk\u3002</p> <p>\u4ea4\u6362\u673a\u5b9e\u9645\u4e0a\u6839\u636e vlan tag \u8fdb\u884c\u8f6c\u53d1\u3002</p> <p>802.1Q \u5e27</p> <p></p> <p>\u8f6c\u53d1\u8fc7\u7a0b\u6839\u636e VLAN identifier (12 bits) \u8fdb\u884c\u8f6c\u53d1\u3002\u53ef\u4ee5\u51b3\u5b9a 4096 \u4e2a vlan\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#network-layer","title":"Network Layer","text":"<p>2023 / 11 / 14</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#overview_1","title":"Overview","text":"<p>\u7f51\u7edc\u5c42\u4e3b\u8981\u8003\u8651\u5982\u4f55\u4ece\u53d1\u9001\u7aef\u5230\u63a5\u6536\u7aef\u6536\u53d1\u6570\u636e\u5305\uff0c\u662f\u6700\u540e\u4e00\u5c42\u8003\u8651 end-to-end \u4f20\u8f93\u7684\u7f51\u7edc\u5c42\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_23","title":"\u7f51\u7edc\u5c42 / \u8def\u7531\u5668\u7684\u529f\u80fd","text":"<p>\u6bcf\u4e2a\u8def\u7531\u5668\u5185\u90e8\u90fd\u6709\u4e00\u4e2a\u8f6c\u53d1\u8868\uff0c\u6839\u636e packet \u7684\u4fe1\u606f\u51b3\u5b9a\u8f6c\u53d1\u7684\u94fe\u8def\u3002</p> <ul> <li>forwarding (\u8f6c\u53d1\uff0c\u4e3b\u8981\u529f\u80fd)\uff1a\u51b3\u5b9a\u8def\u7531\u5185\u90e8\u7684\u63a5\u6536\u8f6c\u53d1\u63a5\u53e3\u3002Forwarding refers the router-local action\u3002</li> <li>Routing (\u5efa\u7acb\u8f6c\u53d1\u8868)\uff1a\u7531\u8def\u7531\u534f\u8bae\u51b3\u5b9a\u8def\u5f84\u3002Routing refers to the network-wide process (\u5206\u4e3a\u4e2d\u5fc3\u5316\u548c\u5206\u5e03\u5f0f\u4e24\u79cd)\u3002</li> </ul> <p></p> <p>Packet \u5728\u5b8c\u5168\u5230\u8fbe\u4e0b\u4e00\u8def\u7531\u5668\u4e4b\u524d\u4f1a\u5728\u8def\u7531\u5668\u4e4b\u4e2d\u5b58\u50a8\uff0c\u5e76\u8fdb\u884c\u6821\u9a8c\u3002\u82e5\u6821\u9a8c\u4e0d\u901a\u8fc7\u5c06\u76f4\u63a5\u4e22\u5305\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#implementation-of-connectionless-service","title":"Implementation of Connectionless Service","text":"<p>\u6570\u636e\u5305\u4e5f\u79f0\u4e3a datagram\uff0c\u5728\u7f51\u7edc\u4e2d\u72ec\u7acb\u4f20\u8f93\u3002</p> <p></p> <p>\u6bcf\u4e2a\u8def\u7531\u4e2d\u90fd\u6709\u4e00\u4e2a\u52a8\u6001\u53d8\u5316\u7684\u8f6c\u53d1\u8868\u3002</p> <p>\u6bcf\u4e2a\u6570\u636e\u5305\u4e2d\u90fd\u5305\u542b\u4e00\u4e2a\u6807\u8bc6\u7801\uff0c\u7528\u4e8e\u6807\u8bc6\u5176\u5c5e\u4e8e\u54ea\u4e2a\u865a\u62df\u7f51\u7edc\u3002</p> <p>VC \u53ea\u6709\u5728\u65b0\u7684\u94fe\u8def\u5efa\u7acb\u65f6\u624d\u4f1a\u66f4\u6539\u8f6c\u53d1\u8868\uff0c\u800c Datagram \u968f\u65f6\u5728\u53d8\u5316\u3002</p> <p></p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_24","title":"\u8def\u7531\u7b97\u6cd5","text":"<p>\u7531\u4e24\u7c7b\u8def\u7531\u7b97\u6cd5\uff1a\u5168\u5c40\u8def\u7531\u7b97\u6cd5\u3001\u5206\u5e03\u5f0f\u8def\u7531\u7b97\u6cd5 (\u4e0d\u9700\u8981\u77e5\u9053\u5168\u5c40\u7684\u7f51\u7edc\u62d3\u6251\u7ed3\u6784)\u3002\u4e5f\u53ef\u4ee5\u5206\u4e3a\u9759\u6001\u8def\u7531\u7b97\u6cd5\u3001\u52a8\u6001\u8def\u7531\u7b97\u6cd5\u3002</p> <p>\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u7f51\u5740\ud83d\udc47</p> <p>\u8def\u7531\u7b97\u6cd5\u4e4b\u8ddd\u79bb\u77e2\u91cf\u7b97\u6cd5\u548c\u94fe\u8def\u72b6\u6001\u7b97\u6cd5-CSDN\u535a\u5ba2</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#the-link-state-ls-routing-algorithm","title":"the Link-State (LS) Routing Algorithm","text":"<p>\u7f51\u7edc\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u9700\u8981\u638c\u63e1\u5b8c\u5168\u7684\u7f51\u7edc\u62d3\u6251\u4fe1\u606f\u3002</p> <ol> <li>\u9700\u8981\u4e3b\u52a8\u6d4b\u8bd5\u6240\u6709\u76f8\u90bb\u8282\u70b9\u7684\u72b6\u6001\u3002</li> <li>\u5b9a\u671f\u5411\u94fe\u8def\u4e2d\u7684\u8282\u70b9\u4f20\u8f93\u94fe\u8def\u7684\u72b6\u6001\u3002</li> </ol> <p>\u5f53\u72b6\u6001\u62a5\u6587\u5230\u8fbe\u65f6\uff0c\u8def\u7531\u8282\u70b9\u66f4\u65b0\u81ea\u5df1\u7684\u7f51\u7edc\u62d3\u6251\u548c\u72b6\u6001\u201c\u89c6\u91ce\u56fe\u201d\uff0c\u4e00\u822c\u4f7f\u7528 Dijkstra \u7b97\u6cd5\u8ba1\u7b97\u67d0\u4e00\u7ed3\u70b9\u5230\u6240\u6709\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002</p> <p>\u94fe\u8def\u72b6\u6001\u8def\u7531\u7b97\u6cd5\u7531\u4e09\u4e2a\u91cd\u8981\u7684\u7279\u5f81\uff1a</p> <ol> <li>\u5411\u672c\u7cfb\u7edf\u4e2d\u6240\u6709\u8def\u7531\u53d1\u9001\u4fe1\u606f\uff0c\u4f7f\u7528 flooding \u7684\u65b9\u6cd5\u3002</li> <li>\u53d1\u9001\u7684\u4fe1\u606f\u662f\u8def\u7531\u5668\u76f8\u90bb\u7684\u6240\u6709\u8def\u7531\u5668\u7684\u72b6\u6001\u3002</li> <li>\u53ea\u6709\u5f53\u94fe\u8def\u7684\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u8def\u7531\u5668\u624d\u4f1a\u5411\u6240\u6709\u7684\u8def\u7531\u53d1\u9001\u4fe1\u606f\u3002</li> </ol> <p></p> <p>LS \u7b97\u6cd5\u53ef\u80fd\u4f1a\u5b58\u5728\u9707\u8361\u7684\u95ee\u9898\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#the-distance-vector-dv-routing-algorithm","title":"The Distance Vector (DV) Routing Algorithm","text":"<p>\u76f8\u6bd4 LS \u7b97\u6cd5\uff0cDV \u4e0d\u9700\u8981\u77e5\u9053\u5168\u5c40\u7684\u62d3\u6251\u7ed3\u6784\u3002</p> <p>\u91c7\u7528\u8fed\u4ee3\u7684\u65b9\u6cd5\u8fdb\u884c\u94fe\u8def\u8ba1\u7b97\uff0c\u76f4\u5230\u8fdb\u884c\u5230\u6ca1\u6709\u4fe1\u606f\u9700\u8981\u66f4\u65b0\u4e3a\u6b62\u3002\u4e0d\u8981\u6c42\u6240\u6709\u8282\u70b9\u540c\u6b65\u3002</p> <p>Bellman-Ford Equation\uff1a\\(d_x(y) = min_v\\{c(x, v)+d_y(v)\\}\\)</p> <p>\\(d_x(y)\\) \u6307\u7684\u662f x \u8282\u70b9\u5230 y \u8282\u70b9\u6700\u4f4e\u6210\u672c\u7684\u8def\u5f84\u3002\u4e0a\u8ff0\u65b9\u7a0b\u4f1a\u68c0\u67e5 x \u7684\u6240\u6709\u90bb\u8fd1\u8282\u70b9\u3002</p> <p>\\(\\boldsymbol{D}_x(y)=[D_x(y), y\\,\\,in\\,\\,N]\\) \u662f x \u5230\u6240\u6709\u8282\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u7ec4\u6210\u7684\u8ddd\u79bb\u5411\u91cf\u3002 </p> <p>Note</p> <p>\u4f8b\uff1a </p> <p>\u53ef\u80fd\u5b58\u5728 The Count-to-Infinity Problem\uff0cy \u88ab\u544a\u77e5\u7531\u4e00\u6761\u94fe\u8def\uff0c\u4f46\u81ea\u5df1\u65e0\u6cd5\u786e\u5b9a\u81ea\u5df1\u662f\u5426\u5904\u5728\u94fe\u8def\u4e0a\u3002</p> <p></p> <p>\u4e24\u79cd\u7b97\u6cd5\u5bf9\u6bd4\uff1a</p> <p></p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_25","title":"\u5c42\u6b21\u8def\u7531","text":"<p>\u5c06\u591a\u4e2a\u8def\u7531\u5668\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u7ec4 regions\u3002\u5176\u4ed6\u533a\u57df\u7684\u5185\u90e8\u4fe1\u606f\u5411\u672c\u533a\u57df\u9690\u85cf\u3002\u53ef\u4ee5\u7f29\u5c0f forwaring table\u3002</p> <p></p> <p>\u82e5\u4e00\u4e2a\u7f51\u7edc\u4e2d\u6709 N \u4e2a\u8def\u7531\u5668\uff0c\u6700\u4f18\u7684\u5c42\u7ea7\u4e3a \\(lnN\\)\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#_26","title":"\u5e7f\u64ad\u8def\u7531","text":"<p><code>\u65b9\u5f0f1</code>\uff1a\u5411\u6bcf\u4e2a\u76ee\u7684\u5730\u53d1\u9001\u4e00\u4e2a\u526f\u672c\u6570\u636e\u5305\u3002\u6548\u7387\u8f83\u4f4e\uff0c\u4e14\u6e90\u8def\u7531\u9700\u8981\u6709\u6240\u6709\u7684\u76ee\u7684\u5730\u7684\u8def\u5f84\u3002</p> <p><code>\u65b9\u5f0f2</code>\uff1aMultidestination routing\uff0c\u6bcf\u4e2a\u6570\u636e\u5305\u90fd\u5305\u542b\u76ee\u7684\u5730\u5217\u8868 (\u591a\u4e2a\u76ee\u6807)\uff0c\u5230\u8fbe\u4e00\u4e2a\u8def\u7531\u5668\u540e\uff0c\u4f1a\u4e3a\u6bcf\u4e2a\u76ee\u7684\u5730\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u526f\u672c\uff0c\u8bbe\u7f6e\u76f8\u5e94\u7684\u8def\u7ebf\u3002\u4f7f\u7528\u6548\u7387\u6709\u6240\u63d0\u9ad8\u3002</p> <p><code>\u65b9\u5f0f3</code>\uff1aFlooding\uff0c</p> <ul> <li>Uncontrolled\uff0c\u7b80\u5355\u5730\u8f6c\u53d1\uff0c\u6548\u7387\u8f83\u4f4e\uff0c\u53ef\u80fd\u9020\u6210 Broadcast storm\u3002</li> <li>Sequence-number-controlled flooding\uff0c\u6e90\u8282\u70b9\u5411\u90bb\u8fd1\u8282\u70b9\u53d1\u9001\u81ea\u5df1\u7684\u5730\u5740\u4ee5\u53ca  broadcast sequence number\u3002\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u5b83\u5df2\u7ecf\u63a5\u6536\u3001\u590d\u5236\u548c\u8f6c\u53d1\u7684\u6bcf\u4e2a\u5e7f\u64ad\u6570\u636e\u5305\u7684\u6e90\u5730\u5740\u548c\u5e8f\u5217\u53f7\u7684\u5217\u8868\u3002\u5f53\u4e00\u4e2a\u8282\u70b9\u63a5\u6536\u5230\u4e00\u4e2a\u5e7f\u64ad\u6570\u636e\u5305\u65f6\uff0c\u5b83\u9996\u5148\u68c0\u67e5\u8be5\u6570\u636e\u5305\u662f\u5426\u5728\u6b64\u5217\u8868\u4e2d\u3002\u5982\u679c\u662f\uff0c\u5219\u4e22\u5f03\u5305\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u5305\u88ab\u590d\u5236\u5e76\u8f6c\u53d1\u7ed9\u8282\u70b9\u7684\u6240\u6709\u90bb\u90bb\u8fd1\u8282\u70b9\uff0c\u91cd\u590d\u8be5\u8fc7\u7a0b\u3002</li> <li>Reverse path forwarding (RPF)\uff0c\u63a5\u6536\u5230\u5e7f\u64ad\u5305\u540e\u4f1a\u68c0\u67e5\u662f\u5426\u5904\u4e8e\u5e38\u7528\u7684\u5e7f\u64ad\u94fe\u8def\u4e0a\uff0c\u662f\u7684\u8bdd\u8f6c\u53d1\uff0c\u4e0d\u662f\u7684\u8bdd\u4e22\u5f03\u3002</li> <li>Spanning-Tree Broadcast\uff0c\u5efa\u7acb\u4e00\u9897\u5c55\u5f00\u6811\u7528\u4e8e\u5e7f\u64ad\u3002</li> </ul> <p>Note</p> <p>Unicast - a single destination Broadcast - to all destinations Multicast - to a group of destinations</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#the-network-layer-in-the-internet","title":"The network layer in the Internet","text":""},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#ip-protocol","title":"IP Protocol","text":"<p>\u4e00\u5b9a\u5305\u542b\u4e00\u4e2a header (\u81f3\u5c11 20 bytes\uff0c\u524d 5 \u884c)\u3002\u7f51\u7edc\u5f53\u4e2d\u5b57\u8282\u7684\u6392\u5217\u4e3a\u5927\u7aef\u3002</p> <ul> <li>Version\uff1a\u7248\u672c\u53f7\uff0cIPv4 \u4e3a 4\u3002</li> <li>IHL (header length)\uff1aheader \u6709\u591a\u957f\uff0c\u82e5\u4e3a 0xF \u8868\u793a\u6709 15 \u4e2a 4 bytes\uff0c\u6240\u4ee5 option \u6700\u591a 40 bytes\u3002</li> <li>Different Service (Type of Service)\uff1a\u524d 6 bits \u7528\u4e8e\u6807\u8bc6\u670d\u52a1\u7c7b\uff0c\u540e\u4e24\u4f4d\u7528\u4e8e\u8868\u793a\u62e5\u585e\u63a7\u5236\u3002</li> <li>Total Length\uff1a\u6570\u636e + header \u4e00\u5171\u53ef\u4ee5\u591a\u957f\uff0c\u6570\u636e\u6700\u957f\u4e3a 65515 = 65535 - 20\u3002</li> <li>Identification\uff1a\u8ba1\u6570\u5668\uff0c\u6bcf\u6b21\u4ea7\u751f\u4e00\u4e2a\u6570\u636e\u5305\u5c31\u81ea\u589e\u3002\u82e5\u6570\u636e\u62a5\u7684\u957f\u5ea6\u8d85\u8fc7 MTU (Path Maximum Transmission Unit) \u65f6\uff0c\u5219\u5fc5\u987b\u5206\u5305\uff0c\u5206\u5305\u7684\u6807\u8bc6\u4e0e\u5206\u5305\u524d\u4e00\u81f4\uff0c\u4ee5\u4fbf\u540e\u7eed\u80fd\u91cd\u65b0\u7ec4\u88c5\u3002</li> <li>DF\uff1a\u4e3a 0 \u65f6\u5141\u8bb8\u5206\u5305\u3002</li> <li>MF\uff1a\u4e3a 1 \u65f6\u8868\u793a\u540e\u7eed\u8fd8\u6709\u5206\u5305\uff0c\u4e3a 0 \u8868\u793a\u540e\u7eed\u6ca1\u6709\u5206\u5305\u3002</li> <li>Fragment Offset\uff1a\u6307\u5b9a\u5206\u5305\u540e\u5728\u539f\u6570\u636e\u4e2d\u7684\u76f8\u5bf9\u4f4d\u7f6e\u3002\u4ee5 8 bytes \u4e3a\u5355\u4f4d\u8fdb\u884c\u504f\u79fb\u3002</li> <li>TTL (\u751f\u5b58\u65f6\u95f4)\uff1a\u53ef\u901a\u8fc7\u8def\u7531\u7684\u6700\u5927\u6570\u503c\uff0c\u8f6c\u53d1\u524d\u4f1a\u5c06\u5176\u51cf 1\u3002</li> <li>Protocal\uff1a\u9700\u8981\u4e0a\u4ea4\u4f55\u79cd\u534f\u8bae\u5904\u7406\u3002</li> <li> <p>Header checksum\uff1a\u7531\u4e8e TTL \u7684\u66f4\u6539\uff0c\u6bcf\u6b21\u8f6c\u53d1\u540e checksum \u9700\u8981\u91cd\u65b0\u5b58\u50a8\u3002</p> </li> <li> <p>The maximum payloads of different networks</p> </li> <li> <p>Ethernet - 1500 bytes</p> </li> <li> <p>802.11 - 2272 bytes</p> </li> <li> <p>IP - 65515 bytes</p> </li> <li>\u6545\u6570\u636e\u53ef\u80fd\u4f1a\u9700\u8981\u5206\u5305</li> </ul> <p>Fragment</p> <p>\u6709\u4e24\u79cd\u91cd\u7ec4\u65b9\u5f0f\uff1a</p> <ul> <li>Transparent fragmentation\uff1a\u6bcf\u4e2a\u8def\u7531\u5668\u63a5\u6536\u5230\u6240\u6709\u7247\u6bb5\u540e\u624d\u80fd\u91cd\u7ec4\uff0c\u4e14\u6570\u636e\u5305\u9700\u8981\u6765\u5230\u540c\u4e00\u4e2a\u8def\u7531\u5668\u3002</li> <li>Nontransparent fragmentation\uff1a\u7247\u6bb5\u53ea\u4f1a\u5728\u76ee\u6807\u4e3b\u673a\u4e0a\u91cd\u7ec4\u3002</li> </ul> <p></p> <p></p> <p>\u6ce8\u610f\u9700\u8981\u51cf\u53bb header \u7684\u957f\u5ea6\u3002\u6bcf\u4e2a\u5305\u90fd\u9700\u8981\u52a0\u4e0a header\u3002</p> <p>\u82e5\u4e0d\u5e0c\u671b\u8fdb\u884c\u5206\u5305\uff0c\u5219\u9700\u8981\u8fdb\u884c path MTU discovery\u3002\u4f46\u8fd9\u4f1a\u5e26\u6765\u4e00\u4e9b\u65f6\u5ef6\u3002</p> <p></p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#ip-addressing","title":"IP addressing","text":"<p>IPv4 \u5730\u5740\u4e3a 32 bit\u3002\u8def\u7531\u5668\u7528\u4e8e\u8fde\u63a5\u4e0d\u540c\u7684\u5b50\u7f51\uff0c\u4e00\u4e2a\u63a5\u53e3\u5bf9\u5e94\u4e00\u4e2a IP \u5730\u5740\u3002IP \u5730\u5740\u5e76\u4e0d\u7279\u6307\u67d0\u4e00\u53f0\u4e3b\u673a\uff0c\u4e00\u822c\u6307\u67d0\u4e00\u63a5\u53e3\u3002</p> <p></p> <p>Prefix \u5b9e\u9645\u6307\u5b50\u7f51\u63a9\u7801 subnet mask\u3002\u5b50\u7f51\u63a9\u7801\u4e5f\u53ef\u4ee5\u8868\u793a\u4e3a /N (/24 \u8868\u793a\u524d\u7f00\u957f 24 bit)\u3002</p> <p>\u82e5\u5b50\u7f51\u63a9\u7801\u957f 32 bit\uff0c\u8be5\u5b50\u7f51\u4ec5\u6709\u4e00\u4e2a\u5730\u5740\u3002</p> <p>Note</p> <p>\u5224\u5b9a\u5b50\u7f51\u4e2a\u6570\uff1a \u6839\u636e\u6709\u51e0\u4e2a\u5b64\u5c9b\u6765\u8ba1\u7b97\u3002</p> <p></p> <p>\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\uff0c\u5bf9\u5916\u53ea\u6709\u4e00\u4e2a IP \u5730\u5740\uff0c\u4f46\u5185\u90e8\u53ef\u4ee5\u91cd\u65b0\u5206\u914d\u3002</p> <p>CIDR - Classless InterDomain Routing</p> <p>\u82e5\u4e0d\u8fdb\u884c\u5206\u7ea7\uff0c\u5219\u4f1a\u4f7f routing table \u53d8\u5f97\u8fc7\u4e8e\u5e9e\u5927\u3002</p> <p>CIDR \u7684\u8bbe\u8ba1\u6838\u5fc3\u5982\u4e0b\uff1a</p> <ul> <li> <p>Subnetting (\u5bf9\u5916): split IP prefixes</p> </li> <li> <p>Route aggregation (\u5bf9\u5185): combine multiple small prefixes into a single larger prefix.</p> </li> </ul> <p></p> <p>Note</p> <p>\u4f8b\uff1a  \u89e3\u7b54\uff1a </p> <p>Warning</p> <p>\u4e3b\u673a\u5168 0 \u7684 ip \u7528\u4e8e\u8868\u793a\u67d0\u4e00\u5b50\u7f51\u3002 \u5168 1 \u8868\u793a\u5e7f\u64ad\u5730\u5740\u3002 127.0.0.1 \u8868\u793a\u672c\u673a\u7684\u5730\u5740\u3002</p> <p>NAT - Network Address Translation</p> <p>\u7531\u4e8e IP \u5730\u5740\u6570\u91cf\u4e0d\u8db3\uff0c\u53ef\u4ee5\u4f7f\u7528 NAT \u5bf9\u5916 (public) \u5c01\u88c5\uff0c\u83b7\u5f97\u66f4\u591a\u5bf9\u5185 (private) \u7684 IP \u5730\u5740\u3002</p> <p>\u81ea\u5916\u5411\u5185\u4f20\u64ad\u65f6\uff0c\u4f7f\u7528\u7aef\u53e3\u53f7\u533a\u5206\u4e0d\u540c\u7684\u4e3b\u673a\u3002\u7aef\u53e3\u53f7\u4e3a\u5e94\u7528\u5c42\u7684\u6982\u5ff5\u3002</p> <p></p> <p><code>Ports</code>\uff1a\u989d\u5916\u7684 16 bit \u6570\u636e\u3002\u5176\u4e2d 0  ~ 1023 \u4fdd\u7559\u7528\u4e8e\u7279\u5b9a\u7684\u7f51\u7edc\u670d\u52a1\uff0c\u5982 Port 80\u3002</p> <p>\u4f7f\u7528 NAT \u56de\u5e26\u6765\u4e00\u4e9b\u95ee\u9898\uff1a</p> <ol> <li>port \u672c\u8eab\u4e0d\u7528\u4f5c\u6807\u8bc6\u4e3b\u673a\u3002</li> <li>port \u4e3a\u5e94\u7528\u5c42\u7684\u6982\u5ff5\uff0c\u8def\u7531\u5668\u4e3a\u7f51\u7edc\u5c42\u7684\u8bbe\u5907\uff0c\u7406\u8bba\u4e0a\u4e0d\u80fd\u83b7\u53d6\u7aef\u53e3\u53f7\u3002</li> <li>\u6270\u4e71\u4e86 end-to-end \u7684\u53c2\u6570\u3002</li> <li>\u5c06 connectionless \u7684\u7f51\u7edc\u53d8\u4e3a connection-oriented\u3002</li> <li>\u82e5\u63d0\u4f9b NAT \u670d\u52a1\u7684\u8def\u7531\u51fa\u73b0\u6545\u969c\uff0c\u6574\u4e2a\u79c1\u57df\u7f51\u7edc\u90fd\u5c06\u4e0d\u80fd\u4f7f\u7528\u3002</li> </ol> <p>DHCP - Dynamic Host Configuration Protocol</p> <p>\u52a8\u6001\u914d\u7f6e\u7f51\u7edc\u3002\u5141\u8bb8\u4e3b\u673a\u5b66\u4e60\u5b50\u7f51\u63a9\u7801\u3001\u7b2c\u4e00\u8df3\u8def\u7531\u7684\u5730\u5740\u3002</p> <p>\u662f\u4e00\u4e2a\u201c\u5373\u63d2\u5373\u7528\u201d\u7684\u534f\u8bae\uff1a\u52a8\u6001\u7ed9\u4e3b\u673a\u5206\u914d\u5730\u5740\uff0c\u4e3b\u673a\u79bb\u5f00\u540e\u56de\u6536\u5730\u5740\u3002</p> <p>\u662f\u4e00\u4e2a\u201cclient-server\u201d\u7684\u534f\u8bae\uff1a\u6bcf\u4e2a\u5b50\u7f51\u90fd\u9700\u8981\u4e00\u4e2a DHCP \u670d\u52a1\u5668\uff0c\u82e5\u4e0d\u5b58\u5728\uff0c\u5219\u9700\u8981\u77e5\u9053\u4ee3\u7406\u7684\u8def\u7531\u5668\u3002</p> <p>\u9700\u8981\u6709\u4ee5\u4e0b\u56db\u6b65\u5b8c\u6210\uff1a</p> <ol> <li>DHCP server discovery\uff1a</li> <li>This is done using a DHCP discover message, which a client sends within a UDP packet to port 67.</li> <li>The UDP packet is encapsulated in an IP datagram with the broadcast destination IP address of 255.255.255.255 and a \u201cthis  host\u201d source IP address of 0.0.0.0.</li> <li>DHCP server offer(s)</li> <li>A DHCP server receiving a DHCP discovery message responds to the client with a DHCP offer message that is broadcast to all nodes on the subnet.</li> <li>Several DHCP servers can be present on the subnet, the client may choose from among several offers.</li> <li>DHCP request</li> <li>The newly arriving client will choose from among one or more server offers and respond to its selected offer with a DHCP request message echoing back the configuration parameters.</li> <li>DHCP ACK</li> <li>The server responds to the DHCP request message with a DHCP ACK message, confirming the requested parameters.</li> </ol> <p>\u6536\u5230 ACK \u4fe1\u53f7\u5373\u8bf4\u660e\u5b8c\u6210\u5206\u914d\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f DHCP \u5206\u914d\u7684 IP \u5730\u5740\u4f1a\u5b9a\u671f\u8fdb\u884c renew\u3002</p> <p>\u5206\u914d\u7684\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u5747\u4f7f\u7528\u5e7f\u64ad\u5305\u8fdb\u884c\u5206\u914d\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#ipv6","title":"IPv6","text":"<p>\u4f7f\u7528 128 bit \u5730\u5740\u3002</p> <p>\u4e0e IPv4 \u4e0d\u517c\u5bb9\uff0c\u4f46\u4e0e\u5176\u4ed6\u7684\u8bb8\u591a\u7f51\u7edc\u534f\u8bae\u517c\u5bb9\uff1b\u4e0d\u5141\u8bb8\u5206\u6bb5\u3001header \u66f4\u77ed\u3001\u65e0 checksum\uff0c\u4ee5\u5b9e\u73b0\u66f4\u5feb\u7684\u5904\u7406\u3002</p> <p></p> <p>Hop limit \u76f8\u5f53\u4e8e TTL\u3002Next Header \u7528\u4e8e\u6307\u660e\u4f20\u8f93\u5c42\u7684\u534f\u8bae\u3002</p> <p>IPv6 \u5730\u5740\u53ef\u4ee5\u538b\u7f29\u5168 0 \u7684\u90e8\u5206\uff1a</p> <p></p> <p>IPv4 \u4e5f\u53ef\u4ee5\u6539\u4e3a IPv6\uff1a</p> <p></p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#control-protocol","title":"Control Protocol","text":"<p>ICMP - Internet Control Message Protocol</p> <p>\u5e38\u7528\u4e8e\u62a5\u544a\u9519\u8bef\u4fe1\u606f\u3002</p> <p>\u5e38\u88ab\u8ba4\u4e3a\u662f IP \u7684\u4e00\u90e8\u5206\uff0c\u4f46\u5b9e\u9645\u4e0a\u5728 IP \u534f\u8bae\u4e4b\u4e0a\u3002\u5728 IP \u7684\u6570\u636e\u62a5\u4e2d\u88ab\u4f20\u8f93\u3002</p> <p></p> <p>\u4f8b\u5982\u8fdb\u884c ping \u6307\u4ee4\u65f6\uff0crequest \u53d1\u9001 type 8 code 0 \u7684\u4fe1\u606f\uff0creply \u53d1\u9001 type 0 code 0\u3002</p> <p>ARP - The Address Resolution Protocol</p> <p>\u5982\u4f55\u5c06 IP \u5c42\u7684\u5730\u5740\u6620\u5c04\u5230\u6570\u636e\u94fe\u8def\u5c42\u4e0a\u3002</p> <p>\u67e5\u8be2\u5b50\u7f51\u4e0a\u7684\u6240\u6709\u5176\u4ed6\u8282\u70b9\uff0c\u786e\u5b9a IP \u5730\u5740\u5bf9\u5e94\u7684 MAC \u5730\u5740\u3002</p> <p>ARP \u9996\u5148\u4f7f\u7528\u4e00\u4e2a\u5e7f\u64ad\u5305\u8fdb\u884c\u67e5\u8be2\uff0cMAC \u5730\u5740\u9996\u5148\u8bbe\u4e3a\u5168 1\u3002\u76ee\u7684\u5730\u7684 MAC \u521d\u59cb\u5316\u4e3a\u5168 0\u3002</p> <p>\u4e3a\u52a0\u901f\u4f20\u8f93\uff0c\u4f1a\u4f7f\u7528 cache \u7b56\u7565\uff0c\u5728 node \u4e0a\u5efa\u7acb ARP table\u3002\u5f53\u8bbe\u5907\u914d\u7f6e\u65b0\u7684 IP \u5730\u5740\u65f6\uff0c\u4f1a\u4f7f\u7528 Gratuitous ARP \u5305\u6765\u5bfb\u627e\u81ea\u5df1\u7684 IP \u5730\u5740\u3002</p> <p>\u4f7f\u7528 default gateway \u6765\u52a0\u901f\uff1a</p> <ul> <li> <p>Step 1: If host 1 does not know the MAC address of the default gateway (router) with the IP address (192.32.65.1), it discovers it by sending an ARP broadcasting packet, and find the MAC address (the Ethernet address) of the default gateway is E3.</p> </li> <li> <p>Step 2: Host 1 sends a frame (Src 192.32.65.7, E1; Dst 192.32.63.8, E3) to the default gateway. When the router gets this frame, it gives the packet to the IP software. It knows from the network masks that the packet should be sent onto the EE network where it will reach host 4.</p> </li> <li> <p>Step 3: If the router does not know the MAC address of host 4, it will use ARP again (The MAC address of host 4 is E6).</p> </li> <li> <p>Step 4: The router sends a frame (Src 192.32.65.7, E4; Dst192.32.63.8, E6)</p> </li> </ul> <p></p> <p>MAC \u5730\u5740\u968f\u7740\u6bcf\u4e2a\u7f51\u7edc\u4e0a\u7684\u5e27\u800c\u53d8\u5316\uff0c\u800cIP\u5730\u5740\u4fdd\u6301\u4e0d\u53d8\uff08\u56e0\u4e3a\u5b83\u4eec\u8868\u793a\u6240\u6709\u4e92\u8054\u7f51\u7edc\u4e0a\u7684\u7aef\u70b9\uff09\u3002</p> <p>\u4e0a\u8ff0\u7684\u7f51\u7edc\u4e5f\u53ef\u4ee5\u4f7f\u7528 Proxy ARP\uff1a</p> <ul> <li> <p>It is also possible to send a packet from host 1 to host 4 without host 1 knowing that host 4 is on a different network.</p> </li> <li> <p>The solution is to have the router answer ARPs on the CS network for host 4 and give its MAC address, E3, as the response.</p> </li> <li> <p>It is not possible to have host 4 reply directly because it will not see the ARP request (as routers do not forward Ethernet-level broadcasts). The router will then receive frames sent to 192.32.63.8 and forward them onto the EE network.</p> </li> </ul>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#routing-protocol","title":"Routing Protocol","text":"<p>Autonomous System</p> <p>\u5355\u4e00\u6280\u672f\u7ba1\u7406\u4e0b\u7684\u4e00\u7ec4\u8def\u7531\u5668\uff0c\u76f8\u4e92\u8fde\u901a\u3002</p> <p>\u81ea\u6cbb\u7cfb\u7edf\u5185\u90e8\u7684\u8def\u7531\u9009\u62e9\u4e3a\u57df\u5185\u8def\u7531\u9009\u62e9\uff0c\u4f7f\u7528\u5185\u90e8\u7f51\u5173\u534f\u8bae (IGP\uff1aRIP\u3001OSPF)\u3002</p> <p>\u81ea\u6cbb\u7cfb\u7edf\u4e4b\u95f4\u7684\u8def\u7531\u9009\u62e9\u4e3a\u57df\u95f4\u8def\u7531\u9009\u62e9\uff0c\u4f7f\u7528\u5916\u90e8\u7f51\u5173\u534f\u8bae (EGP\uff1aBGP)\u3002</p> <p>RIP \u8def\u7531\u4fe1\u606f\u534f\u8bae</p> <p>\u57fa\u4e8e DV \u7b97\u6cd5\u5b9e\u73b0\u3002\u6b64\u5904\u5c06\u8def\u7531\u5668\u4e4b\u95f4\u7684\u8ddd\u79bb\u5b9a\u4e49\u4e3a\u8df3\u6570 (Hop count)\u3002</p> <p>\u5141\u8bb8\u7684\u6700\u5927\u7684\u8df3\u6570\u4e3a 15\uff0c\u6545\u5176\u53ea\u9002\u7528\u4e8e\u5c0f\u578b\u7f51\u8def\u3002</p> <p>\u6bcf\u9694 30 \u79d2\u4e24\u4e2a\u8def\u7531\u5668\u4e4b\u95f4\u8fdb\u884c\u4e00\u6b21\u5e7f\u64ad\uff0c\u66f4\u65b0\u4fe1\u606f\u3002</p> <p>\u9ed8\u8ba4\u7684\u65e0\u6548\u65f6\u95f4\u4e3a 180s\uff0c\u8d85\u8fc7\u8be5\u65f6\u95f4\u4ecd\u672a\u6536\u5230\u4fe1\u606f\uff0c\u5219\u5c06\u8be5\u8def\u7531\u8def\u5f84\u8bbe\u7f6e\u4e3a\u65e0\u6548\uff0c\u8ba4\u4e3a\u4e0d\u53ef\u8fbe\uff0c\u4f46\u4ecd\u5728\u8def\u7531\u8868\u4e2d\u3002\u8d85\u8fc7 240s \u540e\u5c06\u88ab\u6e05\u9664\u3002</p> <p>\u4e0d\u652f\u6301\u5e26\u5b50\u7f51\u63a9\u7801\u7684\u5e7f\u64ad\uff0c\u6545 RIP \u7f51\u7edc\u4e2d\u6240\u6709\u7684\u5b50\u7f51\u63a9\u7801\u5e94\u8be5\u76f8\u540c\u3002</p> <p>RIP \u7f51\u7edc\u7684\u7279\u70b9\u5982\u4e0b\uff1a</p> <ul> <li>\u4ec5\u548c\u76f8\u90bb\u7684\u8def\u7531\u5668\u4ea4\u6362\u4fe1\u606f\u3002</li> <li>\u4ea4\u6362\u7684\u5185\u5bb9\u662f\u8def\u7531\u5668\u7684\u8def\u7531\u8868\u3002</li> <li>\u6309\u7167\u56fa\u5b9a\u7684\u65f6\u957f\u8fdb\u884c\u4ea4\u6362\u3002</li> </ul> <p>OSPF \u5f00\u653e\u5f0f\u6700\u77ed\u8def\u7531\u4f18\u5148\u534f\u8bae</p> <p>\u57fa\u4e8e LS \u7b97\u6cd5\u5b9e\u73b0\u3002\u4f7f\u7528\u5e7f\u64ad + dijkstra \u7b97\u6cd5\u5b9e\u73b0\u3002</p> <p>OSPF \u4e2d\u8ba1\u7b97 cost \u4e0e\u4f20\u8f93\u7684 data rate \u6709\u5173\uff0c\u901f\u7387\u8d8a\u9ad8\uff0ccost \u8d8a\u4f4e\u3002</p> <p></p> <p>\u82e5\u7f51\u7edc\u8f83\u5927\uff0cOSPF \u5141\u8bb8\u5c06\u4e00\u4e2a AS \u5206\u4e3a\u591a\u4e2a\u533a\u57df\u3002\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u4e3b\u5e72 area (area 0)\u3002\u5176\u4e2d\u7684\u8def\u7531\u5668\u5747\u4e3a\u4e3b\u5e72\u8def\u7531\u5668\uff0c\u5176\u4ed6\u7684\u533a\u57df\u90fd\u8981\u548c\u8be5\u533a\u57df\u76f4\u8fde\u6216\u5efa\u7acb\u76f8\u5e94\u7684\u865a\u62df\u94fe\u8def\u3002\u5176\u4f59 area \u4e4b\u95f4\u8981\u8fdb\u884c\u901a\u8baf\u5fc5\u987b\u7ecf\u8fc7\u4e3b\u5e72\u7f51\u3002</p> <p>ABR (area border router)\uff1a\u81f3\u5c11\u4e0e\u4e24\u4e2a area \u76f8\u8fde\u7684\u8def\u7531\u5668\u3002</p> <p>OSPF \u4e2d\u6240\u6709\u8def\u7531\u5668\u7684 link state database \u90fd\u662f\u76f8\u540c\u7684\u3002\u8981\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u8def\u7531\u5668\u4e4b\u95f4\u76f4\u63a5\u5efa\u7acb\u90bb\u63a5\u5173\u7cfb\u8f83\u4e3a\u4f4e\u6548\uff0c\u4e00\u4e2a area \u4e2d\u4f1a\u9009\u5b9a\u4e00\u4e2a designed router \u7528\u4ee5\u4ee3\u8868\u8be5 area \u4e2d\u7684 link state database\uff0c\u6b64\u5916\u8fd8\u4f1a\u9009\u5b9a\u4e00\u4e2a\u5907\u4efd\u7684\u8def\u7531\u5668\u589e\u52a0\u53ef\u9760\u6027\u3002</p> <p>BGP - The Exterior Gateway Routing Protocol</p> <p>\u5728 AS \u7ea7\u522b\u4e0a\u9009\u62e9\u8def\u5f84\uff0c\u5728 semipermanent TCP connections \u4e0a\u4f7f\u7528 179 \u7aef\u53e3\u4f20\u9012\u4fe1\u606f\u3002</p> <p></p> <p>BGP \u4e2d\u6bcf\u4e00\u4e2a AS \u90fd\u6709\u4e00\u4e2a\u5168\u5c40\u7684\u7279\u6709\u7684\u8bc6\u522b\u7801 (ASN)\u3002</p> <p>BGP \u7684\u524d\u7f00\u53ca\u5176\u5c5e\u6027\u88ab\u79f0\u4e3a\u8def\u7531\uff0c\u5e76\u4f1a\u5411\u5176\u4f59\u8def\u7531\u8fdb\u884c\u5e7f\u64ad\u3002</p> <p>Route advertisement \u5305\u62ec IP prefix\u3001AS-path\u3001next Hop\u3002\u63a5\u6536\u65f6\u4f1a\u68c0\u67e5 AS-path \u662f\u5426\u6709\u91cd\u590d\uff0c\u6709\u5219\u8bf4\u660e\u73af\u8def\uff0cadvertisement \u9700\u8981\u4e22\u5f03\u3002</p> <p></p> <p>AS-path \u4e0e\u6570\u636e\u4f20\u8f93\u7684\u65b9\u5411\u76f8\u53cd\u3002</p> <p></p> <p>\u6709\u5173 MPLS \u7684\u4ecb\u7ecd\u5982\u4e0b \ud83d\udc47</p> <p>MPLS\u534f\u8bae\u57fa\u672c\u77e5\u8bc6\u603b\u7ed3-CSDN\u535a\u5ba2</p> <p>\u591a\u64ad\u3002\u3002\u3002\u672a\u5b8c\u5f85\u7eed</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#transport-layer","title":"Transport Layer","text":"<p>2023 / 11 / 28</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#overview_2","title":"Overview","text":"<p>\u4f20\u8f93\u5c42\u9700\u8981\u5b9e\u73b0 end-to-end \u7aef\u5230\u7aef\u7684\u53ef\u9760\u4f20\u8f93\u3002</p> <p></p> <p>Transport address \u662f IP \u5730\u5740\u4e0e\u7aef\u53e3\u53f7\u7684\u7ec4\u5408\u3002\u4f20\u8f93\u5c42\u7684\u6570\u636e\u683c\u5f0f\u4e3a Segment\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#transport-services","title":"Transport Services","text":"<p>\u5206\u4e3a\u4e24\u7c7b\uff1a</p> <ul> <li>\u9762\u5411\u94fe\u63a5 Connection-oriented transport service\u3002\u9700\u8981\u7ecf\u8fc7\u5efa\u7acb\u3001\u4f20\u8f93\u3001\u91ca\u653e\u4e09\u4e2a\u8fc7\u7a0b\u3002</li> <li>\u65e0\u8fde\u63a5\u4f20\u8f93\u3002</li> </ul> <p>\u4f20\u8f93\u5c42\u4e0e\u7f51\u7edc\u5c42\u670d\u52a1\u7684\u533a\u522b\u5982\u4e0b\uff1a</p> <ul> <li>\u4f20\u8f93\u5c42\u7684\u4ee3\u7801\u8fd0\u884c\u5728\u4e3b\u673a (OS) \u4e0a\uff1b\u7f51\u7edc\u5c42\u8fd0\u884c\u5728\u8def\u7531\u5668\u4e0a\uff0c\u7528\u6237\u6ca1\u6709\u5bf9\u4e8e\u7f51\u7edc\u7684\u5b9e\u9645\u63a7\u5236\u6743\u3002</li> <li>\u7f51\u7edc\u5c42\u670d\u52a1\u53ef\u9760\u6027\u8f83\u5dee\u3002</li> <li>\u4f20\u8f93\u5c42\u534f\u8bae\u63d0\u9ad8\u4e86\u7f51\u7edc\u5c42\u534f\u8bae\u670d\u52a1\u7684\u8d28\u91cf\u3002</li> </ul> <p>Note</p> <p> \u4f20\u8f93\u5c42\u3001\u7f51\u7edc\u5c42\u3001\u6570\u636e\u94fe\u8def\u5c42\u7684\u6570\u636e\u683c\u5f0f</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#udp","title":"UDP","text":"<p>\u4e00\u79cd\u65e0\u8fde\u63a5\u7684\u4f20\u8f93\u534f\u8bae\u3002</p> <p></p> <p>\u4e00\u5171\u6709 8 \u5b57\u8282\u7684 header\u3002</p> <p>\u7531\u4e8e UDP length \u6709 16 \u4f4d\uff0cUDP \u5305\u7684\u6700\u5927\u957f\u5ea6\u4e3a \\(2^{16}-1\\,bytes\\)</p> <p>\u5176\u4e2d checksum \u53ef\u9009\uff0c\u5176\u4e3b\u8981\u68c0\u67e5\u4e86 header\uff0cdata \u4ee5\u53ca\u4e00\u4e2a conceptual IP pseudoheader\u3002\u5728\u8ba1\u7b97 checksum \u65f6\u82e5 data \u7684\u957f\u5ea6\u4e3a\u5947\u6570\uff0c\u5219\u4f1a\u4f7f\u7528\u5168 0 \u7684 bytes \u586b\u5145\u4e3a\u5076\u6570\u957f\u5ea6\u3002</p> <ul> <li>The IPv4 pseudoheader\uff1a\u5305\u62ec\u7f51\u7edc\u5c42\u4e2d\u7684\u76ee\u6807 IP \u548c\u6e90 IP\u3001UDP \u7684 protocol number (17)\u3001\u5305\u62ec\u4e86 header \u7684 UDP length\u3002</li> <li></li> </ul> <p>UDP \u53ef\u4ee5\u5b8c\u6210\u7684\u529f\u80fd\uff1a</p> <ul> <li>\u4f7f\u7528 ports \u8fdb\u884c\u591a\u8fdb\u7a0b\u590d\u7528\u3002</li> <li>\u4f7f\u7528 checksum \u8fdb\u884c end-to-end \u7684\u9519\u8bef\u68c0\u6d4b\u3002</li> </ul> <p>\u4e0d\u80fd\u5b8c\u6210\u7684\u529f\u80fd\uff1a</p> <ul> <li>Flow control, congestion control, or retransmission upon receipt of a bad segment.</li> </ul> <p>\u4f7f\u7528 UDP \u534f\u8bae\u7684\u5e94\u7528\u5c42\u534f\u8bae\u6709 DNS\u3001SSDP\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#rtp","title":"RTP","text":"<p>Real-Time Transport Protocol\uff0c\u4e3a\u4f20\u8f93\u5c42\u534f\u8bae\uff0c\u4f46\u662f\u5728\u5e94\u7528\u5c42\u4e2d\u5b9e\u73b0\u3002</p> <p></p> <p>RTP\u7684\u57fa\u672c\u529f\u80fd\u662f\u5c06\u591a\u4e2a\u5b9e\u65f6\u6570\u636e\u6d41\u590d\u7528\u5230\u5355\u4e2aUDP\u6570\u636e\u5305\u6d41\u4e0a\u3002UDP\u6d41\u53ef\u4ee5\u53d1\u9001\u5230\u5355\u4e2a\u76ee\u7684\u5730\uff08\u5355\u64ad\uff09\u6216\u53d1\u9001\u5230\u591a\u4e2a\u76ee\u7684\u5730\uff08\u591a\u64ad\uff09\u3002</p> <p>\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u51fa\u73b0\u5ef6\u8fdf\u4e22\u5305\u7b49\uff0c\u89e3\u51b3\u65b9\u5f0f\u662f\u5bf9 RTP stream \u4e2d\u6bcf\u4e00\u4e2a packet \u90fd\u65b0\u589e\u4e00\u4e2a\u9012\u589e\u7684\u6570\u5b57\u3002RTP \u6ca1\u6709\u786e\u8ba4\u7684\u8fc7\u7a0b\u3002</p> <p>RTP \u53ef\u80fd\u5305\u542b\u591a\u79cd\u683c\u5f0f\u7684\u6570\u636e\uff0c\u9700\u8981\u4f7f\u7528\u5408\u9002\u7684\u7f16\u7801\u3002</p> <p>\u6bcf\u4e2a\u6570\u636e\u5305\u4e0e\u65f6\u95f4\u6233\u76f8\u5173\u8054\uff0c\u5e76\u8fdb\u884c\u5c11\u91cf\u7684\u7f13\u5b58\u3002</p> <p></p> <p>Warning</p> <p>UDP \u5e38\u7528\u4e8e\u5b9e\u65f6\u4f20\u8f93</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#tcp","title":"TCP","text":"<p>\u65e8\u5728\u5728\u4e0d\u53ef\u9760\u7684\u7f51\u7edc\u94fe\u8def\u4e0a\u5efa\u7acb\u53ef\u9760\u7684\u7aef\u5230\u7aef\u7684\u4f20\u8f93\u3002</p> <p>\u7531\u4e8e\u7f51\u7edc\u6709\u4e0d\u540c\u7684\u7279\u6027\uff0cTCP \u9700\u8981\u8fdb\u884c\u52a8\u6001\u5730\u9002\u5e94\uff0c\u5e76\u5177\u5907\u4e00\u5b9a\u5730\u9c81\u68d2\u6027\u3002</p> <p>TCP \u670d\u52a1\u7531\u53d1\u9001\u7aef\u548c\u63a5\u6536\u7aef\u521b\u5efa socket \u5efa\u7acb\u3002</p> <p>\u6bcf\u4e2a socket \u90fd\u5305\u542b socket address\uff0c\u5305\u542b\u4e3b\u673a IP \u5730\u5740\u4ee5\u53ca\u7aef\u53e3\u53f7\u3002</p> <p>TCP \u662f\u5168\u53cc\u5de5\u7684\u70b9\u5bf9\u70b9\u7684\u4f20\u8f93\u534f\u8bae\uff0c\u4e0d\u80fd\u8fdb\u884c\u591a\u64ad\u6216\u5e7f\u64ad\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#tcp-service-model","title":"TCP Service Model","text":"<ul> <li>\u5e94\u7528\u6570\u636e\u5230\u8fbe\u65f6\uff0c\u53ef\u4ee5\u9009\u62e9\u9a6c\u4e0a\u53d1\u9001 (PUSH == 1) \u6216\u8fdb\u884c\u7f13\u51b2\u3002</li> <li>\u6709\u4f18\u5148\u7ea7\u7684\u6570\u636e\u5305\u5230\u8fbe\u65f6\uff0c\u4f18\u5148\u5904\u7406 (URGENT == 1)\u3002</li> </ul> <p>\u5404\u7c7b\u534f\u8bae\u5bf9\u4e8e\u7684\u7aef\u53e3\u53f7\u5982\u4e0b\uff1a</p> <p></p> <p>TCP \u4e2d\u4f7f\u7528\u7684\u6570\u636e\u683c\u5f0f\u4e3a segment\uff0c\u6709 20 \u5b57\u8282\u7684 header\uff0cIP payload \u6700\u5927\u4e3a \\(65535-20=65515\\,bytes\\) (\u5b9e\u9645\u7684 payload \u8fd8\u9700\u8981\u51cf\u53bb 20 \u5b57\u8282\u7684 IP header)\u3002Each link has an MTU (Maximum Transfer Unit)\u3002Header \u4e4b\u540e\u8fd8\u53ef\u80fd\u6709\u4e00\u4e9b option\u3002</p> <p>TCP \u534f\u8bae\u4f7f\u7528\u52a8\u6001\u7a97\u53e3\u5927\u5c0f\u7684\u534e\u4e1c\u7a97\u53e3\u534f\u8bae\u3002</p> <p>TCP connection \u4e2d\uff0c\u6bcf\u4e00\u4e2a\u5b57\u8282\u90fd\u6709\u4e00\u4e2a 32 \u4f4d\u7684\u5e8f\u5217\u53f7\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#header","title":"Header","text":"<p>\u4e0d\u5305\u542b\u4efb\u4f55\u6570\u636e\u7684 TCP segment \u5408\u6cd5\uff0c\u4e3b\u8981\u7528\u4e8e acknowledgements \u548c control messages\u3002</p> <p>The Acknowledgement number specifies the next in-order byte expected, not the last byte correctly received\u3002</p> <p>CWR &amp; ECE\uff1a\u5f53 ECN (Explicit Congestion Notification) \u542f\u7528\u65f6\u7528\u5230\u3002</p> <ul> <li>ECE \u7528\u4e8e\u544a\u77e5\u53d1\u9001\u7aef\u53ef\u80fd\u53d1\u751f\u62e5\u585e\uff0c\u4f7f\u7528 ECN-echo \u4fe1\u53f7\u3002</li> <li>CWR \u7528\u4e8e\u544a\u77e5\u63a5\u6536\u7aef\u53d1\u9001\u901f\u5ea6\u5df2\u7ecf\u653e\u7f13\uff0c\u53ef\u4ee5\u505c\u6b62\u53d1\u9001 ECN-echo \u4fe1\u53f7\u3002</li> </ul> <p>URG\uff1a\u5f53 Urgent pointer (\u8868\u793a\u7d27\u6025 byte \u5728\u6570\u636e\u4e2d\u7684\u504f\u79fb\u91cf) \u4f7f\u7528\u65f6\u7f6e 1\uff0c\u4f18\u5148\u63d0\u4ea4\u5e94\u7528\u5c42\u3002</p> <p>ACK\uff1a\u4e3a 1 \u8868\u793a acknowledgemnt number \u6709\u6548\uff0c\u4e3a 0 \u8868\u793a\u4e0d\u63a5\u53d7 (\u4f1a\u5ffd\u7565)\u3002</p> <p>PSH\uff1aindicates PUSHed data. The receiver is hereby kindly requested to deliver the data to the application upon arrival and not buffer it until a full buffer.</p> <p>RST\uff1ais used to abruptly reset a connection that has become confused due to a host crash or some other reason. It is also used to reject an invalid segment or refuse an attempt to open a connection.</p> <p>SYN\uff1a\u7528\u4e8e\u5efa\u7acb\u94fe\u63a5\u3002</p> <ul> <li> <p>The connection request has SYN = 1 and ACK= 0.</p> </li> <li> <p>SYN = 1 and ACK = 1: the connection reply does bear an acknowledgement.</p> </li> <li> <p>In essence, the SYN bit is used to denote both CONNECTION REQUEST and CONNECTION ACCEPTED, with the ACK bit used to distinguish between those two possibilities.</p> </li> </ul> <p>FIN\uff1a\u8868\u793a\u4f20\u8f93\u7ed3\u675f\uff0c\u518d\u65e0\u6570\u636e\u9700\u8981\u4f20\u8f93\u3002\u7531\u4e8e\u5728\u5173\u95ed\u7684\u8fc7\u7a0b\u4e2d\u4ecd\u80fd\u4f20\u8f93\uff0cSYN \u548c FIN \u5747\u6709\u5e8f\u5217\u53f7\uff0c\u786e\u4fdd\u80fd\u591f\u6b63\u786e\u5904\u7406 segments\u3002</p> <p>Window Size \u7528\u4e8e\u8868\u793a\u4ece\u786e\u8ba4\u7684\u5b57\u8282\u5f00\u59cb\u53d1\u9001\u591a\u5c11\u5b57\u8282\u3002\u4e3a 0 \u8868\u793a\u63a5\u6536\u65b9\u6682\u65e0\u6cd5\u7ee7\u7eed\u63a5\u6536\u6570\u636e\u3002</p>"},{"location":"notes/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91.html#connection-establish","title":"connection establish","text":"<p>\u5f00\u59cb\u65f6 SYN = 1\uff0cACK = 0\u3002\u4e0a\u8ff0\u5373\u4e3a\u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u94fe\u63a5\u7684\u8fc7\u7a0b\u3002</p> <ol> <li>establishing a connection \u5ba2\u6237\u7aef\u53d1\u9001\u8bf7\u6c42\uff0cTCP \u5305\u7684\u6570\u636e\u6bb5\u4e3a 0\u3002header \u4e2d\u6709 Initial sequence number\u3001SYN \u7f6e 1\u3001Maximum segment size\u3001Receiving window size\u3002</li> <li>After receiving the request segment\uff0c\u670d\u52a1\u5668\u56de\u590d\u5ba2\u6237\u7aef\u3002\u56de\u51fd\u5305\u542b\u4ee5\u4e0b\u4fe1\u606f\uff1aInitial sequence number\u3001Maximum segment size\u3001Receiving window size\u3001Acknowledgement number (SEQ + 1)\uff0cSYN \u548c ACK \u5747\u7f6e 1\u3002</li> <li>After receiving the reply segment\u3002\u53ef\u9009\u3002\u53d1\u9001\u4e00\u4e2a\u7eaf\u7cb9\u7684 ACK \u6570\u636e\u5305\u7528\u4e8e\u786e\u8ba4\u3002</li> </ol> <p>\u6709\u51e0\u70b9\u9700\u8981\u6ce8\u610f\uff1a</p> <ul> <li></li> </ul>"},{"location":"notes/%E8%BD%AF%E5%B7%A5/%E8%BD%AF%E5%B7%A5.html","title":"\u8f6f\u4ef6\u5de5\u7a0b","text":""},{"location":"notes/%E8%BD%AF%E5%B7%A5/%E8%BD%AF%E5%B7%A5.html#_1","title":"\u8f6f\u4ef6\u5de5\u7a0b","text":"<p>2024</p>"},{"location":"notes/%E8%BD%AF%E5%B7%A5/%E8%BD%AF%E5%B7%A5.html#nature-of-software","title":"Nature of software","text":"<p>Software - \u6784\u6210 configuration \u7684\u4e00\u7ec4\u5bf9\u8c61\uff0c\u5305\u62ec\uff1a</p> <ul> <li>instructions (computer programs)\uff1a\u6267\u884c\u671f\u671b\u7684\u529f\u80fd</li> <li>data structures\uff1a\u5145\u5206\u5229\u7528\u4fe1\u606f</li> <li>documents\uff1a\u63cf\u8ff0\u7a0b\u5e8f\u7684\u64cd\u4f5c\u548c\u4f7f\u7528</li> </ul> <p>\u8f6f\u4ef6\u4e0d\u4f1a\u5982\u786c\u4ef6\u4e00\u6837\u5b8c\u5168\u635f\u574f (wear out)\uff0c\u4f46\u662f\u4f1a\u968f\u7740\u7248\u672c\u66f4\u65b0\u9010\u6e10\u6076\u5316 (deteriorate)\u3002</p> <p>Note</p> <p>Software deteriorates rather than wears out because A) Software suffers from exposure to hostile environments B) Defects are more likely to arise after software has been used often C) Multiple change requests introduce errors in component interactions D) Software spare parts become harder to order C</p> <p>\u4e3a\u4f55 Legacy Software(\u65e7\u5f0f\u8f6f\u4ef6) \u5fc5\u987b\u66f4\u6539\uff1a</p> <ul> <li>software must be adapted to meet the needs of new computing environments or technology.</li> <li>software must be enhanced to implement new business requirements.</li> <li>software must be extended to make it interoperable with other more modern systems or databases.</li> <li>software must be re-architected to make it viable within a network environment.</li> </ul> <p>Product Line Software - \u4ea7\u54c1\u7ebf\u8f6f\u4ef6</p> <ul> <li>Product line software is a set of software-intensive systems that share a common set of features and satisfy the needs of a particular market</li> <li> <p>These software products are developed using the same application and data architectures using a common core of reusable software components</p> </li> <li> <p>A software product line shares a set of assets that include requirements, architecture, design patterns, reusable components, test cases, and other work products</p> </li> <li>A software product line allow in the development of many products that are engineered by capitalizing on the commonality among all products with in the product line</li> </ul> <p>Note</p> <p>The nature of software applications can be characterized by their information A) complexity B) content C) determinacy D) both b and c D</p>"},{"location":"notes/%E8%BD%AF%E5%B7%A5/%E8%BD%AF%E5%B7%A5.html#soft-engineering","title":"Soft Engineering","text":"<p>\u8f6f\u4ef6\u5de5\u7a0b - The application of a systematic, disciplined, quantifiable approach to the development, operation, and maintenance of software; that is, the application of engineering to software.</p> <p>\u4fdd\u62a4\u4f1e\u6d3b\u52a8 - \u8d2f\u7a7f\u8f6f\u4ef6\u5f00\u53d1\u5468\u671f\u7684\u4e00\u4e9b\u6d3b\u52a8\uff0c\u4f8b\u5982\u98ce\u9669\u7ba1\u63a7\u8d28\u91cf\u8bc4\u4f30\u3002</p> <p>Generic Process Framework</p> <ul> <li>Communication (customer collaboration and requirement gathering) </li> <li>Planning (establishes engineering work plan, describes technical risks, lists resource requirements, work products produced, and defines work schedule) </li> <li>Modeling (creation of models to help developers and customers understand the requires and software design) </li> <li>Construction (code generation and testing) </li> <li>Deployment (software delivered for customer evaluation and feedback)</li> </ul> <p>Note</p> <p>Most software continues to be custom built because A) Component reuse is common in the software world. B) Reusable components are too expensive to use. C) Software is easier to build without using someone else\\'s components. D) Off-the-shelf software components are available in many application domains. D</p>"}]}